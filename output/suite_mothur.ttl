@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix gal: <http://galaxyproject.org/ontologies/shed/> .
@prefix ngsp: <http://icc.ru/ontologies/NGS/processing/> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a gal:Suite ;
    ngsp:module [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$sff' sff.dat &&
ln -s '$accnos' accnos.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'sffinfo(
    sff=sff.dat,
    fasta=$fasta,
    qfile=$qfile,
    $sfftxt
    flow=$flow,
    trim=$trim
    #if $accnos:
        ,accnos=accnos.dat
    #end if
    #if $oligo.add == "yes":
        ,oligos=oligo.oligos.dat
        ,bdiffs=$oligo.bdiffs
        ,pdiffs=$oligo.pdiffs
        ,tdiffs=$oligo.tdiffs
        ,ldiffs=$oligo.ldiffs
        ,sdiffs=$oligo.sdiffs
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The sffinfo_ command will summarize the quality of sequences in an unaligned or aligned fasta-formatted sequence file.


.. _sffinfo: https://www.mothur.org/wiki/Sffinfo

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "add" ] ;
                            gal:when [ gal:param [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "sdiffs" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "pdiffs" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "ldiffs" ],
                                        [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "bdiffs" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "tdiffs" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:type "data" ;
                                            dc:title "oligos" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "oligo" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "qfile - Add qfile to your history" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "qfile" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "" ;
                            gal:label "sfftxt - Add sfftxt to your history" ;
                            gal:truevalue "sfftxt=true," ;
                            gal:type "boolean" ;
                            dc:title "sfftxt" ],
                        [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Limit output to named Accessions" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "accnos" ],
                        [ gal:format "sff" ;
                            gal:label "sff - Sff data" ;
                            gal:type "data" ;
                            dc:title "sff" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "trim - Trim sequences and quality scores" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "trim" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "flow - Add flow to your history" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "flow" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "fasta - Add fasta to your history" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "oligo['add'] == 'yes'" ;
                            gal:format "sff" ;
                            gal:from_work_dir "sff*.scrap.sff" ;
                            gal:label "${tool.name} on ${on_string}: scrap.sff" ;
                            dc:title "out_scrap" ],
                        [ gal:filter "qfile" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "sff*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            dc:title "out_qfile" ],
                        [ gal:filter "flow" ;
                            gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "sff*.flow" ;
                            gal:label "${tool.name} on ${on_string}: flowgram" ;
                            dc:title "out_flow" ],
                        [ gal:filter "sfftxt" ;
                            gal:format "txt" ;
                            gal:from_work_dir "sff*.sff.txt" ;
                            gal:label "${tool.name} on ${on_string}: sff.txt" ;
                            dc:title "out_sfftxt" ],
                        [ gal:filter "fasta" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "sff*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "out_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Summarize the quality of sequences" ;
            dc:identifier "mothur_sffinfo" ;
            dc:title "Sffinfo",
                "sffinfo" ;
            schema:sku 41 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$intype.otu' intype_otu.dat &&
#if $intype.infile == "otulist":
    ln -s '$intype.group' intype_group.dat &&
#end if

echo 'make.shared(
    #if $intype.infile == "biom":
        biom=intype_otu.dat
    #else
        #if $intype.group.is_of_type("mothur.groups"):
            group=intype_group.dat,
        #elif $intype.group.is_of_type("mothur.count_table"):
            count=intype_group.dat,
        #end if
        #if $intype.label:
            label=${ str($intype.label).replace(",","-") },
        #end if
        #if $intype.groups:
            groups=${ str($intype.groups).replace(",","-") },
        #end if
        list=intype_otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## move output files to correct destination
mv mothur.*.logfile "$logfile" &&
#if $intype.infile == 'otulist' and $intype.groups:
    mv intype_otu*.groups "$groupout"
#else
    mv intype_otu*.shared "$shared"
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.shared_ command takes a list_ and a group_ file and outputs a shared_ file, as well as a rabund_ file for each group.


.. _list: https://www.mothur.org/wiki/List_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _make.shared: https://www.mothur.org/wiki/Make.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select input type" ;
                                    gal:option [ gal:value "biom" ;
                                            dc:description "Biom 1.0 file" ],
                                        [ gal:value "otulist" ;
                                            dc:description "OTU list" ] ;
                                    gal:type "select" ;
                                    dc:title "infile" ] ;
                            gal:when [ gal:param [ gal:format "mothur.groups,mothur.count_table" ;
                                            gal:label "supply group or count table if you supplied OTU list" ;
                                            gal:type "data" ;
                                            dc:title "group" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:help "By default all are included if no selection is made." ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "otulist" ],
                                [ gal:param [ gal:format "biom1" ;
                                            gal:label "Biom 1.0 file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "biom" ] ;
                            dc:title "intype" ] ;
                    gal:label "Output logfile?" ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared" ] ;
                            gal:filter "intype['groups']" ;
                            gal:label "${tool.name} on ${on_string}: share files per label" ;
                            gal:type "list" ;
                            dc:title "labelshares" ] ;
                    gal:data [ gal:filter "intype['group'].ext == \"mothur.groups\"" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "intype_otu*.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            dc:title "groupout" ],
                        [ gal:format "mothur.shared" ;
                            gal:from_work_dir "intype_otu*.shared" ;
                            gal:label "${tool.name} on ${on_string}: shared" ;
                            dc:title "shared" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Make a shared file from a list and a group" ;
            dc:identifier "mothur_make_shared" ;
            dc:title "Make.shared",
                "make.shared" ;
            schema:sku 129 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.infile' input.infile.dat &&

echo 'clearcut(
    #if $input.source == "dna":
        fasta=input.infile.dat,
        DNA=true,
    #elif $input.source == "aa":
        fasta=input.infile.dat,
        protein=true,
    #elif $input.source == "phylip":
        phylip=input.infile.dat,
    #end if
    #if $matrixout == "true":
        matrixout=matrixout.dist,
    #end if
    #if $seed:
        seed=$seed,
    #end if
    ntrees=$ntrees,
    norandom=$norandom,
    shuffle=$shuffle,
    expblen=$expblen,
    expdist=$expdist,
    neighbor=$neighbor
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The clearcut_ command runs clearcut

The clearcut command allows mothur users to run the clearcut program from within mothur. The clearcut program written by Initiative for Bioinformatics and Evolutionary Studies (IBEST) at the University of Idaho. 

Clearcut is a stand-alone reference implementation of relaxed neighbor joining (RNJ).

Clearcut is capable of taking either a distance matrix or a multiple sequence alignment (MSA) as input.  If necessary, Clearcut will compute corrected distances based on a configurable distance correction model (Jukes-Cantor or Kimura).  Clearcut outputs a phylogenetic tree in Newick format and an optional corrected distance matrix.

.. _clearcut: https://www.mothur.org/wiki/Clearcut

v.1.20.0: Trivial upgrade to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Distance Matrix" ;
                                    gal:option [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "dna" ;
                                            dc:description "DNA Alignment Fasta" ],
                                        [ gal:value "aa" ;
                                            dc:description "Protein Alignment Fasta" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "infile" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align" ;
                                            gal:label "fasta - Alignment Fasta" ;
                                            gal:type "data" ;
                                            dc:title "infile" ] ;
                                    gal:value "dna" ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align" ;
                                            gal:label "fasta - Alignment Fasta" ;
                                            gal:type "data" ;
                                            dc:title "infile" ] ;
                                    gal:value "aa" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "expdist" ;
                            gal:checked "false" ;
                            gal:falsevalue "OFF" ;
                            gal:label "expdist - Use exponential notation for distance" ;
                            gal:truevalue "ON" ;
                            gal:type "boolean" ],
                        [ gal:argument "matrixout" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "matrixout - Generate a Distance Matrix" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "neighbor" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "neighbor - Use traditional Neighbor-Joining algorithm" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "expblen" ;
                            gal:checked "false" ;
                            gal:falsevalue "OFF" ;
                            gal:label "expblen - Use exponential notation for branch lengths" ;
                            gal:truevalue "ON" ;
                            gal:type "boolean" ],
                        [ gal:argument "shuffle" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "shuffle - Randomly shuffle the distance matrix" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "seed" ;
                            gal:label "seed - Set the PRNG seed to a specific value" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:argument "ntrees" ;
                            gal:label "ntrees - the number of output trees you want clearcut to generate (default 1)" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "norandom" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "norandom - Attempt joins deterministically" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.tre" ;
                            gal:from_work_dir "input.infile.tre" ;
                            gal:label "${tool.name} on ${on_string}: tree" ;
                            dc:title "tree" ],
                        [ gal:filter "matrixout" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "matrixout.dist" ;
                            gal:label "${tool.name} on ${on_string}: Phylip Distance Matrix" ;
                            dc:title "matrix" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a tree using relaxed neighbor joining" ;
            dc:identifier "mothur_clearcut" ;
            dc:title "Clearcut",
                "clearcut" ;
            schema:sku 71 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$qfile' qfile.dat &&
ln -s '$contigsreport' contigsreport.dat &&

echo 'rename.seqs(
    fasta=fasta.dat,
    group=group.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $qfile:
        qfile=qfile.dat,
    #end if
    #if $contigsreport:
        contigsreport=contigsreport.dat,
    #end if
    placement=$placement
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The rename.seqs_ command takes fasta-formatted sequence file and group file, and renames
the sequences by appending the group name to the sequence number.

.. _rename.seqs: https://www.mothur.org/wiki/Rename.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "Group file" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "Fasta file" ;
                            gal:type "data" ],
                        [ gal:argument "placement" ;
                            gal:label "Placement of group name" ;
                            gal:option [ gal:value "front" ;
                                    dc:description "front" ],
                                [ gal:selected "true" ;
                                    gal:value "back" ;
                                    dc:description "back" ] ;
                            gal:type "select" ],
                        [ gal:argument "contigsreport" ;
                            gal:format "tabular" ;
                            gal:label "Contigsreport file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "qfile" ;
                            gal:format "qual454" ;
                            gal:label "quality file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "Names file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "qfile" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "qfile.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: qfile_renamed" ;
                            dc:title "qfile_renamed" ],
                        [ gal:format "mothur.groups" ;
                            gal:from_work_dir "group.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: group_renamed" ;
                            dc:title "group_renamed" ],
                        [ gal:filter "name" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: name_renamed" ;
                            dc:title "name_renamed" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "fasta.renamed_map" ;
                            gal:label "${tool.name} on ${on_string}: renaming map" ;
                            dc:title "map" ],
                        [ gal:filter "contigsreport" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "contigsreport.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: contigsreport_renamed" ;
                            dc:title "contigsreport_renamed" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: fasta_renamed" ;
                            dc:title "fasta_renamed" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Rename sequences by concatenating the group name" ;
            dc:identifier "mothur_rename_seqs" ;
            dc:title "Rename.seqs",
                "rename.seqs" ;
            schema:sku 28 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $method_condition.method_switch == "distance":
    ln -s '$method_condition.matrix_condition.dist' dist.dat &&
    ln -s '$method_condition.matrix_condition.nameOrCount' nameOrCount.dat &&
    ln -s '$method_condition.fasta' fasta.dat &&
    #if $method_condition.pick.type == "yes":
        ln -s '$method_condition.pick.group' group.dat &&
    #end if
#elif $method_condition.method_switch == "abundance":
    ln -s '$method_condition.nameOrCount' nameOrCount.dat &&
#end if

echo 'get.oturep(
    list=otu.dat,
    #if $sorted:
        sorted=$sorted,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $method_condition.method_switch == "distance":
        method=distance,
        #if $method_condition.matrix_condition.matrix_format == "column":
            column=dist.dat,
            #if $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.names"):
                name=nameOrCount.dat,
            #elif $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.count_table"):
                count=nameOrCount.dat,
            #end if
        #elif $method_condition.matrix_condition.matrix_format == "phylip":
            phylip=dist.dat,
            #if $method_condition.matrix_condition.nameOrCount:
                #if $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.names"):
                    name=nameOrCount.dat,
                #elif $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.count_table"):
                    count=nameOrCount.dat,
                #end if
            #end if
        #end if
        #if $method_condition.fasta:
            fasta=fasta.dat,
        #end if
        #if $method_condition.pick.type == "yes":
            #if $method_condition.pick.group:
                group=group.dat,
            #end if
            #if $method_condition.pick.groups:
                groups=${ str($method_condition.pick.groups).replace(",","-") },
            #end if
        #end if
        large=$method_condition.large
    #elif $method_condition.method_switch == "abundance":
        method=abundance,
        #if $method_condition.nameOrCount.is_of_type("mothur.names"):
            name=nameOrCount.dat
        #elif $method_condition.nameOrCount.is_of_type("mothur.count_table"):
            count=nameOrCount.dat
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The get.oturep_ command generates a fasta-formatted sequence file containing only a representative sequence for each OTU.  The opposite of the bin.seqs command.

.. _get.oturep: https://www.mothur.org/wiki/Get.oturep

v1.23.0: Updated to Mothur 1.33, added count and method parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "The distance method finds the sequence with the smallest maximum distance to other sequences. The abundance                 method chooses the most abundant sequence in the OTU as the representative." ;
                                    gal:label "Method to use for the selection of the representative sequences" ;
                                    gal:option [ gal:value "abundance" ;
                                            dc:description "abundance" ],
                                        [ gal:selected "true" ;
                                            gal:value "distance" ;
                                            dc:description "distance" ] ;
                                    gal:type "select" ;
                                    dc:title "method_switch" ] ;
                            gal:when [ gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:type "data" ;
                                            dc:title "nameOrCount" ] ;
                                    gal:value "abundance" ],
                                [ gal:conditional [ gal:param [ gal:help "" ;
                                                    gal:label "Select a Distance Matrix Format" ;
                                                    gal:option [ gal:value "phylip" ;
                                                            dc:description "Phylip Distance Matrix" ],
                                                        [ gal:value "column" ;
                                                            dc:description "Pairwise Column Distance Matrix" ] ;
                                                    gal:type "select" ;
                                                    dc:title "matrix_format" ] ;
                                            gal:when [ gal:param [ gal:format "mothur.pair.dist" ;
                                                            gal:label "column - Distance Matrix" ;
                                                            gal:type "data" ;
                                                            dc:title "dist" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:type "data" ;
                                                            dc:title "nameOrCount" ] ;
                                                    gal:value "column" ],
                                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                                            gal:label "phylip - Distance Matrix" ;
                                                            gal:type "data" ;
                                                            dc:title "dist" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ;
                                                            dc:title "nameOrCount" ] ;
                                                    gal:value "phylip" ] ;
                                            dc:title "matrix_condition" ],
                                        [ gal:param [ gal:help "" ;
                                                    gal:label "Parse a group file into abundant and rare groups?" ;
                                                    gal:option [ gal:selected "true" ;
                                                            gal:value "no" ;
                                                            dc:description "No" ],
                                                        [ gal:value "yes" ;
                                                            dc:description "Yes" ] ;
                                                    gal:type "select" ;
                                                    dc:title "type" ] ;
                                            gal:when [ gal:param [ gal:label "groups - Group Selection (all used if none are selected)" ;
                                                            gal:multiple "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ],
                                                        [ gal:format "mothur.groups" ;
                                                            gal:label "group - Group file for the OTU List" ;
                                                            gal:type "data" ;
                                                            dc:title "group" ] ;
                                                    gal:value "yes" ],
                                                [ gal:value "no" ] ;
                                            dc:title "pick" ] ;
                                    gal:param [ gal:format "fasta" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "fasta" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "Set this parameter to Yes if your distance matric might not fit in RAM" ;
                                            gal:label "large - Distance Matrix is very Large" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "large" ] ;
                                    gal:value "distance" ] ;
                            dc:title "method_condition" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "sorted - Sort Sequences by" ;
                            gal:option [ gal:value "group" ;
                                    dc:description "Group" ],
                                [ gal:value "number" ;
                                    dc:description "Bin Number" ],
                                [ gal:value "" ;
                                    dc:description "Don't sort" ],
                                [ gal:value "size" ;
                                    dc:description "Bin Size" ],
                                [ gal:value "name" ;
                                    dc:description "Sequence Name" ] ;
                            gal:type "select" ;
                            dc:title "sorted" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.count_table" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.count_table" ] ;
                            gal:filter "method_condition['matrix_condition']['nameOrCount'].ext == \"mothur.count_table\"",
                                "method_condition['nameOrCount'].ext == \"mothur.count_table\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.count_table" ;
                            gal:type "list" ;
                            dc:title "count_out" ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.fasta" ] ;
                            gal:filter "method_condition['fasta']",
                                "method_condition['method_switch'] == \"distance\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.fasta" ;
                            gal:type "list" ;
                            dc:title "fasta_out" ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.names" ] ;
                            gal:filter "method_condition['matrix_condition']['nameOrCount'].ext == \"mothur.names\"",
                                "method_condition['nameOrCount'].ext == \"mothur.names\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.names" ;
                            gal:type "list" ;
                            dc:title "names_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a fasta with a representative sequence for each OTU" ;
            dc:identifier "mothur_get_oturep" ;
            dc:title "Get.oturep",
                "get.oturep" ;
            schema:sku 79 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $withdesign.tree:
    ln -s '$withdesign.tree' withdesign.tree.dat &&
#end if
#if $withdesign.havedesign == "yes":
    ln -s '$withdesign.design' withdesign.design.dat &&
#end if

echo 'indicator(
    #if $withdesign.tree:
        tree=withdesign.tree.dat,
    #end if
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $withdesign.groups:
        groups=${ str($withdesign.groups).replace(",","-") },
    #end if
    #if $withdesign.havedesign == "yes":
        design=withdesign.design.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The indicator_ command reads a shared_ or relabund_ file and a tree file, and outputs a .indicator.summary file and when a tree file is given a .indicator.tre file. The summary file lists the indicator value for each OTU for each node.  The new tree contains labels at each internal node. The label is the node number so you can relate the tree to the summary file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _indicator: https://www.mothur.org/wiki/Indicator

v.1.22.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Will you supply a design file?" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "havedesign" ] ;
                            gal:when [ gal:param [ gal:label "groups - Pick groups to annalyze" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.tre" ;
                                            gal:help "Mandatory if no design file is provided" ;
                                            gal:label "tree - A newick-formatted tree" ;
                                            gal:type "data" ;
                                            dc:title "tree" ] ;
                                    gal:value "no" ],
                                [ gal:param [ gal:format "mothur.design" ;
                                            gal:help "make sure your file is of type mothur.design. Design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                                            gal:label "design - assign groups to new grouping" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "design" ],
                                        [ gal:label "groups - Pick groups to annalyze" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "design" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.tre" ;
                                            gal:help "Optional, if a design file is provided." ;
                                            gal:label "tree - A newick-formatted tree" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "tree" ] ;
                                    gal:value "yes" ] ;
                            dc:title "withdesign" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "false" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared/relabund - OTU dataset" ;
                            gal:type "data" ;
                            dc:title "otu" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: indicator.summary" ;
                            dc:title "summary" ],
                        [ gal:filter "tree" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "withdesign.tree*.tre" ;
                            gal:label "${tool.name} on ${on_string}: indicator.tre" ;
                            dc:title "tree_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Identify indicator \"species\" for nodes on a tree" ;
            dc:identifier "mothur_indicator" ;
            dc:title "Indicator",
                "indicator" ;
            schema:sku 124 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$input.dist' input.dist.dat &&

echo 'get.dists(
    accnos=accnos.dat,
    #if $input.source == "phylip":
        phylip=input.dist.dat
    #else
        column=input.dist.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.dists_ command selects distances from a phylip or column file related to groups or sequences listed in an accnos file.

.. _get.dists: https://www.mothur.org/wiki/Get.dists

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select input format" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "column" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:type "data" ;
                            dc:title "accnos" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "dist" ;
                            gal:from_work_dir "input.dist*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.dist" ;
                            dc:title "pick_dist" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "selects distances from a phylip or column file" ;
            dc:identifier "mothur_get_dists" ;
            dc:title "Get.dists",
                "get.dists" ;
            schema:sku 104 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

#for $grouping in $groupings:
    #set grp_str = $grouping.groups.__str__
    #if grp_str:
        #for $grp in grp_str.split(','):
            echo -e "$grp\\t$grouping.name" >> $design;
        #end for
    #end if
#end for
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

Make Design creates a design file for use in mothur commands: merge.groups_, indicator_, and metastats_.
A design file looks like the group file. It is a 2 column tab delimited file, where the first column is the group name and the second column is the set the group belongs to.

.. _merge.groups: https://www.mothur.org/wiki/Merge.groups
.. _indicator: https://www.mothur.org/wiki/Indicator
.. _metastats: https://www.mothur.org/wiki/Metastats

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared,mothur.groups" ;
                            gal:label "Source containing groups" ;
                            gal:type "data" ;
                            dc:title "source" ] ;
                    gal:repeat [ gal:param [ gal:label "Select groups for to include in this grouping" ;
                                    gal:multiple "true" ;
                                    gal:options [ gal:filter [ gal:key "groups" ;
                                                    gal:ref "source" ;
                                                    gal:type "data_meta" ] ] ;
                                    gal:type "select" ;
                                    dc:title "groups" ],
                                [ gal:label "Name for a new combined grouping" ;
                                    gal:type "text" ;
                                    dc:title "name" ] ;
                            gal:title "Grouping" ;
                            dc:title "groupings" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.design" ;
                            gal:label "${tool.name} on ${on_string}: design" ;
                            dc:title "design" ] ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign groups to Sets" ;
            dc:identifier "mothur_make_design" ;
            dc:title "Make Design",
                "make.design" ;
            schema:sku 94 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' shared.dat &&

echo 'get.communitytype(
    shared=shared.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    method=$m.method,
    #if $m.method == 'kmeans' or $m.method == 'pams':
        calc=$m.calc,
        iters=$m.iters,
    #end if
    #if int($subsample) == 0:
        subsample=T,
    #elif int($subsample) > 0:
        subsample=$subsample,
    #end if
    minpartitions=$minpartitions,
    maxpartitions=$maxpartitions,
    optimizegap=$optimizegap,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """



**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**


.. _get.communitytype: https://www.mothur.org/wiki/Get.communitytype
    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "method" ;
                                    gal:option [ gal:value "pam" ;
                                            dc:description "pam" ],
                                        [ gal:value "kmeans" ;
                                            dc:description "k means" ],
                                        [ gal:selected "true" ;
                                            gal:value "dmm" ;
                                            dc:description "dmm" ] ;
                                    gal:type "select" ;
                                    dc:title "method" ] ;
                            gal:when [ gal:param [ gal: " set default option ",
                                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "rjsd" ;
                                                    dc:description "rjsd" ] ;
                                            gal:type "select" ;
                                            gal:value "anderberg",
                                                "braycurtis",
                                                "canberra",
                                                "gower",
                                                "hamming",
                                                "hellinger",
                                                "jabund",
                                                "jclass",
                                                "jest",
                                                "jsd",
                                                "kstest",
                                                "kulczynski",
                                                "kulczynskicody",
                                                "lennon",
                                                "manhattan",
                                                "memchi2",
                                                "memchord",
                                                "memeuclidean",
                                                "mempearson",
                                                "morisitahorn",
                                                "ochiai",
                                                "odum",
                                                "rjsd",
                                                "sharedace",
                                                "sharedchao",
                                                "sharednseqs",
                                                "sharedobserved",
                                                "sharedsobs",
                                                "soergel",
                                                "sorabund",
                                                "sorclass",
                                                "sorest",
                                                "spearman",
                                                "speciesprofile",
                                                "structchi2",
                                                "structchord",
                                                "structeuclidean",
                                                "structkulczynski",
                                                "structpearson",
                                                "thetan",
                                                "thetayc",
                                                "whittaker" ;
                                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                                "canberra - Community Structure Similarity",
                                                "gower - Community Structure Similarity",
                                                "hamming - Community Membership Similarity",
                                                "hellinger - Community Structure Similarity",
                                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                                "jsd",
                                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                                "manhattan - Community Structure Similarity",
                                                "memchi2 - Community Membership Similarity",
                                                "memchord - Community Membership Similarity",
                                                "memeuclidean - Community Membership Similarity",
                                                "mempearson - Community Membership Similarity",
                                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                                "odum - Community Structure Similarity",
                                                "rjsd",
                                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                                "sharednseqs - Utility the number of sequences in two samples",
                                                "sharedobserved - Utility the number of sequences in two samples",
                                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                                "soergel - Community Structure Similarity",
                                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                                "spearman - Community Structure Similarity",
                                                "speciesprofile - Community Structure Similarity",
                                                "structchi2 - Community Structure Similarity",
                                                "structchord - Community Structure Similarity",
                                                "structeuclidean - Community Structure Similarity",
                                                "structkulczynski - Community Structure Similarity",
                                                "structpearson - Community Structure Similarity",
                                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                                            dc:title "calc" ],
                                        [ gal:help "" ;
                                            gal:label "iters - number of iterations" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "iters" ] ;
                                    gal:value "pam" ],
                                [ gal:value "dmm" ],
                                [ gal:param [ gal:help "" ;
                                            gal:label "iters - number of iterations" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "iters" ],
                                        [ gal: " set default option(s) ",
                                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "rjsd" ;
                                                    dc:description "rjsd" ] ;
                                            gal:type "select" ;
                                            gal:value "anderberg",
                                                "braycurtis",
                                                "canberra",
                                                "gower",
                                                "hamming",
                                                "hellinger",
                                                "jabund",
                                                "jclass",
                                                "jest",
                                                "jsd",
                                                "kstest",
                                                "kulczynski",
                                                "kulczynskicody",
                                                "lennon",
                                                "manhattan",
                                                "memchi2",
                                                "memchord",
                                                "memeuclidean",
                                                "mempearson",
                                                "morisitahorn",
                                                "ochiai",
                                                "odum",
                                                "rjsd",
                                                "sharedace",
                                                "sharedchao",
                                                "sharednseqs",
                                                "sharedobserved",
                                                "sharedsobs",
                                                "soergel",
                                                "sorabund",
                                                "sorclass",
                                                "sorest",
                                                "spearman",
                                                "speciesprofile",
                                                "structchi2",
                                                "structchord",
                                                "structeuclidean",
                                                "structkulczynski",
                                                "structpearson",
                                                "thetan",
                                                "thetayc",
                                                "whittaker" ;
                                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                                "canberra - Community Structure Similarity",
                                                "gower - Community Structure Similarity",
                                                "hamming - Community Membership Similarity",
                                                "hellinger - Community Structure Similarity",
                                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                                "jsd",
                                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                                "manhattan - Community Structure Similarity",
                                                "memchi2 - Community Membership Similarity",
                                                "memchord - Community Membership Similarity",
                                                "memeuclidean - Community Membership Similarity",
                                                "mempearson - Community Membership Similarity",
                                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                                "odum - Community Structure Similarity",
                                                "rjsd",
                                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                                "sharednseqs - Utility the number of sequences in two samples",
                                                "sharedobserved - Utility the number of sequences in two samples",
                                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                                "soergel - Community Structure Similarity",
                                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                                "spearman - Community Structure Similarity",
                                                "speciesprofile - Community Structure Similarity",
                                                "structchi2 - Community Structure Similarity",
                                                "structchord - Community Structure Similarity",
                                                "structeuclidean - Community Structure Similarity",
                                                "structkulczynski - Community Structure Similarity",
                                                "structpearson - Community Structure Similarity",
                                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                                            dc:title "calc" ] ;
                                    gal:value "kmeans" ] ;
                            dc:title "m" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - Shared file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "maxpartitions" ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "5" ;
                            dc:title "minpartitions" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:help "Ignored if negative, when set to 0 it uses the size of your smallest group (subsample=T)" ;
                            gal:label "subsample" ;
                            gal:min "-1" ;
                            gal:type "integer" ;
                            gal:value "-1" ;
                            dc:title "subsample" ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "3" ;
                            dc:title "optimizegap" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "shared\\.(?P<designation>.*)\\.posterior" ] ;
                            gal:label "${tool.name} on ${on_string}: posterior" ;
                            gal:type "list" ;
                            dc:title "posterior" ],
                        [ gal:discover_datasets [ gal:format "mothur.relabund" ;
                                    gal:pattern "shared\\.(?P<designation>.*)\\.relabund" ] ;
                            gal:label "${tool.name} on ${on_string}: relabund" ;
                            gal:type "list" ;
                            dc:title "relabund" ] ;
                    gal:data [ gal:filter " m['method'] == 'dmm' " ;
                            gal:format "tabular" ;
                            gal:from_work_dir "shared*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "shared*.fit" ;
                            gal:label "${tool.name} on ${on_string}: fit" ;
                            dc:title "fit" ],
                        [ gal:filter " m['method'] == 'dmm' " ;
                            gal:format "tabular" ;
                            gal:from_work_dir "shared*.parameters" ;
                            gal:label "${tool.name} on ${on_string}: parameters" ;
                            dc:title "parameters" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "shared*.design" ;
                            gal:label "${tool.name} on ${on_string}: design" ;
                            dc:title "design" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "description" ;
            dc:identifier "mothur_get_communitytype" ;
            dc:title "Get.communitytype",
                "get.communitytype" ;
            schema:sku 73 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
#if $perotu.use == "yes":
    ln -s '$perotu.otu' perotu.otu.dat &&
#end if

echo 'consensus.seqs(
    fasta=fasta.dat
    #if $name:
        ,name=name.dat
    #end if
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
    #if $perotu.use == "yes":
        ,list=perotu.otu.dat
        #if $perotu.label:
            ,label=${ str($perotu.label).replace(",","-") }
        #end if
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The consensus.seqs_ command can be used in 2 ways: create a consensus sequence from a fastafile, or with a listfile create a consensus sequence for each otu. Sequences must be aligned.

.. _consensus.seqs: https://www.mothur.org/wiki/Consensus.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Consensus sequence" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Consensus sequence for each OTU in list" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "Single consensus sequence" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:help "By default all labels are used" ;
                                            gal:label "label - Select OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "perotu" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.align" ;
                            gal:help "Sequences must be aligned" ;
                            gal:label "fasta - Sequences to Bin" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:help "For example: cutoff=95 would return the base that was supported by at least 95% of sequences. Must be between 1 and 100. Optional" ;
                            gal:label "Cutoff - set a percentage of sequences that support the base" ;
                            gal:max "100" ;
                            gal:min "1" ;
                            gal:optional "True" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "cutoff" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "this file can be generated by count.seqs" ;
                            gal:label "Count - a count table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.summary" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus summary files per OTU" ;
                            gal:type "list" ;
                            dc:title "consensussummaries" ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.names" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus names files per OTU" ;
                            gal:type "list" ;
                            dc:title "consensusnames" ],
                        [ gal:discover_datasets [ gal:format "mothur.align" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.fasta" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus fasta files per OTU" ;
                            gal:type "list" ;
                            dc:title "consensusfastas" ] ;
                    gal:data [ gal:filter "perotu['use'] == 'no'" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta*.cons.summary" ;
                            gal:label "${tool.name} on ${on_string}: cons.summary" ;
                            dc:title "summary" ],
                        [ gal:filter "perotu['use'] == 'no'" ;
                            gal:format "mothur.align" ;
                            gal:from_work_dir "fasta*.cons.fasta" ;
                            gal:label "${tool.name} on ${on_string}: cons.fasta" ;
                            dc:title "cons_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find a consensus sequence for each OTU or phylotype" ;
            dc:identifier "mothur_consensus_seqs" ;
            dc:title "Consensus.seqs",
                "consensus.seqs" ;
            schema:sku 112 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'pca(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    metric=$metric
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The pca_ command generate principle components plot data for a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _pca: https://www.mothur.org/wiki/Pca

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "metric - Calculate pearson correlation coefficient" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "metric" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "txt" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pca\\.loadings" ] ;
                            gal:label "${tool.name} on ${on_string}: pca.loadings" ;
                            gal:type "list" ;
                            dc:title "pca_loadings" ],
                        [ gal:discover_datasets [ gal:format "mothur.axes" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pca\\.axes" ] ;
                            gal:label "${tool.name} on ${on_string}: pca.axes" ;
                            gal:type "list" ;
                            dc:title "pca_axes" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Principal Coordinate Analysis for a shared file" ;
            dc:identifier "mothur_pca" ;
            dc:title "Pca",
                "pca" ;
            schema:sku 64 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$search.input' search_input.dat &&
#if $split.dosplit == "yes":
    ln -s '$split.group' split_group.dat &&
#end if

echo 'split.abund(
    fasta=fasta.dat,
    #if $search.type == "list":
        list=search_input.dat,
        #if $search.label:
            label=${ str($search.label).replace(",","-") },
        #end if
    #elif $search.type == "name":
        name=search_input.dat,
    #else
        count=search_input.dat,
    #end if
    #if $split.dosplit == "yes":
        #if $split.group:
            group=split_group.dat,
        #end if
        #if $split.groups:
            groups=${ str($split.groups).replace(",","-") },
        #end if
    #end if
    accnos=$accnos,
    cutoff=$cutoff
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The split.abund_ command reads a fasta file and a list_ or a name_ file and splits the sequences into rare and abundant groups.

.. _list: https://www.mothur.org/wiki/List_file
.. _name: https://www.mothur.org/wiki/Name_file
.. _split.abund: https://www.mothur.org/wiki/Split.abund

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Parse a group file into abundant and rare groups? (only possible if name or list file supplied)" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:title "dosplit" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:label "groups - Group Selection" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - Group dataset" ;
                                            gal:type "data" ;
                                            dc:title "group" ] ;
                                    gal:value "yes" ] ;
                            dc:title "split" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Type to screen" ;
                                    gal:option [ gal:value "list" ;
                                            dc:description "OTU List" ],
                                        [ gal:value "count" ;
                                            dc:description "Count file" ],
                                        [ gal:value "name" ;
                                            dc:description "Name reference" ] ;
                                    gal:type "select" ;
                                    dc:title "type" ] ;
                            gal:when [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "input" ],
                                        [ gal:help "Select OTU Labels to filter out all but selected labels" ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "input" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "list" ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Name reference" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "name" ],
                                [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:label "count - count_table file" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "count" ] ;
                            dc:title "search" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "accnos - Produce rare and abundant Accession outputs" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "accnos" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:label "cutoff - Cutoff parameter is used to qualify what is abundant and rare." ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "cutoff" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.names" ] ;
                            gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.names" ;
                            gal:type "list" ;
                            dc:title "rare_names_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.accnos" ] ;
                            gal:filter "(search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')) and accnos" ;
                            gal:label "${tool.name} on ${on_string}: rare.accnos" ;
                            gal:type "list" ;
                            dc:title "rare_accnos_coll" ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.fasta" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            gal:type "list" ;
                            dc:title "rare_fasta_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.groups" ] ;
                            gal:filter "search['type'] != 'count' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.groups" ;
                            gal:type "list" ;
                            dc:title "rare_groups_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.list" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.list" ;
                            gal:type "list" ;
                            dc:title "abund_list_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.groups" ] ;
                            gal:filter "search['type'] != 'count' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.groups" ;
                            gal:type "list" ;
                            dc:title "abund_groups_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.names" ] ;
                            gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.names" ;
                            gal:type "list" ;
                            dc:title "abund_names_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.list" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.list" ;
                            gal:type "list" ;
                            dc:title "rare_list_coll" ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.fasta" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.fasta" ;
                            gal:type "list" ;
                            dc:title "abund_fasta_coll" ],
                        [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.accnos" ] ;
                            gal:filter "(search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')) and accnos" ;
                            gal:label "${tool.name} on ${on_string}: abund.accnos" ;
                            gal:type "list" ;
                            dc:title "abund_accnos_coll" ] ;
                    gal:data [ gal:filter "search['type'] != 'list'" ;
                            gal:format_source "fasta" ;
                            gal:from_work_dir "*rare.fasta" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            dc:title "rare_fasta" ],
                        [ gal:filter "search['type'] == 'count'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "*.abund.count_table" ;
                            gal:label "${tool.name} on ${on_string}: abund.count_table" ;
                            dc:title "abund_count" ],
                        [ gal:filter "search['type'] != 'list' and accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "*rare.accnos" ;
                            gal:label "${tool.name} on ${on_string}: rare.accnos" ;
                            dc:title "rare_accnos" ],
                        [ gal:filter "search['type'] == 'name'" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "search_input*.rare.names" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            dc:title "rare_names" ],
                        [ gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: abund.groups" ;
                            dc:title "abund_groups" ],
                        [ gal:filter "search['type'] == 'count'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "*.rare.count_table" ;
                            gal:label "${tool.name} on ${on_string}: rare.count_table" ;
                            dc:title "rare_count" ],
                        [ gal:filter "search['type'] == 'name'" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "search_input*.abund.names" ;
                            gal:label "${tool.name} on ${on_string}: abund.names" ;
                            dc:title "abund_names" ],
                        [ gal:filter "search['type'] != 'list' and accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "*abund.accnos" ;
                            gal:label "${tool.name} on ${on_string}: abund.accnos" ;
                            dc:title "abund_accnos" ],
                        [ gal:filter "search['type'] != 'list'" ;
                            gal:format_source "fasta" ;
                            gal:from_work_dir "*abund.fasta" ;
                            gal:label "${tool.name} on ${on_string}: abund.fasta" ;
                            dc:title "abund_fasta" ],
                        [ gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: rare.groups" ;
                            dc:title "rare_groups" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Separate sequences into rare and abundant groups" ;
            dc:identifier "mothur_split_abund" ;
            dc:title "Split.abund",
                "split.abund" ;
            schema:sku 77 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'get.otulabels(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=$infile.label,
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The get.otulabels command selects otu labels from the output from classify.otu_, corr.axes_ and otu.association_. This can be useful especially with subsampled datasets or when groups have been selected.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _otu.association: https://www.mothur.org/wiki/Otu.association

v.1.27.0: Added list and shared parameters, updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:option [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ],
                                        [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_other" ],
                                [ gal:param [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from." ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "in_shared" ] ;
                            dc:title "infile" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:type "data" ;
                            dc:title "accnos" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            dc:title "pick_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Selects OTU labels" ;
            dc:identifier "mothur_get_otulabels" ;
            dc:title "Get.otulabels",
                "get.otulabels" ;
            schema:sku 98 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.dist' input_dist.dat &&
#if not $input.source == "shared":
    ln -s '$input.name' input_name.dat &&
#end if

echo 'tree.shared(
    #if $input.source == "shared":
        shared=input_dist.dat,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.label:
            label=${ str($input.label).replace(",","-") },
        #end if
        #if $input.subsampling.use == "yes":
            #if $input.subsampling.subsample:
                subsample=$input.subsampling.subsample,
            #else
                subsample=T,
            #end if
            #if $input.subsampling.iters:
                iters="$input.subsampling.iters,
            #end if
        #end if
    #elif $input.source == "column":
        column=input_dist.dat,
        name=input_name.dat,
    #elif $input.source == "phylip":
        phylip=input_dist.dat,
        #if $input.name:
            name=input_name.dat,
        #end if
    #else
        count=input_name.dat,
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The tree.shared_ command will generate a newick-formatted tree file that describes the dissimilarity (1-similarity) among multiple groups.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _tree.shared: https://www.mothur.org/wiki/Tree.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select input format" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "OTU Shared" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "count" ;
                                            dc:description "Count file" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ],
                                        [ gal:format "mothur.count_table" ;
                                            gal:label "count - count_table file" ;
                                            gal:type "data" ;
                                            dc:title "name" ] ;
                                    gal:value "count" ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "name" ],
                                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:type "data" ;
                                            dc:title "name" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "column" ],
                                [ gal:conditional [ gal:param [ gal:label "subsample" ;
                                                    gal:option [ gal:value "yes" ;
                                                            dc:description "yes" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "no" ;
                                                            dc:description "no" ] ;
                                                    gal:type "select" ;
                                                    dc:title "use" ] ;
                                            gal:when [ gal:value "no" ],
                                                [ gal:param [ gal:label "iters - Number of iterations to try (default 1000)" ;
                                                            gal:min "1" ;
                                                            gal:optional "true" ;
                                                            gal:type "integer" ;
                                                            gal:value "" ;
                                                            dc:title "iters" ],
                                                        [ gal:help "Should not exceed the number of sequences in any group" ;
                                                            gal:label "subsample (defaults to the size of the smallest group)" ;
                                                            gal:min "0" ;
                                                            gal:optional "true" ;
                                                            gal:type "integer" ;
                                                            gal:value "" ;
                                                            dc:title "subsample" ] ;
                                                    gal:value "yes" ] ;
                                            dc:title "subsampling" ] ;
                                    gal:param [ gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "dist" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:label "groups - Groups to consider" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "dist" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "shared" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal: " set default option(s) ",
                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ] ;
                            gal:type "select" ;
                            gal:value "anderberg",
                                "braycurtis",
                                "canberra",
                                "gower",
                                "hamming",
                                "hellinger",
                                "jabund",
                                "jclass",
                                "jest",
                                "jsd",
                                "kstest",
                                "kulczynski",
                                "kulczynskicody",
                                "lennon",
                                "manhattan",
                                "memchi2",
                                "memchord",
                                "memeuclidean",
                                "mempearson",
                                "morisitahorn",
                                "ochiai",
                                "odum",
                                "rjsd",
                                "sharedace",
                                "sharedchao",
                                "sharednseqs",
                                "sharedobserved",
                                "sharedsobs",
                                "soergel",
                                "sorabund",
                                "sorclass",
                                "sorest",
                                "spearman",
                                "speciesprofile",
                                "structchi2",
                                "structchord",
                                "structeuclidean",
                                "structkulczynski",
                                "structpearson",
                                "thetan",
                                "thetayc",
                                "whittaker" ;
                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                "canberra - Community Structure Similarity",
                                "gower - Community Structure Similarity",
                                "hamming - Community Membership Similarity",
                                "hellinger - Community Structure Similarity",
                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                "jsd",
                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                "manhattan - Community Structure Similarity",
                                "memchi2 - Community Membership Similarity",
                                "memchord - Community Membership Similarity",
                                "memeuclidean - Community Membership Similarity",
                                "mempearson - Community Membership Similarity",
                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                "odum - Community Structure Similarity",
                                "rjsd",
                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                "sharednseqs - Utility the number of sequences in two samples",
                                "sharedobserved - Utility the number of sequences in two samples",
                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                "soergel - Community Structure Similarity",
                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                "spearman - Community Structure Similarity",
                                "speciesprofile - Community Structure Similarity",
                                "structchi2 - Community Structure Similarity",
                                "structchord - Community Structure Similarity",
                                "structeuclidean - Community Structure Similarity",
                                "structkulczynski - Community Structure Similarity",
                                "structpearson - Community Structure Similarity",
                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                            dc:title "calc" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.tre" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.tre" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: tre" ;
                            gal:type "list" ;
                            dc:title "trefiles" ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "input_dist*.tre" ;
                            gal:label "${tool.name} on ${on_string}: tre" ;
                            dc:title "tre" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a newick tree for dissimilarity among groups" ;
            dc:identifier "mothur_tree_shared" ;
            dc:title "Tree.shared",
                "tree.shared" ;
            schema:sku 7 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&
ln -s '$count' count.dat &&
ln -s '$taxonomy' taxonomy.dat &&
#if $input.format == "fasta":
    ln -s '$input.name_in' input_name_in.dat &&
#end if
#if ($input.format == "fasta" or $input.format == "list") and $input.use_group.to_filter == "yes":
    ln -s '$input.use_group.group_in' input_use_group_group_in.dat &&
#end if

echo 'sub.sample(
    #if $input.format == "fasta":
        fasta=input_otu.dat
        #if $input.name_in:
            ,name=input_name_in.dat
        #end if
    #else
        #if $input.format == "list":
            list=input_otu.dat
        #elif $input.format == "sabund":
            sabund=input_otu.dat
        #elif $input.format == "rabund":
            rabund=input_otu.dat
        #elif $input.format == "shared":
            shared=input_otu.dat
            #if $input.groups:
                ,groups=${ str($input.groups).replace(",","-") }
            #end if
        #end if
        #if $input.label:
            ,label=${ str($input.label).replace(",","-") }
        #end if
    #end if
    #if $input.format == "fasta" or $input.format == "list":
        #if $input.use_group.to_filter == "yes":
            ,group=input_use_group_group_in.dat
            #if $input.use_group.groups:
                ,groups=${ str($input.use_group.groups).replace(",","-") }
            #end if
            ,persample=$input.use_group.persample
        #end if
    #end if
    #if $count:
        ,count=count.dat
    #end if
    #if $taxonomy:
        ,taxonomy=taxonomy.dat
    #end if
    #if $size:
        ,size=$size
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The sub.sample_ command can be used as a way to normalize your data, or to create a smaller set from your original set. It takes as an input the following file types: fasta, list_, shared_, rabund_ and sabund_ to generate a new file that contains a sampling of your original file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _sub.sample: https://www.mothur.org/wiki/Sub.sample

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select type of data to sub sample" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "OTU Shared" ],
                                        [ gal:value "fasta" ;
                                            dc:description "FASTA" ],
                                        [ gal:value "rabund" ;
                                            dc:description "OTU Relative Abundance (rabund)" ],
                                        [ gal:value "sabund" ;
                                            dc:description "OTU Shared Abundance (sabund)" ],
                                        [ gal:value "list" ;
                                            dc:description "OTU List" ] ;
                                    gal:type "select" ;
                                    dc:title "format" ] ;
                            gal:when [ gal:conditional [ gal:param [ gal:label "Use groups" ;
                                                    gal:option [ gal:value "yes" ;
                                                            dc:description "Yes" ],
                                                        [ gal:value "no" ;
                                                            dc:description "No" ] ;
                                                    gal:type "select" ;
                                                    dc:title "to_filter" ] ;
                                            gal:when [ gal:value "no" ],
                                                [ gal:param [ gal:format "mothur.groups" ;
                                                            gal:label "group - Groups" ;
                                                            gal:type "data" ;
                                                            dc:title "group_in" ],
                                                        [ gal:checked "false" ;
                                                            gal:falsevalue "false" ;
                                                            gal:label "persample - select subsample of the same size from each of the groups" ;
                                                            gal:truevalue "true" ;
                                                            gal:type "boolean" ;
                                                            dc:title "persample" ],
                                                        [ gal:label "groups - Pick groups to include" ;
                                                            gal:multiple "true" ;
                                                            gal:optional "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group_in" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ] ;
                                                    gal:value "yes" ] ;
                                            dc:title "use_group" ] ;
                                    gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "list" ],
                                [ gal:conditional [ gal:param [ gal:label "Use groups?" ;
                                                    gal:option [ gal:value "no" ;
                                                            dc:description "No" ],
                                                        [ gal:value "yes" ;
                                                            dc:description "Yes" ] ;
                                                    gal:type "select" ;
                                                    dc:title "to_filter" ] ;
                                            gal:when [ gal:value "no" ],
                                                [ gal:param [ gal:label "groups - Pick groups to include" ;
                                                            gal:multiple "true" ;
                                                            gal:optional "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group_in" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ],
                                                        [ gal:format "mothur.groups" ;
                                                            gal:label "group - Groups" ;
                                                            gal:type "data" ;
                                                            dc:title "group_in" ],
                                                        [ gal:checked "false" ;
                                                            gal:falsevalue "false" ;
                                                            gal:label "persample - select subsample of the same size from each of the groups" ;
                                                            gal:truevalue "true" ;
                                                            gal:type "boolean" ;
                                                            dc:title "persample" ] ;
                                                    gal:value "yes" ] ;
                                            dc:title "use_group" ] ;
                                    gal:param [ gal:format "fasta" ;
                                            gal:label "fasta -" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:format "mothur.names" ;
                                            gal:label "name - Group Names from your history" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "name_in" ] ;
                                    gal:value "fasta" ],
                                [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ] ;
                                    gal:value "shared" ],
                                [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.sabund" ;
                                            gal:label "sabund - OTU Species Abundance" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "sabund" ],
                                [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.rabund" ;
                                            gal:label "rabund - OTU Relative Abundance" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "rabund" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.seq.taxonomy,mothur.ref.taxonomy" ;
                            gal:label "taxonomy - allows a taxonomy file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "taxonomy" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:label "size - If set, the number of samples to pick" ;
                            gal:min "1" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "size" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.subsample\\.dat" ] ;
                            gal:filter "input['format'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: subsample.shared" ;
                            gal:type "list" ;
                            dc:title "shared_out" ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.subsample\\.dat" ] ;
                            gal:filter "input['format'] == 'list'" ;
                            gal:label "${tool.name} on ${on_string}: subsample.list" ;
                            gal:type "list" ;
                            dc:title "list_out" ] ;
                    gal:data [ gal:filter "input['format'] == 'fasta' and input['name_in']" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "input_name_in*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.names" ;
                            dc:title "names_out" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.count" ;
                            dc:title "count_out" ],
                        [ gal:filter "input['format'] == 'rabund'" ;
                            gal:format "mothur.rabund" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.rabund" ;
                            dc:title "rabund_out" ],
                        [ gal:filter "taxonomy" ;
                            gal:format_source "taxonomy" ;
                            gal:from_work_dir "taxonomy.subsample.dat" ;
                            gal:label "${tool.name} on ${on_string}: subsample.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "input['format'] == 'fasta'" ;
                            gal:format_source "otu" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "input['format'] == 'sabund'" ;
                            gal:format "mothur.sabund" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.sabund" ;
                            dc:title "sabund_out" ],
                        [ gal:filter "(input['format'] == 'fasta' or input['format'] == 'list') and input['use_group']['to_filter'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "input_use_group_group_in*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.groups" ;
                            dc:title "group_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Create a sub sample" ;
            dc:identifier "mothur_sub_sample" ;
            dc:title "Sub.sample",
                "sub.sample" ;
            schema:sku 17 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'summary.tax(
    taxonomy=tax.taxonomy.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    relabund=$relabund,
    threshold=$threshold,
    output=$output,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The summary.tax_ command reads a taxonomy file and an optional name and or group file, and summarizes the taxonomy information.

.. _summary.tax: https://www.mothur.org/wiki/Summary.tax

    """ ;
            gal:inputs [ gal:argument "output",
                        "printlevel" ;
                    gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ;
                                            dc:title "taxonomy" ] ;
                                    gal:value "ref" ] ;
                            dc:title "tax" ] ;
                    gal:help "The detail format outputs the totals at each level, where as the simple format outputs the highest level",
                        "specify taxlevel of your *tax.summary file to print to. Options are 1 to the maz level in the file. The default is -1, meaning max level" ;
                    gal:label "Output logfile?",
                        "Print level",
                        "Tax summary output type" ;
                    gal:min "-1" ;
                    gal:option [ gal:selected "true" ;
                            gal:value "simple" ;
                            dc:description "simple" ],
                        [ gal:value "detail" ;
                            dc:description "detail" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - taxonomy sequence names" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "relabund - allows you to indicate that you want the summary files to be relative abundances rather than raw abundances. default=f" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "relabund" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:help "Once the classification falls below the threshold the mothur will refer to it as unclassified when calculating the concensus.             This feature is similar to adjusting the cutoff in classify.seqs" ;
                            gal:label "threshold- specify a cutoff for the taxonomy file" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "threshold" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean",
                        "integer",
                        "select" ;
                    gal:value "-1" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "tax.taxonomy*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "taxsummary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to taxonomy" ;
            dc:identifier "mothur_summary_tax" ;
            dc:title "Summary.tax",
                "summary.tax" ;
            schema:sku 99 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&

echo 'venn(
    #if $input.source == "shared":
        shared=input_otu.dat,
        nseqs=$nseqs,
        permute=$permute,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #elif $input.source == "similarity":
        list=input_otu.dat,
        abund=$input.abund,
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    #if $input.calc:
        calc=${ str($input.calc).replace(",","-") },
    #end if
    fontsize=$fontsize,
    sharedotus=$sharedotus
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The venn_ command generates Venn diagrams to compare the richness shared among 2, 3, or 4 groups.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _venn: https://www.mothur.org/wiki/Venn

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:option [ gal:value "similarity" ;
                                            dc:description "OTU list" ],
                                        [ gal:value "shared" ;
                                            dc:description "OTU Shared" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:option [ gal:value "ace" ;
                                                    dc:description "Ace" ],
                                                [ gal:value "sobs" ;
                                                    dc:description "Sobs" ],
                                                [ gal:value "chao" ;
                                                    dc:description "Chao" ] ;
                                            gal:type "select" ;
                                            dc:title "calc" ],
                                        [ gal:label "abund - Abundance when using the ace calculator ( >= 5 )" ;
                                            gal:min "5" ;
                                            gal:type "integer" ;
                                            gal:value "10" ;
                                            dc:title "abund" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "similarity" ],
                                [ gal:param [ gal:label "groups - Groups to consider" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:option [ gal:value "sharedace" ;
                                                    dc:description "Shared Ace" ],
                                                [ gal:value "sharedsobs" ;
                                                    dc:description "Shared Sobs" ],
                                                [ gal:value "sharedchao" ;
                                                    dc:description "Shared Chao" ] ;
                                            gal:type "select" ;
                                            dc:title "calc" ] ;
                                    gal:value "shared" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "sharedotus - This parameter can be used with the sharedsobs calculator to get the names of the OTUs in each section of the venn diagram. Default=T" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "sharedotus" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "nseqs - Output the number of sequences represented by the otus in the picture" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "nseqs" ],
                        [ gal:label "permute - Create pictures with all possible 4-way permutations of groups" ;
                            gal:option [ gal:value "2" ;
                                    dc:description "2" ],
                                [ gal:value "3" ;
                                    dc:description "3" ],
                                [ gal:value "1" ;
                                    dc:description "1" ],
                                [ gal:value "true" ;
                                    dc:description "true" ],
                                [ gal:selected "true" ;
                                    gal:value "4" ;
                                    dc:description "4" ] ;
                            gal:type "select" ;
                            dc:title "permute" ],
                        [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:type "integer" ;
                            gal:value "24" ;
                            dc:title "fontsize" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.sharedotus" ] ;
                            gal:filter "sharedotus" ;
                            gal:label "${tool.name} on ${on_string}: sharedotus" ;
                            gal:type "list" ;
                            dc:title "sharedotus_out" ],
                        [ gal:discover_datasets [ gal:format "svg" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.svg" ] ;
                            gal:label "${tool.name} on ${on_string}: svg" ;
                            gal:type "list" ;
                            dc:title "svgs_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate Venn diagrams for groups " ;
            dc:identifier "mothur_venn" ;
            dc:title "Venn",
                "venn" ;
            schema:sku 89 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$fasta' fasta.dat &&
ln -s '$group' group.dat &&

echo 'split.groups(
    #if $name:
        name=name.dat,
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    fasta=fasta.dat,
    group=group.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The split.groups_ command reads a fasta file and group_ file and generates a fasta file for each group in the groupfile.  A name_ file can also be split into groups.

.. _group: https://www.mothur.org/wiki/Group_file
.. _name: https://www.mothur.org/wiki/Name_file
.. _split.groups: https://www.mothur.org/wiki/Split.groups

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Fasta to split by group" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:label "groups - Pick groups to analyze" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names to split by group" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal: " TODO: format_source on discovered collection elements doesn't seem to work yet, change to format_source=\"fasta\" once it does " ;
                            gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:label "${tool.name} on ${on_string}: fasta per group" ;
                            gal:type "list" ;
                            dc:title "groupfastas" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generates a fasta file for each group" ;
            dc:identifier "mothur_split_groups" ;
            dc:title "Split.groups",
                "split.groups" ;
            schema:sku 29 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'dist.seqs(
    fasta=fasta.dat,
    #if $calc:
        calc=$calc,
    #end if
    countends=$countends,
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    #if $output:
        output=$output,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The dist.seqs_ command will calculate uncorrected pairwise distances between aligned sequences.  The command will generate a column-formatted_distance_matrix_ that is compatible with the column option in the read.dist command. The command is also able to generate a phylip-formatted_distance_matrix_. There are several options for how to handle gap comparisons and terminal gaps.

.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _dist.seqs: https://www.mothur.org/wiki/Dist.seqs

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "Do not save any distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0.0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ;
                            dc:title "cutoff" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "countends - Penalize terminal gaps" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "countends" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Alignment Fasta" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:label "calc - Calc Method - Gap Penality" ;
                            gal:option [ gal:value "nogaps" ;
                                    dc:description "nogaps - ignores gaps" ],
                                [ gal:value "onegap" ;
                                    dc:description "onegap - counts a string of gaps as a single gap" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "use default" ],
                                [ gal:value "eachgap" ;
                                    dc:description "eachgap - penalize each gap" ] ;
                            gal:type "select" ;
                            dc:title "calc" ],
                        [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:option [ gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "Default Column-Formatted Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:title "output" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:change_format [ gal:when [ gal:format "mothur.lower.dist" ;
                                            gal:input "output" ;
                                            gal:value "lt" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "output" ;
                                            gal:value "square" ] ] ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "fasta*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            dc:title "out_dist" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "calculate uncorrected pairwise distances between aligned sequences" ;
            dc:identifier "mothur_dist_seqs" ;
            dc:title "Dist.seqs",
                "dist.seqs" ;
            schema:sku 37 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail;

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'chop.seqs(
    fasta=fasta.dat,
    numbases=$numbases,
    keep=$keep,
    countgaps=$countgaps,
    short=$short,
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chop.seqs_ command reads a fasta file of sequences and outputs a .chop.fasta file containing the trimmed sequences. It works on both aligned and unaligned sequences.

.. _chop.seqs: https://www.mothur.org/wiki/Chop.seqs

v1.20.0: Updated to 1.33. Added name, group and count options for mothur version 1.31.0

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "numbases" ;
                            gal:label "numbases - Number of bases to keep" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "short" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "short - keep sequences that are too short to chop" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "keep" ;
                            gal:label "keep - Part of the sequence to keep" ;
                            gal:option [ gal:value "front" ;
                                    dc:description "front" ],
                                [ gal:value "back" ;
                                    dc:description "back" ] ;
                            gal:type "select" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Sequences to be chopped" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "countgaps" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "countgaps - Count gaps as bases" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.chop.fasta" ;
                            gal:label "${tool.name} on ${on_string}: chop.fasta" ;
                            dc:title "out_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Trim sequences to a specified length" ;
            dc:identifier "mothur_chop_seqs" ;
            dc:title "Chop.seqs",
                "chop.seqs" ;
            schema:sku 91 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$groups' groups.dat &&
ln -s '$qfile' qfile.dat &&
ln -s '$count' count.dat &&
ln -s '$taxonomy' taxonomy.dat &&
ln -s '$summary' summary.dat &&
#if $contigsrep.usecontigs == "yes":
    ln -s '$contigsrep.contigsreport' contigsreport.dat &&
#end if
#if $alignrep.usealign == "yes":
    ln -s '$alignrep.alignreport' alignreport.dat &&
#end if

echo 'screen.seqs(
    fasta=fasta.dat
    #if int($start) > -1:
        ,start=$start
    #end if
    #if int($end) > -1:
        ,end=$end
    #end if
    #if int($minlength) > -1:
        ,minlength=$minlength
    #end if
    #if int($maxlength) > -1:
        ,maxlength=$maxlength
    #end if
    #if int($maxambig) > -1:
        ,maxambig=$maxambig
    #end if
    #if int($maxhomop) > -1:
        ,maxhomop=$maxhomop
    #end if
    #if int($criteria) > -1:
        ,criteria=$criteria
    #end if
    #if $optimize:
        ,optimize=$optimize
    #end if
    #if $qfile:
        ,qfile=qfile.dat
    #end if
    #if $names:
        ,name=names.dat
    #end if
    #if $groups:
        ,group=groups.dat
    #end if
    #if $taxonomy:
        ,taxonomy=taxonomy.dat
    #end if
    #if $count:
        ,count=count.dat
    #end if
    #if $summary:
        ,summary=summary.dat
    #end if
    #if $contigsrep.usecontigs == "yes":
        ,contigsreport=contigsreport.dat
        ,minoverlap=$contigsrep.minoverlap
        ,ostart=$contigsrep.ostart
        ,oend=$contigsrep.oend
        ,mismatches=$contigsrep.mismatches
    #end if
    #if $alignrep.usealign == "yes":
        ,alignreport=alignreport.dat
        ,minsim=$alignrep.minsim
        ,minscore=$alignrep.minscore
        ,maxinsert=$alignrep.maxinsert
    #end if
    ,processors='"\\${GALAXY_SLOTS:-8}"'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The screen.seqs_ command enables you to keep sequences that fulfill certain user defined criteria. Furthermore, it enables you to cull those sequences not meeting the criteria from a name_, group_, or align.report_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _screen.seqs: https://www.mothur.org/wiki/Screen.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "An alignment report is created by the align.seqs tool.                 If you provide the alignment report file you can screen your sequences using the following parameters: minsim, minscore, and maxinsert" ;
                                    gal:label "Perform screening using an alignment report?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:title "usealign" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "alignreport" ;
                                            gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report to screen with" ;
                                            gal:type "data" ],
                                        [ gal:argument "minsim" ;
                                            gal:label "minsim - Minimum similarity to template sequences during alignment" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "minscore" ;
                                            gal:label "minscore - Minimum search score during alignment (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "maxinsert" ;
                                            gal:label "maxinsert - Maximum number of insertions during alignment (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ] ;
                                    gal:value "yes" ] ;
                            dc:title "alignrep" ],
                        [ gal:param [ gal:help "A contigsreport is created by the make.contigs tool.                 If you provide the contigs report file you can screen your sequences using the following parameters: minoverlap, ostart, oend and mismatches" ;
                                    gal:label "Perform screening using a contigsreport?" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ;
                                    dc:title "usecontigs" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "oend" ;
                                            gal:label "oend - Position the overlap must end after (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "minoverlap" ;
                                            gal:label "minoverlap - Minimum overlap length (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "mismatches" ;
                                            gal:label "mismatches - Maximum number of mismatches (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "contigsreport" ;
                                            gal:format "tabular" ;
                                            gal:help "this file is created by the make.contigs command" ;
                                            gal:label "contigsreport - Contigs Report to screen with" ;
                                            gal:type "data" ],
                                        [ gal:argument "ostart" ;
                                            gal:label "ostart - Position the overlap must start by (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ] ;
                                    gal:value "yes" ] ;
                            dc:title "contigsrep" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "summary" ;
                            gal:format "mothur.summary" ;
                            gal:help "saves processing time when screening with parameters in the summary file" ;
                            gal:label "summary file - as created by summary.seqs" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "taxonomy" ;
                            gal:format "taxonomy" ;
                            gal:label "taxonomy - Taxonomy to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "criteria" ;
                            gal:label "criteria - Percent of sequences that an optimize value must match to be retained (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "end" ;
                            gal:label "end - Remove sequences that end before position (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "start" ;
                            gal:label "start - Remove sequences that start after position (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "maxhomop" ;
                            gal:label "maxhomop - Remove sequences with homopolymers greater than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "qfile" ;
                            gal:format "qual" ;
                            gal:label "qfile - Sequence Quality file to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "maxlength" ;
                            gal:label "maxlength - Remove sequences longer than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "groups" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Groups to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "names" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequence Names to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "maxambig" ;
                            gal:label "maxambig - Remove sequences with ambiguous bases greater than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Fasta to screen" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "optimize" ;
                            gal:display "checkboxes" ;
                            gal:label "optimize - Optimize selected paramenters" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "maxlength" ;
                                    dc:description "maxlength" ],
                                [ gal:value "start" ;
                                    dc:description "start" ],
                                [ gal:value "end" ;
                                    dc:description "end" ],
                                [ gal:value "maxhomop" ;
                                    dc:description "maxhomop" ],
                                [ gal:value "maxambig" ;
                                    dc:description "maxambig" ],
                                [ gal:value "minlength" ;
                                    dc:description "minlength" ] ;
                            gal:type "select" ],
                        [ gal:argument "minlength" ;
                            gal:label "minlength - Remove sequences shorter than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "10" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "groups" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "groups*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            dc:title "groups_out" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta*.bad.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bad.accnos" ;
                            dc:title "bad_accnos" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: count" ;
                            dc:title "count_out" ],
                        [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            dc:title "names_out" ],
                        [ gal:filter "contigsrep.contigsreport" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "contigsreport.good.contigs.report" ;
                            gal:label "${tool.name} on ${on_string}: contigs.report" ;
                            dc:title "contigsreport_out" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: good.${fasta.datatype.file_ext}" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "alignrep.alignreport" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport.good.align.report" ;
                            gal:label "${tool.name} on ${on_string}: align.report" ;
                            dc:title "alignreport_out" ],
                        [ gal:filter "qfile" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "qfile*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: qfile" ;
                            dc:title "qfile_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Screen sequences" ;
            dc:identifier "mothur_screen_seqs" ;
            dc:title "Screen.seqs",
                "screen.seqs" ;
            schema:sku 74 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&
#if $trim.method == "oligos":
    ln -s '$trim.oligos' trim.oligos.dat &&
#elif $trim.method == "reference":
    ln -s '$trim.ecoli' trim.ecoli.dat &&
#end if

echo 'pcr.seqs(
    fasta=fasta.dat,
    #if $name_in
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $taxonomy_in:
        taxonomy=taxonomy_in.dat,
    #end if
    #if $trim.method == "oligos":
        oligos=trim.oligos.dat,
        nomatch=$trim.nomatch,
        $trim.keepprimer
    #elif $trim.method == "reference":
        ecoli=trim.ecoli.dat,
    #elif $trim.method == "position":
        start=$trim.start,
        #if $trim.end and int($trim.end) > 0:
            end=$trim.end,
        #end if
    #end if
    pdiffs=$pdiffs,
    rdiffs=$rdiffs,
    $keepdots
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The pcr.seqs_ command assigns sequences to chosen taxonomy outline.

.. _pcr.seqs: https://www.mothur.org/wiki/Pcr.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:option [ gal:value "oligos" ;
                                            dc:description "oligos" ],
                                        [ gal:value "reference" ;
                                            dc:description "reference sequence" ],
                                        [ gal:value "position" ;
                                            dc:description "start and end positions" ] ;
                                    gal:type "select" ;
                                    dc:title "method" ] ;
                            gal:when [ gal:param [ gal:checked "false" ;
                                            gal:falsevalue "" ;
                                            gal:label "keepprimer - keep the primer in the output sequence" ;
                                            gal:truevalue "keepprimer=true," ;
                                            gal:type "boolean" ;
                                            dc:title "keepprimer" ],
                                        [ gal:label "nomatch - action when no primer is found" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "reject" ;
                                                    dc:description "reject (default)" ],
                                                [ gal:value "keep" ;
                                                    dc:description "keep" ] ;
                                            gal:type "select" ;
                                            dc:title "nomatch" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "oligos" ] ;
                                    gal:value "oligos" ],
                                [ gal:param [ gal:label "end - a ending position to trim from" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "end" ],
                                        [ gal:label "start - a starting position to trim to" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "start" ] ;
                                    gal:value "position" ],
                                [ gal:param [ gal:format "mothur.align" ;
                                            gal:help "The ecoli parameter is used to provide a fasta file containing a single reference sequence (e.g. for e. coli) this must be aligned. Mothur will trim to the start and end positions of the reference sequence." ;
                                            gal:label "ecoli - An aligned reference sequence for trimming" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "ecoli" ] ;
                                    gal:value "reference" ] ;
                            dc:title "trim" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "keepdots=false," ;
                            gal:label "keepdots - keep the leading and trailing alignment dots in the output sequences" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ;
                            dc:title "keepdots" ],
                        [ gal:label "pdiffs - number of differences to allow in the forward primers (default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "pdiffs" ],
                        [ gal:label "rdiffs - number of differences to allow in the reverse primers (default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "rdiffs" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:help "sequences must be aligned" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequence representative name list" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Sequence Taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "taxonomy_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            dc:title "taxonomy_out" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: pcr.fasta" ;
                            dc:title "pcr_fasta" ],
                        [ gal:filter "trim['method'] =='oligos'" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta*.bad.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bad.accnos" ;
                            dc:title "accnos_out" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: mothur.groups" ;
                            dc:title "group_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: mothur.names" ;
                            dc:title "name_out" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.scrap.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: pcr.scrap.fasta" ;
                            dc:title "scrap_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Trim sequences" ;
            dc:identifier "mothur_pcr_seqs" ;
            dc:title "Pcr.seqs",
                "pcr.seqs" ;
            schema:sku 52 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$design' design.dat &&

echo 'metastats(
    shared=otu.dat,
    design=design.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    iters=$iters,
    threshold=$threshold,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The metastats_ command generate principle components plot data.

.. _metastats: https://www.mothur.org/wiki/Metastats

v.1.21.0: Updated to mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "iters - Number of randomizations (default 1000)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ;
                            dc:title "design" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:label "threshold - significance level to reject null hypotheses" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.05" ;
                            dc:title "threshold" ],
                        [ gal:label "sets - group sets to analyze" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "design" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "sets" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "txt" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.metastats" ] ;
                            gal:label "${tool.name} on ${on_string}: metastats" ;
                            gal:type "list" ;
                            dc:title "metastats" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "generate principle components plot data" ;
            dc:identifier "mothur_metastats" ;
            dc:title "Metastats",
                "metastats" ;
            schema:sku 69 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'pre.cluster(
    fasta=fasta.dat,
    #if $name.is_of_type("mothur.names"):
        name=name.dat,
    #elif $name.is_of_type("mothur.count_table"):
        count=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    diffs=$diffs,
    match=$match,
    mismatch=$mismatch,
    gapopen=$gapopen,
    gapextend=$gapextend,
    topdown=$topdown,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

cat fasta* &&

if [ -f fasta.precluster.map ]; then mv fasta.precluster.map fasta.precluster.fasta.map; fi
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The pre.cluster_ command implements a pseudo-single linkage algorithm with the goal of removing sequences that
are likely due to pyrosequencing errors. The basic idea is that abundant sequences are more likely to generate
erroneous sequences than rare sequences. With that in mind, the algorithm proceeds by ranking sequences in order
of their abundance. Then we walk through the list of sequences looking for rarer sequences that are within some
threshold of the original sequence. Those that are within the threshold are merged with the larger sequence.
The original Huse method performs this task on a distance matrix, whereas we do it based on the original sequences.
The advantage of our approach is that the algorithm works on aligned sequences instead of a distance matrix.
This is advantageous because by pre-clustering you remove a large number of sequences making the distance
calculation much faster.

.. _pre.cluster: https://www.mothur.org/wiki/Pre.cluster

v1.24.0: Updated to mothur 1.33, added count and topdown parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "name" ;
                            gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name file or count table - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "match" ;
                            gal:label "match - reward for a match (default 1)" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequence Fasta" ;
                            gal:type "data" ],
                        [ gal:argument "diffs" ;
                            gal:label "diffs - Number of mismatched bases to allow between sequences in a group (default 1)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "gapopen" ;
                            gal:label "gapopen - penalty for opening a gap (default -2)" ;
                            gal:type "integer" ;
                            gal:value "-2" ],
                        [ gal:argument "topdown" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "cluster from largest abundance to smallest or vice versa. Default=Yes, meaning largest to smallest" ;
                            gal:label "topdown" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "gapextend" ;
                            gal:label "gapextend - penalty for extending a gap (default -1)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "mismatch" ;
                            gal:label "mismatch - penalty for a mismatch (default -1)" ;
                            gal:type "integer" ;
                            gal:value "-1" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "fasta\\.precluster\\.(?P<designation>.*)\\.map" ] ;
                            gal:label "${tool.name} on ${on_string}: precluster.map" ;
                            gal:type "list" ;
                            dc:title "map_out" ] ;
                    gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.precluster.dat" ;
                            gal:label "${tool.name} on ${on_string}: precluster.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "name.ext != \"mothur.count_table\"" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.precluster.names" ;
                            gal:label "${tool.name} on ${on_string}: precluster.names" ;
                            dc:title "names_out" ],
                        [ gal:filter "name.ext == \"mothur.count_table\"" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "fasta*.precluster.count_table" ;
                            gal:label "${tool.name} on ${on_string}: precluster.count_table" ;
                            dc:title "count_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Remove sequences due to pyrosequencing errors" ;
            dc:identifier "mothur_pre_cluster" ;
            dc:title "Pre.cluster",
                "pre.cluster" ;
            schema:sku 23 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'unifrac.weighted(
    tree=tree.dat,
    #if $group:
        group=group.dat,
        #if $groups:
            groups=${ str($groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        consensus=$subsampling.consensus,
    #else
        random=$random,
    #end if
    #if $distance:
        distance=$distance,
    #end if
    #if $count:
        count=count.dat,
    #end if
    root=$root,
    processors='\\${GALAXY_SLOTS:-1}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## rename some datasets
#if $subsampling.use == "yes":
    && mv tree.*.ave.dist tree.ave
    && mv tree.*.std.dist tree.std
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The unifrac.weighted_ command implements the weighted UniFrac algorithm. The unifrac.unweighted command implements the unweighted version of the command. Both of these methods are available through the UniFrac website. The UniFrac methods are generic tests that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _unifrac.weighted: https://www.mothur.org/wiki/Unifrac.weighted

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "(instead of randomly generated comparisons)" ;
                                    gal:label "use subsampling of groups?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "the size per group of the sample" ;
                                            gal:label "subsample - (defaults to the size of the smallest group)" ;
                                            gal:min "1" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsample" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "The consensus parameter allows you to indicate you would like trees built from distance matrices created with the results of the subsampling, as well as a consensus tree built from these trees. Default=F" ;
                                            gal:label "consensus -" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "consensus" ] ;
                                    gal:value "yes" ] ;
                            dc:title "subsampling" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "root - the entire root in your calculations" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "root" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "unused if subsample=True" ;
                            gal:label "random - Compare your trees with randomly generated trees" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "random" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Tree" ;
                            gal:type "data" ;
                            dc:title "tree" ],
                        [ gal:help "You must select at least 2 groups" ;
                            gal:label "groups - Select groups for pairwise comparisons" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:label "distance - Create a distance matrix for your history" ;
                            gal:option [ gal:value "square" ;
                                    dc:description "Phylip Square Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip Lower Triangle Matrix" ],
                                [ gal:value "column" ;
                                    dc:description "Pairwise Distance Matrix" ] ;
                            gal:type "select" ;
                            dc:title "distance" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "tree*wsummary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ] ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.ave" ;
                            gal:label "${tool.name} on ${on_string}: ave.dist" ;
                            dc:title "ave_dist" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ] ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.dat*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            dc:title "dist" ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.all.tre" ;
                            gal:label "${tool.name} on ${on_string}: all.tre" ;
                            dc:title "all_tree" ],
                        [ gal:filter "(random and subsampling['use'] == 'no')" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.weighted" ;
                            gal:label "${tool.name} on ${on_string}: weighted" ;
                            dc:title "weighted" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.std" ;
                            gal:label "${tool.name} on ${on_string}: std.dist" ;
                            dc:title "std_dist" ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.cons.tre" ;
                            gal:label "${tool.name} on ${on_string}: cons.tre" ;
                            dc:title "cons_tree" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Describes whether two or more communities have the same structure" ;
            dc:identifier "mothur_unifrac_weighted" ;
            dc:title "unifrac.weighted" ;
            schema:sku 20 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
#if $list:
    ln -s '$list' list.dat &&
#end if
#if $shared:
    ln -s '$shared' shared.dat &&
#end if
#if $constaxonomy:
    ln -s '$constaxonomy' constaxonomy.dat &&
#end if
#if $corraxes:
    ln -s '$corraxes' corraxes.dat &&
#end if
#if $otucorr:
    ln -s '$otucorr' otucorr.dat &&
#end if

echo 'get.otus(
    #if $list
        list=list.dat,
    #end if
    #if $shared
        shared=shared.dat,
    #end if
    #if $corraxes:
        corraxes=corraxes.dat,
    #end if
    #if $otucorr:
        otucorr=otucorr.dat,
    #end if
    #if $constaxonomy
        constaxonomy=constaxonomy.dat,
    #end if
    accnos=accnos.dat
    #if $labelsource.label:
        ,label=${ str($labelsource.label).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.otus command selects otus from a given list.

.. _list: https://www.mothur.org/wiki/List_file
.. _get.otus: https://www.mothur.org/wiki/Get.otus

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select a label from" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description " OTU shared file " ],
                                        [ gal:value "list" ;
                                            dc:description " OTU list file " ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "label" ;
                                            gal:help "select exactly one label. If none selected, the first label in your file will be used" ;
                                            gal:label "label - OTU Label" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "list" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ] ;
                                    gal:value "list" ],
                                [ gal:param [ gal:argument "label" ;
                                            gal:help "select exactly one label. If none selected, the first label in your file will be used" ;
                                            gal:label "label - OTU Label" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "shared" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ] ;
                                    gal:value "shared" ] ;
                            dc:title "labelsource" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "otucorr" ;
                            gal:format "mothur.otu.corr" ;
                            gal:help "otu correlation coefficients are output by the otu.association command" ;
                            gal:label "OTU correlation file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "constaxonomy" ;
                            gal:format "mothur.cons.taxonomy" ;
                            gal:help "The contaxonomy file is the taxonomy file outputted by classify.otu" ;
                            gal:label "contaxonomy - consensus taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "corraxes" ;
                            gal:format "mothur.axes" ;
                            gal:help "correlation axes file is output by the corr.axes command" ;
                            gal:label "Correlation axes file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:label "accnos - Group Names from your history" ;
                            gal:type "data" ],
                        [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "OTU List OTU Shared file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter " $constaxonomy " ;
                            gal:format "mothur.cons.taxonomy" ;
                            gal:from_work_dir "constaxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.cons.taxonomy" ;
                            dc:title "constaxonomy_out" ],
                        [ gal:filter " $corraxes " ;
                            gal:format "mothur.axes" ;
                            gal:from_work_dir "corraxes*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.axes" ;
                            dc:title "corraxes_out" ],
                        [ gal:filter " $shared " ;
                            gal:format "mothur.shared" ;
                            gal:from_work_dir "shared*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            dc:title "shared_out" ],
                        [ gal:filter " $list " ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            dc:title "list_out" ],
                        [ gal:filter " $otucorr " ;
                            gal:format "mothur.otu.corr" ;
                            gal:from_work_dir "otucorr*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.otu.corr" ;
                            dc:title "otucorr_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get otus containing sequences from specified groups" ;
            dc:identifier "mothur_get_otus" ;
            dc:title "Get.otus",
                "get.otus" ;
            schema:sku 92 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&
ln -s '$metadata' metadata.dat &&
#if $picrustc.use == "yes":
    ln -s '$picrustc.picrust' picrustc.picrust.dat &&
    ln -s '$picrustc.reftax' picrustc.reftax.dat &&
#end if

echo 'make.biom(
    shared=otu.dat,
    #if $constaxonomy:
        constaxonomy=constaxonomy.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $metadata:
        metadata=metadata.dat,
    #end if
    #if $picrustc.use == "yes":
        picrust=picrustc.picrust.dat,
        reftaxonomy=picrustc.reftax.dat,
    #end if
    matrixtype=$matrixtype
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.biom command converts a shared_ shared file to biom_ files.
The output can be filtered by groups and labels.


.. _shared: https://www.mothur.org/wiki/Shared_file
.. _biom:  http://biom-format.org/documentation/biom_format.html
.. _make.biom: https://www.mothur.org/wiki/Make.biom

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "use picrust program" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "The picrust program requires green genes OTU IDs. The picrust parameter allows you to provide the OTU ID mapping table associated with your reference taxonomy" ;
                                            gal:label "picrust" ;
                                            gal:type "data" ;
                                            dc:title "picrust" ],
                                        [ gal:format "mothur.ref.taxonomy" ;
                                            gal:help "The referencetax parameter is used with the picrust parameter. Picrust requires the greengenes OTU IDs to be in the biom file, and the referencetax parameter allows you to provide your reference taxonomy file you used when classifying your sequences" ;
                                            gal:label "reftaxonomy" ;
                                            gal:type "data" ;
                                            dc:title "reftax" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "picrustc" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:help "The contaxonomy file is the taxonomy file outputted by classify.otu" ;
                            gal:label "contaxonomy - consensus taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "constaxonomy" ],
                        [ gal:format "tabular,txt" ;
                            gal:help "You can add sample data support here" ;
                            gal:label "metadata" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "metadata" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "By default all are included if no selection is made" ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:help "By default all are included if no selection is made" ;
                            gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:label "matrixtype - sparse or dense" ;
                            gal:option [ gal:value "sparse" ;
                                    dc:description "sparse" ],
                                [ gal:value "dense" ;
                                    dc:description "dense" ] ;
                            gal:type "select" ;
                            dc:title "matrixtype" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "biom1" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.biom" ] ;
                            gal:label "${tool.name} on ${on_string}: biom files" ;
                            gal:type "list" ;
                            dc:title "biomfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Make biom files from a shared file" ;
            dc:identifier "mothur_make_biom" ;
            dc:title "Make.biom",
                "make.biom" ;
            schema:sku 70 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$project' project.dat &&
ln -s '$sff' sff.dat &&
ln -s '$oligos' oligos.dat &&
ln -s '$mimark' mimark.dat &&
ln -s '$fastq' fastq.dat &&

echo 'make.sra(
    project=project.dat,
    sff=sff.dat,
    oligos=oligos.dat,
    mimark=mimark.dat,
    #if $fastq:
        fastq=fastq.dat,
    #end if
    bdiffs=$bdiffs,
    pdiffs=$pdiffs,
    tdiffs=$tdiffs,
    ldiffs=$ldiffs,
    sdiffs=$sdiffs,
    checkorient=$checkorient,
    orientation=$orientation,
    platform=$platform,
    instrument=$instrument,
    libstrategy=$libstrategy,
    libselection=$libselection,
    libsource=$libsource,
    datatype=$datatype,
    trim=$trim,
    includescrap=$includescrap
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.sra_ creates the necessary files for a NCBI submission.

.. _make.sra: https://www.mothur.org/wiki/Make.sra

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "orientation - specify the sequence orientation" ;
                            gal:option [ gal:value "reverse" ;
                                    dc:description "reverse" ],
                                [ gal:selected "true" ;
                                    gal:value "forward" ;
                                    dc:description "forward" ] ;
                            gal:type "select" ;
                            dc:title "orientation" ],
                        [ gal:format "txt" ;
                            gal:label "mimarks file - you can create the template for this file using the get.mimarkspackage command" ;
                            gal:type "data" ;
                            dc:title "mimark" ],
                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "sdiffs" ],
                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "ldiffs" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "platform - specify platform you are using" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "_LS454" ;
                                    dc:description "454 (_LS454)" ],
                                [ gal:value "ION_TORRENT" ;
                                    dc:description "Ion Torrent (ION_TORRENT)" ],
                                [ gal:value "PACBIO_SMRT" ;
                                    dc:description "PacBio (PACBIO_SMRT)" ],
                                [ gal:value "ILLUMINA" ;
                                    dc:description "Illumina (ILLUMINA)" ] ;
                            gal:type "select" ;
                            dc:title "platform" ],
                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "tdiffs" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libsource - specify library source" ;
                            gal:option [ gal:value "VIRAL_RNA" ;
                                    dc:description "VIRAL_RNA" ],
                                [ gal:value "GENOMIC" ;
                                    dc:description "GENOMIC" ],
                                [ gal:value "SYNTHETIC" ;
                                    dc:description "SYNTHETIC" ],
                                [ gal:selected "true" ;
                                    gal:value "METAGENOMIC" ;
                                    dc:description "METAGENOMIC" ],
                                [ gal:value "METATRANSCRIPTOMIC" ;
                                    dc:description "METATRANSCRIPTOMIC" ],
                                [ gal:value "TRANSCRIPTOMIC" ;
                                    dc:description "TRANSCRIPTOMIC" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ] ;
                            gal:type "select" ;
                            dc:title "libsource" ],
                        [ gal:format "tabular" ;
                            gal:label "Project file" ;
                            gal:type "data" ;
                            dc:title "project" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:label "Include scrapped sequences in your submission?" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ;
                            dc:title "includescrap" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "datatype - specify datatype" ;
                            gal:option [ gal:value "VARIATION" ;
                                    dc:description "VARIATION" ],
                                [ gal:value "ASSEMBLY" ;
                                    dc:description "ASSEMBLY" ],
                                [ gal:value "GENOME_SEQUENCING" ;
                                    dc:description "GENOME_SEQUENCING" ],
                                [ gal:value "CLONE_ENDS" ;
                                    dc:description "CLONE_ENDS" ],
                                [ gal:value "GENOTYPE" ;
                                    dc:description "GENOTYPE" ],
                                [ gal:value "TRANSCRIPTOME" ;
                                    dc:description "TRANSCRIPTOME" ],
                                [ gal:value "TARGETED_LOCI" ;
                                    dc:description "TARGETED_LOCI" ],
                                [ gal:value "MAP" ;
                                    dc:description "MAP" ],
                                [ gal:selected "true" ;
                                    gal:value "METAGENOME" ;
                                    dc:description "METAGENOME" ],
                                [ gal:value "RANDOM_SURVEY" ;
                                    dc:description "RANDOM_SURVEY" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ],
                                [ gal:value "EPIGENOMICS" ;
                                    dc:description "EPIGENOMICS" ],
                                [ gal:value "METAGENOMIC_ASSEMBLY" ;
                                    dc:description "METAGENOMIC_ASSEMBLY" ],
                                [ gal:value "EXOME" ;
                                    dc:description "EXOME" ],
                                [ gal:value "PROTEOMIC" ;
                                    dc:description "PROTEOMIC" ],
                                [ gal:value "PHENOTYPE" ;
                                    dc:description "PHENOTYPE" ] ;
                            gal:type "select" ;
                            dc:title "datatype" ],
                        [ gal:format "sff" ;
                            gal:label "sff - provide the original sff file" ;
                            gal:type "data" ;
                            dc:title "sff" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libselection - specify library selection" ;
                            gal:option [ gal:value "Restriction_Digest" ;
                                    dc:description "Restriction_Digest" ],
                                [ gal:value "RANDOM_PCR" ;
                                    dc:description "RANDOM_PCR" ],
                                [ gal:value "Reduced_Representation" ;
                                    dc:description "Reduced_Representation" ],
                                [ gal:value "CF-M" ;
                                    dc:description "CF-M" ],
                                [ gal:value "size_fractionation" ;
                                    dc:description "size_fractionation" ],
                                [ gal:value "HMPR" ;
                                    dc:description "HMPR" ],
                                [ gal:value "RANDOM" ;
                                    dc:description "RANDOM" ],
                                [ gal:value "MSLL" ;
                                    dc:description "MSLL" ],
                                [ gal:value "CAGE" ;
                                    dc:description "CAGE" ],
                                [ gal:value "MDA" ;
                                    dc:description "MDA" ],
                                [ gal:value "MBD2_protein_methyl-CpG_binding_domain" ;
                                    dc:description "MBD2_protein_methyl-CpG_binding_domain" ],
                                [ gal:value "RACE" ;
                                    dc:description "RACE" ],
                                [ gal:value "MNase" ;
                                    dc:description "MNase" ],
                                [ gal:value "ChIP" ;
                                    dc:description "ChIP" ],
                                [ gal:value "MF" ;
                                    dc:description "MF" ],
                                [ gal:value "Hybrid_Selection" ;
                                    dc:description "Hybrid_Selection" ],
                                [ gal:value "other" ;
                                    dc:description "other" ],
                                [ gal:value "RT-PCR" ;
                                    dc:description "RT-PCR" ],
                                [ gal:value "CF-T" ;
                                    dc:description "CF-T" ],
                                [ gal:value "CF-H" ;
                                    dc:description "CF-H" ],
                                [ gal:value "CF-S" ;
                                    dc:description "CF-S" ],
                                [ gal:selected "true" ;
                                    gal:value "PCR" ;
                                    dc:description "PCR" ],
                                [ gal:value "5-methylcytidine_antibody" ;
                                    dc:description "5-methylcytidine_antibody" ],
                                [ gal:value "cDNA" ;
                                    dc:description "cDNA" ],
                                [ gal:value "Padlock_probes_capture_method" ;
                                    dc:description "Padlock_probes_capture_method" ] ;
                            gal:type "select" ;
                            dc:title "libselection" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "checkorient - will check for the reverse compliment of the barcode or primer in the sequence. The default is false." ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "checkorient" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libstrategy - specify library strategy" ;
                            gal:option [ gal:value "Tn-Seq" ;
                                    dc:description "Tn-Seq" ],
                                [ gal:value "FL-cDNA" ;
                                    dc:description "FL-cDNA" ],
                                [ gal:value "MNase-Seq" ;
                                    dc:description "MNase-Seq" ],
                                [ gal:value "WCS" ;
                                    dc:description "WCS" ],
                                [ gal:value "MRE-Seq" ;
                                    dc:description "MRE-Seq" ],
                                [ gal:value "miRNA-Se" ;
                                    dc:description "miRNA-Se" ],
                                [ gal:value "RNA-Seq" ;
                                    dc:description "RNA-Seq" ],
                                [ gal:value "CTS" ;
                                    dc:description "CTS" ],
                                [ gal:value "WGA" ;
                                    dc:description "WGA" ],
                                [ gal:value "WGS" ;
                                    dc:description "WGS" ],
                                [ gal:value "POOLCLONE" ;
                                    dc:description "POOLCLONE" ],
                                [ gal:value "ChIP-Seq" ;
                                    dc:description "ChIP-Seq" ],
                                [ gal:value "CLONEEND" ;
                                    dc:description "CLONEEND" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ],
                                [ gal:selected "true" ;
                                    gal:value "AMPLICON" ;
                                    dc:description "AMPLICON" ],
                                [ gal:value "DNase-Hypersensitivity" ;
                                    dc:description "DNase-Hypersensitivity" ],
                                [ gal:value "Bisulfite-Seq" ;
                                    dc:description "Bisulfite-Seq" ],
                                [ gal:value "MeDIP-Seq" ;
                                    dc:description "MeDIP-Seq" ],
                                [ gal:value "EST" ;
                                    dc:description "EST" ],
                                [ gal:value "MBD-Seq" ;
                                    dc:description "MBD-Seq" ],
                                [ gal:value "CLONE" ;
                                    dc:description "CLONE" ],
                                [ gal:value "FINISHING" ;
                                    dc:description "FINISHING" ] ;
                            gal:type "select" ;
                            dc:title "libstrategy" ],
                        [ gal:label "bdiffs - number of differences to allow in the barcode (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "bdiffs" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "instrument - specify instrument" ;
                            gal:option [ gal:value "Illumina_MiSeq" ;
                                    dc:description "Illumina_MiSeq" ],
                                [ gal:value "454_GS_FLX" ;
                                    dc:description "454_GS_FLX" ],
                                [ gal:value "unspecified" ;
                                    dc:description "unspecified" ],
                                [ gal:value "Illumina_Genome_Analyzer_IIx" ;
                                    dc:description "Illumina_Genome_Analyzer_IIx" ],
                                [ gal:value "Illumina_HiSeq_2000" ;
                                    dc:description "Illumina_HiSeq_2000" ],
                                [ gal:value "454_GS_FLX_Titanium" ;
                                    dc:description "454_GS_FLX_Titanium" ],
                                [ gal:value "Illumina_Genome_Analyzer" ;
                                    dc:description "Illumina_Genome_Analyzer" ],
                                [ gal:selected "true" ;
                                    gal:value "454_GS" ;
                                    dc:description "454_GS" ],
                                [ gal:value "Illumina_Genome_Analyzer_II" ;
                                    dc:description "Illumina_Genome_Analyzer_II" ],
                                [ gal:value "Ion_Torrent_PGM" ;
                                    dc:description "Ion_Torrent_PGM" ],
                                [ gal:value "454_GS_Junior" ;
                                    dc:description "454_GS_Junior" ],
                                [ gal:value "454_GS_20" ;
                                    dc:description "454_GS_20" ],
                                [ gal:value "PacBio_RS" ;
                                    dc:description "PacBio_RS" ],
                                [ gal:value "Illumina_HiSeq_1000" ;
                                    dc:description "Illumina_HiSeq_1000" ] ;
                            gal:type "select" ;
                            dc:title "instrument" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:help "will trim to the clipQualLeft and clipQualRight values in sff file" ;
                            gal:label "Trim sequences and quality scores?" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ;
                            dc:title "trim" ],
                        [ gal:format "mothur.oligos" ;
                            gal:label "oligos - provide an oligos file to parse your sff or fastq file by. It is required and must contain barcodes and primers" ;
                            gal:type "data" ;
                            dc:title "oligos" ],
                        [ gal:format "fastq" ;
                            gal:label "fastq - provide the original fastq file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fastq" ],
                        [ gal:label "pdiffs - number of differences to allow in the primer (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "pdiffs" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "xml" ;
                            gal:from_work_dir "submission.xml" ;
                            gal:label "${tool.name} on ${on_string}: submission.xml" ;
                            dc:title "submission_xml" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "sff*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "sff*.flow" ;
                            gal:label "${tool.name} on ${on_string}: flow" ;
                            dc:title "flow_out" ],
                        [ gal:format "sff" ;
                            gal:from_work_dir "sff*.scrap.sff" ;
                            gal:label "${tool.name} on ${on_string}: scrap sff" ;
                            dc:title "scrap_sff" ],
                        [ gal:format "qual" ;
                            gal:from_work_dir "sff*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            dc:title "qual_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "creates the necessary files for a NCBI submission" ;
            dc:identifier "mothur_make_sra" ;
            dc:title "Make.sra",
                "make.sra" ;
            schema:sku 24 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'reverse.seqs(
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The reverse.seqs_ command will generate a fasta containing the reverse complement of each sequence in the input fasta.

.. _reverse.seqs: https://www.mothur.org/wiki/Reverse.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Sequences to reverse complement" ;
                            gal:type "data" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.rc.*" ;
                            gal:label "${tool.name} on ${on_string}: rc.fasta" ;
                            dc:title "out_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Reverse complement the sequences" ;
            dc:identifier "mothur_reverse_seqs" ;
            dc:title "Reverse.seqs",
                "reverse.seqs" ;
            schema:sku 3 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$group_in' group_in.dat &&
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$shared_in' shared_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&
ln -s '$design_in' design_in.dat &&
ln -s '$column_in' column_in.dat &&
ln -s '$phylip_in' phylip_in.dat &&
#if $groupnames.source == 'accnos':
    ln -s '$groupnames.accnos' groupnames.accnos.dat &&
#end if

echo 'get.groups(
    #if $group_in.is_of_type("mothur.groups"):
        group=group_in.dat
    #else
        count=group_in.dat
    #end if
    #if $groupnames.source == 'groups':
        #if $groupnames.groups:
            ,groups=${ str($groupnames.groups).replace(",","-") }
        #end if
    #else
        ,accnos=groupnames.accnos.dat
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $shared_in:
        ,shared=shared_in.dat
    #end if
    #if $taxonomy_in:
        ,taxonomy=taxonomy_in.dat
    #end if
    #if $design_in:
        ,design=design_in.dat
    #end if
    #if $column_in:
        ,column=column_in.dat
    #end if
    #if $phylip_in:
        ,phylip=phylip_in.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The get.groups_ command selects sequences from a specific group or set of groups from the following file types: fasta, fasta, name_, group_, list_, taxonomy_.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _get.groups: https://www.mothur.org/wiki/Get.groups

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Group Names from" ;
                                    gal:option [ gal:value "accnos" ;
                                            dc:description "A History Group Name Accnos Dataset" ],
                                        [ gal:value "groups" ;
                                            dc:description "A List of Group Names" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "accnos - Group Names from your history" ;
                                            gal:type "data" ;
                                            dc:title "accnos" ] ;
                                    gal:value "accnos" ],
                                [ gal:param [ gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group_in" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ] ;
                                    gal:value "groups" ] ;
                            dc:title "groupnames" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.groups,mothur.count_table" ;
                            gal:label "group or count_table file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                            gal:help "must be a phylip-formatted distance matrix" ;
                            gal:label "phylip - Distance Matrix you would like to select distances from" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "phylip_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "list_in" ],
                        [ gal:format "tabular" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "design_in" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "shared_in" ],
                        [ gal:format "mothur.pair.dist" ;
                            gal:help "must be a column-formatted distance matrix" ;
                            gal:label "column - Distance Matrix you would like to select distances from" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "column_in" ],
                        [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "taxonomy_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in.*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:type "list" ;
                            dc:title "listfiles" ],
                        [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern "shared_in.*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "shared_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            gal:type "list" ;
                            dc:title "sharedfiles" ] ;
                    gal:data [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "phylip_in" ;
                            gal:format_source "phylip_in" ;
                            gal:from_work_dir "phylip_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.phylip" ;
                            dc:title "phylip_out" ],
                        [ gal:filter "design_in" ;
                            gal:format "mothur.design" ;
                            gal:from_work_dir "design_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.design" ;
                            dc:title "design_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            dc:title "name_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "group_in.ext == \"mothur.count_table\"" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            dc:title "count_out" ],
                        [ gal:filter "column_in" ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "column_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.column" ;
                            dc:title "column_out" ],
                        [ gal:filter "group_in.ext == \"mothur.groups\"" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            dc:title "group_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Select groups" ;
            dc:identifier "mothur_get_groups" ;
            dc:title "Get.groups",
                "get.groups" ;
            schema:sku 32 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$matrix.dist' matrix.dist.dat &&
ln -s '$matrix.name' matrix.name.dat &&
ln -s '$count' count.dat &&

echo 'cluster(
    #if $matrix.format == "phylip":
        phylip=matrix.dist.dat,
    #else
        column=matrix.dist.dat,
    #end if
    #if $matrix.name:
        name=matrix.name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $select_method.method =="opti":
        metric=$select_method.metric,
        initialize=$select_method.initialize,
        delta=$select_method.delta,
        iters=$select_method.iters,
    #end if
    precision=$precision,
    sim=$sim,
    method=$select_method.method
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The cluster_ command assign sequences to OTUs (Operational Taxonomy Unit).  The assignment is based on a phylip-formatted_distance_matrix_ or a  column-formatted_distance_matrix_ and name_ file.  It generates a list_, a sabund_ (Species Abundance), and a rabund_ (Relative Abundance) file.

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _name: https://www.mothur.org/wiki/Name_file
.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _cluster: https://www.mothur.org/wiki/Cluster

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:argument "method" ;
                            gal:label "Clustering Method" ;
                            gal:option [ gal:value "nearest" ;
                                    dc:description "Nearest neighbor" ],
                                [ gal:value "average" ;
                                    dc:description "Average neighbor" ],
                                [ gal:value "furthest" ;
                                    dc:description "Furthest neighbor" ],
                                [ gal:selected "true" ;
                                    gal:value "opti" ;
                                    dc:description "Opticlust method" ] ;
                            gal:type "select" ;
                            gal:when [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "dgc" ],
                                [ gal:argument "delta",
                                        "initialize",
                                        "iters",
                                        "metric" ;
                                    gal:help "Options are Matthews correlation coefficient (mcc), sensitivity (sens), specificity (spec), true positives + true negatives (tptn),             false positives + false negatives (fpfn), true positives (tp), true negative (tn), false positive (fp), false negative (fn), f1score (f1score),             accuracy (accuracy), positive predictive value (ppv), negative predictive value (npv), false discovery rate (fdr). Default=mcc.",
                                        "The delta parameter allows to set the stable value for the metric in the opticluster method. To reach a full convergence, set delta=0.",
                                        "singleton: each sequence is randomly assigned to its own OTU; oneotu: all sequences are assigned to one otu" ;
                                    gal:label "Initial randomization",
                                        "Maximum number of iterations",
                                        "metric - select the metric in the opticluster method",
                                        "set the stable value for the metric in the opticluster method" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "mcc" ;
                                            dc:description "Matthews correlation coefficient (mcc)" ],
                                        [ gal:selected "true" ;
                                            gal:value "singleton" ;
                                            dc:description "Singleton" ],
                                        [ gal:value "f1score" ;
                                            dc:description "f1score" ],
                                        [ gal:value "tp" ;
                                            dc:description "true positives" ],
                                        [ gal:value "npv" ;
                                            dc:description "negative predictive value" ],
                                        [ gal:value "accuracy" ;
                                            dc:description "accuracy" ],
                                        [ gal:value "fp" ;
                                            dc:description "false positive" ],
                                        [ gal:value "sens" ;
                                            dc:description "Sensitivity" ],
                                        [ gal:value "tptn" ;
                                            dc:description "true positives + true negatives" ],
                                        [ gal:value "ppv" ;
                                            dc:description "positive predictive value" ],
                                        [ gal:value "fdr" ;
                                            dc:description "false discovery rate" ],
                                        [ gal:value "oneotu" ;
                                            dc:description "Oneotu" ],
                                        [ gal:value "spec" ;
                                            dc:description "specificity" ],
                                        [ gal:value "fn" ;
                                            dc:description "false negative" ],
                                        [ gal:value "fpfn" ;
                                            dc:description "false positives + false negatives" ],
                                        [ gal:value "tn" ;
                                            dc:description "true negative" ] ;
                                    gal:type "float",
                                        "integer",
                                        "select" ;
                                    gal:value "0.0001",
                                        "100",
                                        "opti" ],
                                [ gal:value "furthest" ],
                                [ gal:value "average" ],
                                [ gal:value "nearest" ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "agc" ] ;
                            dc:title "select_method" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Cluster based on" ;
                                    gal:option [ gal:value "fasta" ;
                                            dc:description "Fasta (VSEARCH)" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Matrix" ] ;
                                    gal:type "select" ;
                                    dc:title "format" ] ;
                            gal:when [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ],
                                [ gal:param [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ],
                                        [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ],
                                        [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ] ;
                            dc:title "matrix" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "sim" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:option [ gal:value "100000" ;
                                    dc:description ".00001" ],
                                [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ],
                                [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:value "10" ;
                                    dc:description ".1" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "precision" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0.0" ;
                            gal:type "float" ;
                            gal:value "0.0" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.list" ;
                            gal:from_work_dir "matrix.dist*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            dc:title "otulist" ],
                        [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "matrix.dist*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            dc:title "sabund" ],
                        [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "matrix.dist*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            dc:title "rabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to OTUs (Operational Taxonomic Unit)" ;
            dc:identifier "mothur_cluster" ;
            dc:title "Cluster",
                "cluster" ;
            schema:sku 22 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## if accnos file is empty, just output files as-is, mothur errors if accnos empty (e.g. chimera filtering in pipeline but sample had no chimeras)
#import os
#if $os.lstat(str($accnos)).st_size == 0:
    echo "accnos file empty, nothing to remove, skipping step"
    #if $fasta_in:
        && cp $fasta_in $fasta_out
    #end if
    #if $fastq_in:
        && cp $fastq_in $fastq_out
    #end if
    #if $count_in:
        && cp $count_in $count_out
    #end if
    #if $qfile_in:
        && cp $qfile_in $qfile_out
    #end if
    #if $name_in:
        && cp $name_in $name_out
    #end if
    #if $group_in:
        && cp $group_in $group_out
    #end if
    #if $alignreport_in:
        && cp $alignreport_in $alignreport_out
    #end if
    #if $list_in:
        && cp $list_in $list_out
    #end if
    #if $taxonomy_in:
        && cp $taxonomy_in $taxonomy_out
    #end if
#else:
    ## create symlinks to input datasets
    ln -s '$accnos' accnos.dat &&
    ln -s '$fasta_in' fasta_in.dat &&
    ln -s '$fastq_in' fastq_in.dat &&
    ln -s '$count_in' count_in.dat &&
    ln -s '$qfile_in' qfile_in.dat &&
    ln -s '$name_in' name_in.dat &&
    ln -s '$group_in' group_in.dat &&
    ln -s '$alignreport_in' alignreport_in.dat &&
    ln -s '$list_in' list_in.dat &&
    ln -s '$taxonomy_in' taxonomy_in.dat &&

    echo 'remove.seqs(
        accnos=accnos.dat
        #if $fasta_in:
            ,fasta=fasta_in.dat
        #end if
        #if $fastq_in:
            ,fastq=fastq_in.dat
        #end if
        #if $count_in:
            ,count=count_in.dat
        #end if
        #if $qfile_in:
            ,qfile=qfile_in.dat
        #end if
        #if $name_in:
            ,name=name_in.dat
        #end if
        #if $group_in:
            ,group=group_in.dat
        #end if
        #if $alignreport_in:
            ,alignreport=alignreport_in.dat
        #end if
        #if $list_in:
            ,list=list_in.dat
        #end if
        #if $taxonomy_in:
            ,taxonomy=taxonomy_in.dat
        #end if
        $dups
    )'
    | sed 's/ //g'  ## mothur trips over whitespace
    | mothur
    | tee mothur.out.log
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.seqs_ command takes a list of sequence names and either a fasta, name_, group_, list_, align.report_ or taxonomy_ file to generate a new file that does not contain the sequences in the list. This command may be used in conjunction with the list.seqs_ command to help screen a sequence collection.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs
.. _remove.seqs: https://www.mothur.org/wiki/Remove.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "alignreport_in" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Fasta Quality" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "qfile_in" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "list_in" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count_in" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "taxonomy_in" ],
                        [ gal:checked "true" ;
                            gal:falsevalue ",dups=false" ;
                            gal:label "dups - Apply to duplicates" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ;
                            dc:title "dups" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Groups" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Accession Names of sequences to be removed" ;
                            gal:type "data" ;
                            dc:title "accnos" ],
                        [ gal:format "fastq" ;
                            gal:label "fastq" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fastq_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "count_in" ;
                            gal:format_source "count_in" ;
                            gal:from_work_dir "count_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.count" ;
                            dc:title "count_out" ],
                        [ gal:filter "fastq_in" ;
                            gal:format_source "fastq_in" ;
                            gal:from_work_dir "fastq_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.fastq" ;
                            dc:title "fastq_out" ],
                        [ gal:filter "list_in" ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            dc:title "list_out" ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            dc:title "alignreport_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            dc:title "name_out" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            dc:title "group_out" ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.qfile" ;
                            dc:title "qfile_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Remove sequences by name" ;
            dc:identifier "mothur_remove_seqs" ;
            dc:title "Remove.seqs",
                "remove.seqs" ;
            schema:sku 72 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fastq' fastq.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'fastq.info(
    fastq=fastq.dat,
    pacbio=$pacbio,
    format=$format
    #if $oligo.add == "yes":
        ,oligos=oligo.oligos.dat
        ,bdiffs=$oligo.bdiffs
        ,pdiffs=$oligo.pdiffs
        ,tdiffs=$oligo.tdiffs
        ,ldiffs=$oligo.ldiffs
        ,sdiffs=$oligo.sdiffs
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
## rename some outputs
#if $oligo.add == "yes":
    && mv fastq.scrap.fasta scrap.fasta
    && mv fastq.scrap.qual scrap.qual
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The fastq.info_ command reads a fastq file and creates a fasta and quality file.


.. _fastq.info: https://www.mothur.org/wiki/Fastq.info

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "a file that contain the sequences of the forward and reverse primers and barcodes and their sample identifier.                 Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\"                 or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                    gal:label "Use oligos file?" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "add" ] ;
                            gal:when [ gal:param [ gal:argument "bdiffs" ;
                                            gal:label "bdiffs - number of differences to allow in the barcode (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "pdiffs" ;
                                            gal:label "pdiffs - number of differences to allow in the primer (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "ldiffs" ;
                                            gal:label "ldiffs - total number of differences to allow in linker sequence (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "oligos" ;
                                            gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:type "data" ],
                                        [ gal:argument "tdiffs" ;
                                            gal:label "tdiffs - total number of differences to allow in primer and barcode (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "sdiffs" ;
                                            gal:label "sdiffs - total number of differences to allow in spacer sequence (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "oligo" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "pacbio" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "pacbio - if set to true, quality scores of 0 will results in a corresponding base of N" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "fastq" ;
                            gal:format "fastq" ;
                            gal:label "fastq - Fastq Sequence file" ;
                            gal:type "data" ],
                        [ gal:argument "format" ;
                            gal:label "format of sequence" ;
                            gal:option [ gal:value "illumina1.8+" ;
                                    dc:description "illumina1.8+" ],
                                [ gal:value "illumina" ;
                                    dc:description "illumina" ],
                                [ gal:value "solexa" ;
                                    dc:description "solexa" ],
                                [ gal:selected "true" ;
                                    gal:value "sanger" ;
                                    dc:description "sanger" ] ;
                            gal:type "select" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "oligos" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "scrap.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual scrap" ;
                            dc:title "qfile_scrap_out" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "fastq*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:format "qual454" ;
                            gal:from_work_dir "fastq*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            dc:title "qfile_out" ],
                        [ gal:filter "oligos" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "scrap.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta scrap" ;
                            dc:title "fasta_scrap_out" ],
                        [ gal:filter "oligos" ;
                            gal:format "fastq" ;
                            gal:from_work_dir "fastq*.scrap.fastq" ;
                            gal:label "${tool.name} on ${on_string}: fastq scrap" ;
                            dc:title "fastq_scrap_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Convert fastq to fasta and quality" ;
            dc:identifier "mothur_fastq_info" ;
            dc:title "Fastq.info",
                "fastq.info" ;
            schema:sku 85 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## enable mothur to find blast
ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&

echo 'align.seqs(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    align=$align,
    #if $search.method == "kmer":
        ksize=$search.ksize,
    #else:
        search=$search.method,
    #end if
    #if $scoring.adjust == "yes":
        match=$scoring.match,
        mismatch=$scoring.mismatch,
        gapopen=$scoring.gapopen,
        gapextend=$scoring.gapextend,
    #end if
    #if $reverse.flip == "yes":
        flip=true,
        threshold=$reverse.threshold,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The align.seqs_ command aligns a user-supplied fasta-formatted fasta sequence file to a user-supplied fasta-formatted template_alignment_.

The general approach is to
 i) find the closest template for each fasta using kmer searching, blastn, or suffix tree searching;
 ii) to make a pairwise alignment between the fasta and de-gapped template sequences using the Needleman-Wunsch, Gotoh,or blastn algorithms; and
 iii) to re-insert gaps to the fasta and template pairwise alignments using the NAST algorithm so that the fasta sequence alignment is compatible with the original template alignment.

In general the alignment is very fast - we are able to align over 186,000 full-length sequences to the SILVA alignment
in less than 3 hrs with a quality as good as the SINA aligner. Furthermore, this rate can be accelerated using multiple
processors. While the aligner doesn't explicitly take into account the secondary structure of the 16S rRNA gene, if the
template database is based on the secondary structure, then the resulting alignment will at least be implicitly based
on the secondary structure.

.. _template_alignment: https://www.mothur.org/wiki/Alignment_database
.. _align.seqs: https://www.mothur.org/wiki/Align.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "history" ;
                                            dc:description "Your History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:help "" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Select a search method" ;
                                    gal:option [ gal:value "suffix" ;
                                            dc:description "suffix tree" ],
                                        [ gal:value "blast" ;
                                            dc:description "blast" ],
                                        [ gal:selected "true" ;
                                            gal:value "kmer" ;
                                            dc:description "kmer (default)" ] ;
                                    gal:type "select" ;
                                    dc:title "method" ] ;
                            gal:when [ gal:value "blast" ],
                                [ gal:value "suffix" ],
                                [ gal:param [ gal:argument "ksize" ;
                                            gal:label "ksize - kmer length between 5 and 12" ;
                                            gal:max "12" ;
                                            gal:min "5" ;
                                            gal:type "integer" ;
                                            gal:value "8" ] ;
                                    gal:value "kmer" ] ;
                            dc:title "search" ],
                        [ gal:param [ gal:label "Alignment scoring values" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "use defaults" ],
                                        [ gal:value "yes" ;
                                            dc:description "adjust values" ] ;
                                    gal:type "select" ;
                                    dc:title "adjust" ] ;
                            gal:when [ gal:param [ gal:argument "mismatch" ;
                                            gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "match" ;
                                            gal:label "match - Pairwise alignment reward for a match" ;
                                            gal:type "integer" ;
                                            gal:value "1" ],
                                        [ gal:argument "gapopen" ;
                                            gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-5" ],
                                        [ gal:argument "gapextend" ;
                                            gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-2" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "scoring" ],
                        [ gal:param [ gal:argument "flip" ;
                                    gal:help "" ;
                                    gal:label "flip - Try to align against the reverse complement" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes values" ],
                                        [ gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "threshold" ;
                                            gal:help "The default for the threshold parameter is 0.50, meaning at least 50% of the bases must remain or the sequence is reported as potentially reversed" ;
                                            gal:label "threshold - Cutoff (0. - 1.) at which an alignment is deemed 'bad' and the reverse complement may be tried." ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:type "float" ;
                                            gal:value "0.5" ] ;
                                    gal:value "yes" ] ;
                            dc:title "reverse" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "align" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default)" ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ],
                                [ gal:value "blast" ;
                                    dc:description "blast" ] ;
                            gal:type "select" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.align.report" ;
                            gal:from_work_dir "fasta.align.report" ;
                            gal:label "${tool.name} on ${on_string}: align.report" ;
                            dc:title "report" ],
                        [ gal:filter "reverse['flip'] == 'yes'" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.flip.accnos" ;
                            gal:label "${tool.name} on ${on_string}: flip.accnos" ;
                            dc:title "flip_accnos" ],
                        [ gal:format "mothur.align" ;
                            gal:from_work_dir "fasta.align" ;
                            gal:label "${tool.name} on ${on_string}: align" ;
                            dc:title "out_align" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Align sequences to a template alignment" ;
            dc:identifier "mothur_align_seqs" ;
            dc:title "Align.seqs",
                "align.seqs" ;
            schema:sku 107 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'normalize.shared(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
        makerelabund=$makerelabund
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $method:
        ,method=${ str($method).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The normalize.shared_ command normalizes the number of sequences per group to a specified level.  The input is a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _normalize.shared: https://www.mothur.org/wiki/Normalize.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "method - Normalization method" ;
                            gal:option [ gal:value "zscore" ;
                                    dc:description "Z Score" ],
                                [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "Total Group" ] ;
                            gal:type "select" ;
                            dc:title "method" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "makerelabund - convert a shared file to a relabund file before you normalize" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "makerelabund" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared" ] ;
                            gal:label "${tool.name} on ${on_string}: norm.shared files collection" ;
                            gal:type "list" ;
                            dc:title "sharedfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Normalize the number of sequences per group to a specified level" ;
            dc:identifier "mothur_normalize_shared" ;
            dc:title "Normalize.shared",
                "normalize.shared" ;
            schema:sku 33 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'cluster.classic(
    phylip=dist.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    method=$method,
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    precision=$precision,
    sim=$sim
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The cluster.classic_ command assign sequences to OTUs (Operational Taxonomy Unit).

.. _cluster.classic: https://www.mothur.org/wiki/Cluster.classic

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "precision" ;
                            gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:option [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ],
                                [ gal:value "10" ;
                                    dc:description ".1" ],
                                [ gal:value "100000" ;
                                    dc:description ".00001" ] ;
                            gal:optional "true" ;
                            gal:type "select" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this. Default for methods opti,agc,dgc is 0.03, default for the other methods is 0.15" ;
                            gal:label "cutoff - Distance Cutoff threshold" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ],
                        [ gal:argument "dist" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:help "format must be mothur.lower.dist or mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "method" ;
                            gal:help "" ;
                            gal:label "method - Select a Clustering Method" ;
                            gal:option [ gal:value "weighted" ;
                                    dc:description "Weighted" ],
                                [ gal:value "nearest" ;
                                    dc:description "Nearest neighbor" ],
                                [ gal:value "furthest" ;
                                    dc:description "Furthest neighbor" ],
                                [ gal:selected "true" ;
                                    gal:value "average" ;
                                    dc:description "Average neighbor" ] ;
                            gal:type "select" ],
                        [ gal:argument "sim" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "dist*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            dc:title "rabund" ],
                        [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "dist*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            dc:title "sabund" ],
                        [ gal:format "mothur.list" ;
                            gal:from_work_dir "dist*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            dc:title "otulist" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to OTUs (Dotur implementation)" ;
            dc:identifier "mothur_cluster_classic" ;
            dc:title "Cluster.classic",
                "cluster.classic" ;
            schema:sku 105 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'collect.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    calc=${ str($calc).replace(",","-") },
    abund=$abund,
    freq=$freq
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& rm otu.dat  ## don't want this collected into datacollection
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The collect.single_ command generates collector's curves using calculators_, that describe the richness, diversity, and other features of individual samples. Collector's curves describe how richness or diversity change as you sample additional individuals. If a collector's curve becomes parallel to the x-axis, you can be reasonably confident that you have done a good job of sampling and can trust the last value in the curve. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _calculators: https://www.mothur.org/wiki/Calculators
.. _collect.single: https://www.mothur.org/wiki/Collect.single

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs (default 10)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "abund" ],
                        [ gal:help "Use a decimal between 0 and 1 to set the frequency as a percentage of the number of sequences" ;
                            gal:label "freq - frequency for output (default is every 100 sequences)" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "100" ;
                            dc:title "freq" ],
                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "goodscoverage" ;
                                    dc:description "goodscoverage - Community diversity the Good's estimate of sampling coverage " ],
                                [ gal:selected "true" ;
                                    gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ],
                                [ gal:selected "true" ;
                                    gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "efron" ;
                                    dc:description "efron - Estimator Efron's estimator" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:selected "true" ;
                                    gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "geometric" ;
                                    dc:description "geometric - Statistical distribution tests whether observed data follow the geometric series distribution" ],
                                [ gal:value "shen" ;
                                    dc:description "shen - Estimator Shen's estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ],
                                [ gal:value "logseries" ;
                                    dc:description "logseries - Statistical distribution tests whether observed data follow the log series distribution" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "bergerparker" ;
                                    dc:description "bergerparker - Community diversity the Berger-Parker index" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:value "qstat" ;
                                    dc:description "qstat - Community diversity the Q statistic" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:value "boneh" ;
                                    dc:description "boneh - Estimator Boneh's estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "bstick" ;
                                    dc:description "bstick - Statistical distribution tests whether observed data follow the broken stick distribution" ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:value "solow" ;
                                    dc:description "solow - Estimator Solow's estimator" ] ;
                            gal:type "select" ;
                            dc:title "calc" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "otu\\.(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: calculators" ;
                            gal:type "list" ;
                            dc:title "calcfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate collector's curves for OTUs" ;
            dc:identifier "mothur_collect_single" ;
            dc:title "Collect.single",
                "collect.single" ;
            schema:sku 120 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$qfile' qfile.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'summary.qual(
    qfile=qfile.dat
    #if $name:
        ,name=name.dat
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The summary.qual_ command reads a quality file and an optional name, and summarizes the quality information.

.. _summary.qual: https://www.mothur.org/wiki/Summary.qual

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Names" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Sequence Quality file" ;
                            gal:type "data" ;
                            dc:title "qfile" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.summary" ;
                            gal:from_work_dir "qfile*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "out_summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Summarize the quality scores" ;
            dc:identifier "mothur_summary_qual" ;
            dc:title "Summary.qual",
                "summary.qual" ;
            schema:sku 39 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'parse.list(
    list=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    group=group.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The parse.list_ command reads a list_ file and group_ file and generates a list_ file for each group_ in the groupfile.

.. _list: https://www.mothur.org/wiki/List_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _parse.list: https://www.mothur.org/wiki/Parse.list

v.1.19.0: Updated to mothur 1.33, added count parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:type "data" ;
                            dc:title "group" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - To filter: Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.list" ] ;
                            gal:label "${tool.name} on ${on_string}: listfiles per group and label" ;
                            gal:type "list" ;
                            dc:title "listfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a List file for each group" ;
            dc:identifier "mothur_parse_list" ;
            dc:title "Parse.list",
                "parse.list" ;
            schema:sku 103 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$names' names.dat &&
ln -s '$fasta' fasta.dat &&

echo 'unique.seqs(
    #if $names.is_of_type('mothur.names'):
        name=names.dat,
    #elif $names.is_of_type('mothur.count_table'):
        count=names.dat,
    #end if
    fasta=fasta.dat,
    format=$format
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The unique.seqs_ command returns only the unique sequences found in a fasta-formatted sequence file and a name_ file that indicates those sequences that are identical to the reference sequence.

.. _name: https://www.mothur.org/wiki/Name_file
.. _unique.seqs: https://www.mothur.org/wiki/Unique.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "output format" ;
                            gal:option [ gal:value "name" ;
                                    dc:description " Name file " ],
                                [ gal:selected "true" ;
                                    gal:value "count" ;
                                    dc:description " Count table " ] ;
                            gal:type "select" ;
                            dc:title "format" ],
                        [ gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name file or count table - Sequences Names" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "names" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:type "data" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter " format == \"count\" " ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "fasta*.count_table" ;
                            gal:label "${tool.name} on ${on_string}: count_table" ;
                            dc:title "out_count" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.unique.*" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "out_fasta" ],
                        [ gal:filter " format == \"name\" " ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.names" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            dc:title "out_names" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Return unique sequences" ;
            dc:identifier "mothur_unique_seqs" ;
            dc:title "Unique.seqs",
                "unique.seqs" ;
            schema:sku 38 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$name' name.dat &&
#if $grouping.use == "yes":
    ln -s '$grouping.group' grouping.group.dat &&
#end if

echo 'count.seqs(
    #if $grouping.use == "yes":
        group=grouping.group.dat,
        #if $grouping.groups:
            groups=${ str($grouping.groups).replace(",","-") },
        #end if
    #end if
    name=name.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The count.seqs_ command counts the number of sequences represented by the representative sequence in a name_ file and generates a count_table_. If a group_ file is given, it will also provide the group count breakdown.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _count.seqs: https://www.mothur.org/wiki/Count.seqs
.. _count_table: https://www.mothur.org/wiki/Count_File

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Use a Group file to include counts for groups" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:param [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Groups to display" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - Group file for the tree" ;
                                            gal:type "data" ;
                                            dc:title "group" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "grouping" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:type "data" ;
                            dc:title "name" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.count_table" ;
                            gal:from_work_dir "name*.count_table" ;
                            gal:label "${tool.name} on ${on_string}: count_table" ;
                            dc:title "seq_count" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "(aka make.table) counts the number of sequences represented by the representative" ;
            dc:identifier "mothur_count_seqs" ;
            dc:title "Count.seqs",
                "count.seqs" ;
            schema:sku 30 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'unifrac.unweighted(
    tree=tree.dat,
    #if $group:
        group=group.dat,
        #if $groups:
            groups=${ str($groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        consensus=$subsampling.consensus,
    #else
        random=$random,
    #end if
    #if $distance:
        distance=$distance,
    #end if
    #if $count:
        count=count.dat,
    #end if
    root=$root,
    processors='\\${GALAXY_SLOTS:-1}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The unifrac.unweighted_ command the unweighted UniFrac algorithm. The unifrac.weighted command implements the weighted version of the command. Both of these methods are available through the UniFrac website. The UniFrac methods are generic tests that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _unifrac.unweighted: https://www.mothur.org/wiki/Unifrac.unweighted

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "(instead of randomly generated comparisons)" ;
                                    gal:label "use subsampling of groups?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "The consensus parameter allows you to indicate you would like trees built from distance matrices created with the results of the subsampling, as well as a consensus tree built from these trees. Default=F" ;
                                            gal:label "consensus -" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "consensus" ],
                                        [ gal:help "the size per group of the sample" ;
                                            gal:label "subsample - (defaults to the size of the smallest group)" ;
                                            gal:min "1" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsample" ] ;
                                    gal:value "yes" ] ;
                            dc:title "subsampling" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:label "distance - Create a distance matrix for your history" ;
                            gal:option [ gal:value "square" ;
                                    dc:description "Phylip Square Matrix" ],
                                [ gal:value "column" ;
                                    dc:description "Pairwise Distance Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip Lower Triangle Matrix" ] ;
                            gal:type "select" ;
                            dc:title "distance" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Tree" ;
                            gal:type "data" ;
                            dc:title "tree" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:label "groups - Select groups for pairwise comparisons" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "root - the entire root in your calculations" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "root" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "unused if subsample=True" ;
                            gal:label "random - Compare your trees with randomly generated trees" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "random" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "(random and subsampling['use'] == 'no')" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.unweighted" ;
                            gal:label "${tool.name} on ${on_string}: unweighted" ;
                            dc:title "unweighted" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ] ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree*.std.dist" ;
                            gal:label "${tool.name} on ${on_string}: std.dist" ;
                            dc:title "std_dist" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree*.ave.dist" ;
                            gal:label "${tool.name} on ${on_string}: ave.dist" ;
                            dc:title "ave_dist" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ] ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.dat*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            dc:title "dist" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.uwsummary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.all.tre" ;
                            gal:label "${tool.name} on ${on_string}: all.tre" ;
                            dc:title "all_tree" ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.cons.tre" ;
                            gal:label "${tool.name} on ${on_string}: cons.tre" ;
                            dc:title "cons_tree" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Describes whether two or more communities have the same structure" ;
            dc:identifier "mothur_unifrac_unweighted" ;
            dc:title "unifrac.unweighted" ;
            schema:sku 88 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#for $i in $merge.inputs:
    ln -s '$i' input${merge.inputs.index($i)}.dat &&
#end for

echo 'merge.files(
    input=#for $i in $merge.inputs#input${merge.inputs.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """



**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The merge.files_ command merge inputs into a single output.

.. _merge.files: https://www.mothur.org/wiki/Merge.files


    """ ;
            gal:inputs [ gal: " merge " ;
                    gal:checked "false" ;
                    gal:conditional [ gal: " fasta ",
                                " groups ",
                                " names ",
                                " qual " ;
                            gal:param [ gal:format "fasta,qual,mothur.groups,mothur.names,mothur.accnos" ;
                                    gal:label "Merge" ;
                                    gal:option [ gal:value "qual" ;
                                            dc:description "qual files" ],
                                        [ gal:value "groups" ;
                                            dc:description "group files" ],
                                        [ gal:value "accnos" ;
                                            dc:description "accnos files" ],
                                        [ gal:value "fasta" ;
                                            dc:description "fasta files" ],
                                        [ gal:value "names" ;
                                            dc:description "name files" ] ;
                                    gal:type "select" ;
                                    dc:title "type" ] ;
                            gal:when [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "inputs - groups" ;
                                            gal:multiple "true" ;
                                            gal:type "data" ;
                                            dc:title "inputs" ] ;
                                    gal:value "groups" ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "inputs - names" ;
                                            gal:multiple "true" ;
                                            gal:type "data" ;
                                            dc:title "inputs" ] ;
                                    gal:value "names" ],
                                [ gal:param [ gal:format "fasta" ;
                                            gal:label "inputs - fasta" ;
                                            gal:multiple "true" ;
                                            gal:type "data" ;
                                            dc:title "inputs" ] ;
                                    gal:value "fasta" ],
                                [ gal:param [ gal:format "qual" ;
                                            gal:label "inputs - qual" ;
                                            gal:multiple "true" ;
                                            gal:type "data" ;
                                            dc:title "inputs" ] ;
                                    gal:value "qual" ],
                                [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "inputs - accnos" ;
                                            gal:multiple "true" ;
                                            gal:type "data" ;
                                            dc:title "inputs" ] ;
                                    gal:value "accnos" ] ;
                            dc:title "merge" ] ;
                    gal:label "Output logfile?" ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "inputs" ;
                            gal:label "${tool.name} on ${on_string}: ${merge.type}" ;
                            dc:title "output" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Merge data" ;
            dc:identifier "mothur_merge_files" ;
            dc:title "Merge.files",
                "merge.files" ;
            schema:sku 65 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$search.input' search.input.dat &&

echo 'list.seqs(
    #if $search.intype == "fasta":
        fasta=search.input.dat
    #elif $search.intype == "fastq":
        fastq=search.input.dat
    #elif $search.intype == "name":
        name=search.input.dat
    #else if $search.intype == "group":
        group=search.input.dat
    #elif $search.intype == "alignreport":
        alignreport=search.input.dat
    #elif $search.intype == "list":
        list=search.input.dat
    #elif $search.intype == "taxonomy":
        taxonomy=search.input.dat
    #elif $search.intype == "count":
        count=search.input.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The list.seqs_ command writes out the names of the sequences found within a fasta, name_, group_, list_, align.report_ or taxonomy_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs

v.1.20.0: Updated to mothur 1.33, added count and fastq option

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Type to list" ;
                                    gal:option [ gal:value "taxonomy" ;
                                            dc:description "Sequence Taxonomy" ],
                                        [ gal:value "fastq" ;
                                            dc:description "Sequence Fastq" ],
                                        [ gal:value "group" ;
                                            dc:description "Groups" ],
                                        [ gal:value "fasta" ;
                                            dc:description "Sequence Fasta" ],
                                        [ gal:value "alignreport" ;
                                            dc:description "Align Report" ],
                                        [ gal:value "name" ;
                                            dc:description "Sequences Name reference" ],
                                        [ gal:value "count" ;
                                            dc:description "Count Table" ],
                                        [ gal:value "list" ;
                                            dc:description "OTU List" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "name" ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Groups" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "group" ],
                                [ gal:param [ gal:format "fasta" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "fasta" ],
                                [ gal:param [ gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "alignreport" ],
                                [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Sequence Taxonomy" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "taxonomy" ],
                                [ gal:param [ gal:format "fastq" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "fastq" ],
                                [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:label "count - Count Table" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "count" ],
                                [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "input" ] ;
                                    gal:value "list" ] ;
                            dc:title "search" ] ;
                    gal:label "Output logfile?" ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "search.input*.accnos" ;
                            gal:label "${tool.name} on ${on_string}: accnos" ;
                            dc:title "accnos" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Lists the names (accnos) of the sequences" ;
            dc:identifier "mothur_list_seqs" ;
            dc:title "List.seqs",
                "list.seqs" ;
            schema:sku 45 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

#import re
## create symlinks to input datasets
ln -s '$file.taxonomy' file.taxonomy.dat &&
#if $file.filetype == "useconstaxonomy":
    ln -s '$file.shared' file.shared.dat &&
    ln -s '$file.list' file.list.dat &&
#end if
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&

echo 'get.lineage(
    #if $file.filetype == "usetaxonomy":
        taxonomy=file.taxonomy.dat
    #else
        constaxonomy=file.taxonomy.dat
        #if $file.shared:
            ,shared=file.shared.dat
        #end if
        #if $file.list:
            ,list=file.list.dat
        #end if
    #end if
    #if $file.taxons:
        #set taxonstring=str($file.taxons).replace(",","-")
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxonstring ))'"'
    #elif $taxon:
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxon.value )).replace(",","-")'"'
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $group_in:
        ,group=group_in.dat
    #end if
    #if $alignreport_in:
        ,alignreport=alignreport_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
        ,dups=$dups
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.lineage_ command reads a taxonomy_ file and a taxon and generates a new file that contains only the sequences in the that are from that taxon. You may also include either a fasta, name_, group_, list_, or align.report_ file to this command and mothur will generate new files for each of those containing only the selected sequences.

.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _get.lineage: https://www.mothur.org/wiki/Get.lineage

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "choose which file is used" ;
                                    gal:option [ gal:value "useconstaxonomy" ;
                                            dc:description "constaxonomy" ],
                                        [ gal:selected "true" ;
                                            gal:value "usetaxonomy" ;
                                            dc:description "taxonomy" ] ;
                                    gal:type "select" ;
                                    dc:title "filetype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "1" ;
                                                            dc:title "value" ],
                                                        [ gal:index "1" ;
                                                            dc:title "name" ] ;
                                                    gal:filter [ gal:column "1" ;
                                                            gal:type "unique_value" ;
                                                            dc:title "unique_taxon" ],
                                                        [ gal:column "1" ;
                                                            gal:type "sort_by" ;
                                                            dc:title "sorted_taxon" ] ;
                                                    gal:from_dataset "taxonomy" ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "\"" ],
                                                                [ gal:value "'" ] ] ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:title "taxons" ] ;
                                    gal:value "usetaxonomy" ],
                                [ gal:param [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "2" ;
                                                            dc:title "value" ],
                                                        [ gal:index "2" ;
                                                            dc:title "name" ] ;
                                                    gal:filter [ gal:column "2" ;
                                                            gal:type "sort_by" ;
                                                            dc:title "sorted_taxon" ],
                                                        [ gal:column "2" ;
                                                            gal:type "unique_value" ;
                                                            dc:title "unique_taxon" ] ;
                                                    gal:from_dataset "taxonomy" ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "'" ],
                                                                [ gal:value "\"" ] ] ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:title "taxons" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - list file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "list" ],
                                        [ gal:format "mothur.cons.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "constaxonomy - Constaxonomy file. Provide either a constaxonomy file or a taxonomy file" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - shared file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "shared" ] ;
                                    gal:value "useconstaxonomy" ] ;
                            dc:title "file" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "list_in" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. It can also contain group information" ;
                            gal:label "Count Table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:area "True" ;
                            gal:help "If no taxons selected from file, Enter 1 or more taxons separated by dashes here, e.g. Bacteria;Firmicutes;-Bacteria;Actinobacteria;" ;
                            gal:label "taxon - Manually select Taxons for filtering" ;
                            gal:size "5x120" ;
                            gal:type "text" ;
                            dc:title "taxon" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "alignreport_in" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicate names" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "dups" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in*?\\.(?P<designation>.*)\\.pick.*" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:type "list" ;
                            dc:title "list_out" ] ;
                    gal:data [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            dc:title "alignreport_out" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.group" ;
                            dc:title "group_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            dc:title "name_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "file.taxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Picks by taxon" ;
            dc:identifier "mothur_get_lineage" ;
            dc:title "Get.lineage",
                "get.lineage" ;
            schema:sku 62 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.count(
    count=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.count_ command merges count files into a single count table.

.. _merge.count: https://www.mothur.org/wiki/Merge.count

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:label "input - count tables to merge" ;
                            gal:multiple "true" ;
                            gal:type "data" ;
                            dc:title "input" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.count_table" ;
                            gal:label "${tool.name} on ${on_string}: merged count table" ;
                            dc:title "output" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Merge count tables" ;
            dc:identifier "mothur_merge_count" ;
            dc:title "Merge.count",
                "merge.count" ;
            schema:sku 117 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## Symlinks creation or On the fly creation of a combo file
#if $input_type.type == 'list_collection'
    #for $pair in $input_type.list_paired_collection:
        ln -s ${pair.forward} `basename ${pair.forward}` &&
        ln -s ${pair.reverse} `basename ${pair.reverse}` &&
        echo -e "${pair.name}\\t`basename ${pair.forward}`\\t`basename ${pair.reverse}`" >> combo_fastq.dat &&
    #end for
#elif $input_type.type == 'simple_collection'
    ln -s '$input_type.paired_collection.forward' ffastq.dat &&
    ln -s '$input_type.paired_collection.reverse' rfastq.dat &&
#else
    ln -s '$input_type.forward_fastq' ffastq.dat &&
    ln -s '$input_type.reverse_fastq' rfastq.dat &&
#end if

#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
    ln -s '$oligo.findex' oligo.findex.dat &&
    ln -s '$oligo.rindex' oligo.rindex.dat &&
#end if

echo 'make.contigs(
    #if $input_type.type == 'list_collection':
        file=combo_fastq.dat,
    #else:
        ffastq=ffastq.dat,
        rfastq=rfastq.dat,
    #end if
    align=$align,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        #if $oligo.findex:
            findex=oligo.findex.dat,
        #end if
        #if $oligo.rindex:
            rindex=oligo.rindex.dat,
        #end if
    #end if
    match=$match,
    mismatch=$mismatch,
    gapopen=$gapopen,
    gapextend=$gapextend,
    rename=$rename
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.contigs_ command reads a forward fastq file and a reverse fastq file and outputs new fasta and quality files.

.. _make.contigs: https://www.mothur.org/wiki/Make.contigs

v.1.27.0: Updated to use Mothur 1.33. Added findex and rindex parmaeters, optionally used with the oligos file.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select a way to provide forward and reverse fastq files ?" ;
                                    gal:option [ gal:value "list_collection" ;
                                            dc:description "Multiple pairs - Combo mode (list:paired collection)" ],
                                        [ gal:value "simple_collection" ;
                                            dc:description "One pair (paired collection)" ],
                                        [ gal:selected "true" ;
                                            gal:value "regular" ;
                                            dc:description "Two simple fastq files (forward and reverse)" ] ;
                                    gal:type "select" ;
                                    dc:title "type" ] ;
                            gal:when [ gal:param [ gal:collection_type "paired" ;
                                            gal:format "fastq" ;
                                            gal:help "Dataset collection made from a single pair of fastq files (forward + reverse)" ;
                                            gal:label "Fastq pair (collection)" ;
                                            gal:type "data_collection" ;
                                            dc:title "paired_collection" ] ;
                                    gal:value "simple_collection" ],
                                [ gal:param [ gal:collection_type "list:paired" ;
                                            gal:format "fastq" ;
                                            gal:help "Dataset collection made from multiple pairs of fastq files" ;
                                            gal:label "Fastq pairs (collection)" ;
                                            gal:type "data_collection" ;
                                            dc:title "list_paired_collection" ] ;
                                    gal:value "list_collection" ],
                                [ gal:param [ gal:format "fastq" ;
                                            gal:label "Forward reads" ;
                                            gal:type "data" ;
                                            dc:title "forward_fastq" ],
                                        [ gal:format "fastq" ;
                                            gal:label "Reverse reads" ;
                                            gal:type "data" ;
                                            dc:title "reverse_fastq" ] ;
                                    gal:value "regular" ] ;
                            dc:title "input_type" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "add" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "fastq" ;
                                            gal:label "revese index file (fastq)" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "rindex" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "tdiffs" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "pdiffs" ],
                                        [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "bdiffs" ],
                                        [ gal:format "fastq" ;
                                            gal:label "forward index file (fastq)" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "findex" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\" and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "oligos" ] ;
                                    gal:value "yes" ] ;
                            dc:title "oligo" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                            gal:type "integer" ;
                            gal:value "-1" ;
                            dc:title "gapextend" ],
                        [ gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                            gal:type "integer" ;
                            gal:value "-1" ;
                            dc:title "mismatch" ],
                        [ gal:help "" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:option [ gal:value "kmer" ;
                                    dc:description "kmer" ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ],
                                [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default) " ] ;
                            gal:type "select" ;
                            dc:title "align" ],
                        [ gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                            gal:type "integer" ;
                            gal:value "-2" ;
                            dc:title "gapopen" ],
                        [ gal:label "match - Pairwise alignment reward for a match" ;
                            gal:type "integer" ;
                            gal:value "1" ;
                            dc:title "match" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:help "reduce file sizes and greatly reduce the size of the column formatted distance matrix downstream.             Uses the rename.seqs command to rename which creates a map file so you can revert to original names at any time" ;
                            gal:label "Renames sequences" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ;
                            dc:title "rename" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "fasta" ;
                            gal:from_work_dir "*fastq*.scrap.*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: scrap.contigs.fasta" ;
                            dc:title "scrapfasta" ],
                        [ gal:format "qual" ;
                            gal:from_work_dir "*fastq*.scrap.*.qual" ;
                            gal:label "${tool.name} on ${on_string}: scrap.contigs.qual" ;
                            dc:title "scrapqual" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "*fastq*.contigs.report" ;
                            gal:label "${tool.name} on ${on_string}: report" ;
                            dc:title "report" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "*fastq.trim.*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: trim.contigs.fasta" ;
                            dc:title "fasta" ],
                        [ gal:format "qual" ;
                            gal:from_work_dir "*fastq*.trim.*.qual" ;
                            gal:label "${tool.name} on ${on_string}: trim.contigs.qual" ;
                            dc:title "qual" ],
                        [ gal:filter "input_type['type'] == 'list_collection'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "*fastq*.groups" ;
                            gal:label "${tool.name} on ${on_string}: group file" ;
                            dc:title "group" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Aligns paired forward and reverse fastq files to contigs as fasta and quality" ;
            dc:identifier "mothur_make_contigs" ;
            dc:title "Make.contigs",
                "make.contigs" ;
            schema:sku 1 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'list.otulabels(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #else
        list=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The list.otulabels_ command lists otu labels from shared_ or relabund_ file. This list can be used especially with subsampled datasets when used with output from classify.otu_, otu.association_, or corr.axes_ to select specific otus using the get.otus_ or remove.otus_ commands

.. _list.otulabels: https://www.mothur.org/wiki/List.otulabels
.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _otu.association: https://www.mothur.org/wiki/Otu.association
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _get.otus: https://www.mothur.org/wiki/Get.otus
.. _remove.otus: https://www.mothur.org/wiki/Remove.otus
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund

v.1.27.0: Updated to mothur 1.33, added list file for otu

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.shared,mothur.relabund,mothur.list" ;
                            gal:label "list or shared or relabund - OTU List or Shared or Relabund" ;
                            gal:type "data" ;
                            dc:title "otu" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.otulabels" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otulabels" ] ;
                            gal:label "${tool.name} on ${on_string}: otulabels" ;
                            gal:type "list" ;
                            dc:title "otulabels" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Lists otu labels from shared or relabund file" ;
            dc:identifier "mothur_list_otulabels" ;
            dc:title "List.otulabels",
                "list.otulabels" ;
            schema:sku 126 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$shared' shared.dat &&

echo 'get.group(
    shared=shared.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant output from logfile to file
cat mothur.*.logfile
| head -n-6
| sed '1,30d'
> "$bootgroups"
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.group_ command generate principle components plot data.

.. _get.group: https://www.mothur.org/wiki/Get.group

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: bootGroups" ;
                            dc:title "bootgroups" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "group names from shared or from list and group" ;
            dc:identifier "mothur_get_group" ;
            dc:title "Get.group",
                "get.group" ;
            schema:sku 125 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
#if $grouping.use == "yes":
    ln -s '$grouping.group' grouping.group.dat &&
#end if

echo 'phylo.diversity(
    tree=tree.dat,
    #if $grouping.use == "yes":
        group=grouping.group.dat,
        #if $grouping.groups:
            groups=${ str($grouping.groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    freq=$freq,
    scale=$scale,
    collect=$collect,
    rarefy=$rarefy,
    summary=$summary,
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The phylo.diversity_ command calculates alpha diversity as the total of the unique branch length.

.. _phylo.diversity: https://www.mothur.org/wiki/Phylo.diversity

v.1.21.0: Updated to Mothur 1.33, added count parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Analyze by group using a Group file" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Group file for the tree" ;
                                            gal:type "data" ;
                                            dc:title "group" ],
                                        [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Groups to display" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ] ;
                                    gal:value "yes" ] ;
                            dc:title "grouping" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "rarefy - Calculate the rarefaction data" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "rarefy" ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "collect - Create a collectors curve" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "collect" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "scale - Scale output to the number of sequences sampled" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "scale" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:help "if between 0 and 100, the percentage of sequences to sample, if greater than one - report every n iterations" ;
                            gal:label "freq - Reporting frequency" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "100" ;
                            dc:title "freq" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Phylogenetic Tree" ;
                            gal:type "data" ;
                            dc:title "tree" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "summary - Generate a summary file" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "summary" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "collect" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv" ;
                            gal:label "${tool.name} on ${on_string}: collectors" ;
                            dc:title "collectors_out" ],
                        [ gal:filter "rarefy" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: rarefaction" ;
                            dc:title "rarefaction_out" ],
                        [ gal:filter "summary" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Alpha Diversity calculates unique branch length" ;
            dc:identifier "mothur_phylo_diversity" ;
            dc:title "Phylo.diversity",
                "phylo.diversity" ;
            schema:sku 96 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.otulist(
    list=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    sort=$sort
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The get.otulist_ command parses a list file and creates an .otu file for each distance containing 2 columns. The first column is the OTU number the second column is a list of sequences in that OTU.

.. _get.otulist: https://www.mothur.org/wiki/Get.otulist

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "By default, uses all if none are selected." ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:help "If otu is selected the output will be otu number followed by the list of names in that otu.             If name is selected the output will be a sequence name followed by its otu number" ;
                            gal:label "sort - select the output format" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "otu" ;
                                    dc:description "otu" ],
                                [ gal:value "name" ;
                                    dc:description "name" ] ;
                            gal:type "select" ;
                            dc:title "sort" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otu" ] ;
                            gal:label "${tool.name} on ${on_string}: OTUs per label" ;
                            gal:type "list" ;
                            dc:title "otufiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get otus for each distance in a otu list" ;
            dc:identifier "mothur_get_otulist" ;
            dc:title "Get.otulist",
                "get.otulist" ;
            schema:sku 116 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&
#if $svg_cond.svg == "yes":
    ln -s '$svg_cond.name' svg.name.dat &&
#end if

echo 'chimera.check(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    #if $svg_cond.svg == "yes":
        svg=yes,
        name=svg.name.dat,
    #end if
    increment=$increment,
    ksize=$ksize,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.check_ command identifies putative chimeras using the chimeraCheck approach. It looks at distance of left side of query to it's closest match + distance of right side of query to it's closest match - distance of whole query and its closest match over several windows.

Note: following the RDP model this method does not determine whether or not a sequence is chimeric, but allows you to determine that based on the IS values produced.

.. _chimera.check: https://www.mothur.org/wiki/Chimera.check

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:argument "svg" ;
                                    gal:label "svg - Generate a SVG plot for each query sequence" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Names of queries for which to generate SVG plot" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ] ;
                            dc:title "svg_cond" ],
                        [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ] ;
                            dc:title "alignment" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "increment" ;
                            gal:help "Default is 10, but you may set it up to sequence length minus twice the window." ;
                            gal:label "increment - Increment for window slide on each iteration" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "ksize" ;
                            gal:help "uses default if < 1" ;
                            gal:label "ksize - kmer length to determine differences between sequence fragments" ;
                            gal:type "integer" ;
                            gal:value "7" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern "(?P<designation>.*)\\.chimeracheck\\.svg" ] ;
                            gal:filter "svg['gen'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: SVG images" ;
                            gal:type "list" ;
                            dc:title "images" ] ;
                    gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.chimeracheck.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: chimeracheck.chimeras" ;
                            dc:title "chimeracheck.chimeras" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using chimeraCheck" ;
            dc:identifier "mothur_chimera_check" ;
            dc:title "Chimera.check",
                "chimera.check" ;
            schema:sku 80 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$infile.otu' infile_otu.dat &&
#if $infile.intype == "in_listgroup":
    ln -s '$infile.group' infile.group.dat &&
    ln -s '$infile.fasta' infile_fasta.dat &&
    ln -s '$count_in' count_in.dat &&
#end if

echo 'get.sharedseqs(
    #if $infile.intype == "in_listgroup":
        list=infile_otu.dat

        #if $group:
            ,group=infile.group.dat
        #elif $count_in:
            ,count=count_in.dat
        #end if

        #if $infile.fasta:
            ,fasta=infile_fasta.dat
        #end if
    #else
        shared=infile_otu.dat
    #end if
    #if $infile.label:
        ,label=${ str($infile.label).replace(",","-") }
    #end if
    #if $infile.seqsfrom.selection == "unique" and $infile.seqsfrom.groups:
        ,uniquegroups=${ str($infile.seqsfrom.groups).replace(",","-") }
    #end if
    #if $infile.seqsfrom.selection == "shared" and $infile.seqsfrom.groups:
        ,sharedgroups=${ str($infile.seqsfrom.groups).replace(",","-") }
    #end if
    #if $output:
        ,output=$output
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.sharedseqs_ command takes a list and group file and outputs a .shared.seqs file for each distance. This is useful for those cases where you might be interested in identifying sequences that are either unique or shared by specific groups, which you could then classify.

.. _get.sharedseqs: https://www.mothur.org/wiki/Get.sharedseqs

v1.21.0: Updated to Mothur 1.33, added shared file option

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Will you be supplying a shared file or a list and group file?" ;
                                    gal:option [ gal:value "in_shared" ;
                                            dc:description "Shared file" ],
                                        [ gal:value "in_listgroup" ;
                                            dc:description "OTU list and group file" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:conditional [ gal:param [ gal:help "" ;
                                                    gal:label "Select Groups" ;
                                                    gal:option [ gal:value "shared" ;
                                                            dc:description "OTUs that contain sequences from the selected groups" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "all" ;
                                                            dc:description "None (use all groups)" ],
                                                        [ gal:value "unique" ;
                                                            dc:description "OTUs that contain ONLY sequences from the selected groups" ] ;
                                                    gal:type "select" ;
                                                    dc:title "selection" ] ;
                                            gal:when [ gal:param [ gal:label "shared - Groups to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ] ;
                                                    gal:value "shared" ],
                                                [ gal:value "all" ],
                                                [ gal:param [ gal:label "unique - Group to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ] ;
                                                    gal:value "unique" ] ;
                                            dc:title "seqsfrom" ] ;
                                    gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List or shared file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - not required if using a shared file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "group" ],
                                        [ gal:format "mothur.count_table" ;
                                            gal:help "generated by count.seqs" ;
                                            gal:label "count - a count_table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "count_in" ],
                                        [ gal:format "fasta" ;
                                            gal:help "will output a fasta file for each distance level containing only the sequences that are in OTUs shared by the groups specified" ;
                                            gal:label "fasta - Dataset" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "fasta" ],
                                        [ gal:help "By default all are included if no selection is made" ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "in_listgroup" ],
                                [ gal:conditional [ gal:param [ gal:help "" ;
                                                    gal:label "Select Groups" ;
                                                    gal:option [ gal:value "unique" ;
                                                            dc:description "OTUs that contain ONLY sequences from the selected groups" ],
                                                        [ gal:value "shared" ;
                                                            dc:description "OTUs that contain sequences from the selected groups" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "all" ;
                                                            dc:description "None (use all groups)" ] ;
                                                    gal:type "select" ;
                                                    dc:title "selection" ] ;
                                            gal:when [ gal:param [ gal:label "shared - Groups to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "otu" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ] ;
                                                    gal:value "shared" ],
                                                [ gal:param [ gal:label "unique - Group to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "otu" ;
                                                                            gal:type "data_meta" ] ] ;
                                                            gal:type "select" ;
                                                            dc:title "groups" ] ;
                                                    gal:value "unique" ],
                                                [ gal:value "all" ] ;
                                            dc:title "seqsfrom" ] ;
                                    gal:param [ gal:help "By default all are included if no selection is made." ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "list - OTU List or shared file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_shared" ] ;
                            dc:title "infile" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "accnos can be used with get.seqs, list.seqs and remove.seqs" ;
                            gal:label "output - select the output format" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "default: (name group bin_number)" ],
                                [ gal:value "accnos" ;
                                    dc:description "accnos (name)" ] ;
                            gal:type "select" ;
                            dc:title "output" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.accnos" ] ;
                            gal:filter "output == 'accnos'" ;
                            gal:label "${tool.name} on ${on_string}: shared.accnos" ;
                            gal:type "list" ;
                            dc:title "sharedaccnos" ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.seqs" ] ;
                            gal:filter "output != 'accnos'" ;
                            gal:label "${tool.name} on ${on_string}: shared.seqs" ;
                            gal:type "list" ;
                            dc:title "sharedseqs" ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.fasta" ] ;
                            gal:filter "infile['fasta']" ;
                            gal:label "${tool.name} on ${on_string}: shared.fastas" ;
                            gal:type "list" ;
                            dc:title "sharedfastas" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get shared sequences at each distance from list and group" ;
            dc:identifier "mothur_get_sharedseqs" ;
            dc:title "Get.sharedseqs",
                "get.sharedseqs" ;
            schema:sku 43 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$flow' flow.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'trim.flows(
    flow=flow.dat,
    minflows=$minflows,
    maxflows=$maxflows,
    #if $maxhomop:
        maxhomop=$maxhomop,
    #end if
    order=$order,
    signal=$signal,
    noise=$noise,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        ldiffs=$oligo.ldiffs,
        sdiffs=$oligo.sdiffs,
    #end if
    fasta=$fasta,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## prevent these two files from being gathered into collection
&& mv flow.trim.flow flow.trim
&& mv flow.scrap.flow flow.scrap
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The trim.flows_ command is analogous to the trim.seqs command, except that it uses the flowgram data that comes bundled in the sff file that is generated by 454 sequencing. It's primary usage is as a preliminary step to running shhh.seqs. Chris Quince has a series of perl scripts that fulfill a similar role [1]. This command will allow you to partition your flowgram data by sample based on the barcode, trim the flows to a specified length range, and cull sequences that are too short or have too many mismatches to barcodes and primers.

.. _trim.flows: https://www.mothur.org/wiki/Trim.flows

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "add" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:type "data" ;
                                            dc:title "oligos" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "pdiffs" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "ldiffs" ],
                                        [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "bdiffs" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "tdiffs" ],
                                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "sdiffs" ] ;
                                    gal:value "yes" ] ;
                            dc:title "oligo" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:option [ gal:value "I" ;
                                    dc:description " I " ],
                                [ gal:value "B" ;
                                    dc:description " B " ],
                                [ gal:selected "true" ;
                                    gal:value "A" ;
                                    dc:description " A (TACG) " ] ;
                            gal:type "select" ;
                            dc:title "order" ],
                        [ gal:help "(Quince uses 360 for GSFLX and 720 for Titanium)" ;
                            gal:label "maxflows - Maximum number of flows after which all other flows should be ignored (default 450)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "450" ;
                            dc:title "maxflows" ],
                        [ gal:help "" ;
                            gal:label "maxhomop - Maximum homopolymers" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "maxhomop" ],
                        [ gal:help "Optional. Between 0 and 1. Default .7" ;
                            gal:label "noise - treat any intensity signal less than this threshold as noise" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.7" ;
                            dc:title "noise" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "Use sffinfo to generate flow data from an sff file" ;
                            gal:label "flow - flowgram data" ;
                            gal:type "data" ;
                            dc:title "flow" ],
                        [ gal:help "(Quince uses 360)" ;
                            gal:label "minflows - Minimum number of flows that each sequence must contain to make it in to a \"trim\" file. (default 450)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "450" ;
                            dc:title "minflows" ],
                        [ gal:help "Optional. Between 0 an 1. Default .5" ;
                            gal:label "signal - treat any intensity signal greater than this threshold as a real signal" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.5" ;
                            dc:title "signal" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "fasta - translate the flowgram data to fasta sequence format" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.sff.flow" ;
                                    gal:pattern "flow\\.(?P<designation>.*)\\.flow" ] ;
                            gal:filter "oligo['add'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: oligos.flow" ;
                            gal:type "list" ;
                            dc:title "flow_oligos" ] ;
                    gal:data [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "flow.trim" ;
                            gal:label "${tool.name} on ${on_string}: trim.flow" ;
                            dc:title "trim_flow" ],
                        [ gal:filter "fasta" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "flow.flow.fasta" ;
                            gal:label "${tool.name} on ${on_string}: flow.fasta" ;
                            dc:title "flow_fasta" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "flow.flow.files" ;
                            gal:label "${tool.name} on ${on_string}: flow.files" ;
                            dc:title "flow_files" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "flow.scrap" ;
                            gal:label "${tool.name} on ${on_string}: scrap.flow" ;
                            dc:title "scrap_flow" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "partition by barcode, trim to length, cull by length and mismatches" ;
            dc:identifier "mothur_trim_flows" ;
            dc:title "Trim.flows",
                "trim.flows" ;
            schema:sku 66 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.infile' input.infile.dat &&

echo 'get.mimarkspackage(
    #if $input.filetype == "group":
        group=input.infile.dat,
    #elif $input.filetype == "oligos":
        oligos=input.infile.dat,
    #end if
    package=$package,
    requiredonly=$requiredonly
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.mimarkspackage_ command creates a mimarks package form with your groups.

.. _get.mimarkspackage: https://www.mothur.org/wiki/Get.mimarkspackage

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "input type" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "oligos" ;
                                            dc:description "oligos file" ],
                                        [ gal:value "group" ;
                                            dc:description "group file" ] ;
                                    gal:type "select" ;
                                    dc:title "filetype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group file" ;
                                            gal:type "data" ;
                                            dc:title "infile" ] ;
                                    gal:value "group" ],
                                [ gal:param [ gal:format "mothur.oligos" ;
                                            gal:label "oligos" ;
                                            gal:type "data" ;
                                            dc:title "infile" ] ;
                                    gal:value "oligos" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "requiredonly - used to indicate you only want the required mimarks fields printed. Default=false" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "requiredonly" ],
                        [ gal:label "package - select the mimarks package you would like to use" ;
                            gal:option [ gal:value "human_vaginal" ;
                                    dc:description "human_vaginal" ],
                                [ gal:value "sediment" ;
                                    dc:description "sediment" ],
                                [ gal:value "human_oral" ;
                                    dc:description "human_oral" ],
                                [ gal:value "human_associated" ;
                                    dc:description "human_associated" ],
                                [ gal:value "air" ;
                                    dc:description "air" ],
                                [ gal:value "human_skin" ;
                                    dc:description "human_skin" ],
                                [ gal:value "microbial" ;
                                    dc:description "microbial" ],
                                [ gal:value "plant_associated" ;
                                    dc:description "plant_associated" ],
                                [ gal:value "soil" ;
                                    dc:description "soil" ],
                                [ gal:value "host_associated" ;
                                    dc:description "host_associated" ],
                                [ gal:value "human_gut" ;
                                    dc:description "human_gut" ],
                                [ gal:selected "true" ;
                                    gal:value "miscellaneous" ;
                                    dc:description "miscellaneous" ],
                                [ gal:value "wastewater" ;
                                    dc:description "wastewater" ],
                                [ gal:value "waterc" ;
                                    dc:description "waterc" ] ;
                            gal:type "select" ;
                            dc:title "package" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "input.infile*.tsv" ;
                            gal:label "${tool.name} on ${on_string}: mimarks package" ;
                            dc:title "package_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "creates a mimarks package form with your groups" ;
            dc:identifier "mothur_get_mimarkspackage" ;
            dc:title "Get.mimarkspackage",
                "get.mimarkspackage" ;
            schema:sku 101 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$map' map.dat &&

echo 'align.check(
    fasta=fasta.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    map=map.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& cat fasta.align.check
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The align.check_ command allows you to calculate the number of potentially misaligned bases in a 16S rRNA gene sequence
alignment using a secondary_structure_map_.  If you are familiar with the editor window in ARB, this is the same as
counting the number of ~, #, -, and = signs.

.. _secondary_structure_map: https://www.mothur.org/wiki/Secondary_structure_map
.. _align.check: https://www.mothur.org/wiki/Align.check

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Secondary Structure Map from" ;
                                    gal:option [ gal:value "history" ;
                                            dc:description "Your History" ],
                                        [ gal:value "cached" ;
                                            dc:description "Cached Secondary Structure Maps" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "map" ;
                                            gal:format "mothur.map" ;
                                            gal:label "Secondary Structure Map" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ],
                                [ gal:param [ gal:argument "map" ;
                                            gal:label "Secondary structure map" ;
                                            gal:options [ gal:from_data_table "mothur_map" ] ;
                                            gal:type "select" ] ;
                                    gal:value "cached" ] ;
                            dc:title "ss" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence" ;
                            gal:label "names file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "You can also provide a name file associated with your fasta file" ;
                            gal:label "count_table file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Aligned Sequences" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.align.check" ;
                            gal:from_work_dir "fasta.align.check" ;
                            gal:label "${tool.name} on ${on_string}: align.check" ;
                            dc:title "align.check" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Calculate the number of potentially misaligned bases" ;
            dc:identifier "mothur_align_check" ;
            dc:title "Align.check",
                "align.check" ;
            schema:sku 118 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.template.dat &&
#if $mask_cond.source2 == "history":
    ln -s '$mask_cond.input' mask_cond.mask.dat &&
#end if

echo 'chimera.ccode(
    fasta=fasta.dat,
    reference=alignment.template.dat,
    filter=$filter,
    #if $mask_cond.source2 == "default":
        mask=default,
    #elif $mask_cond.source2 == "history":
        mask=mask_cond.mask.dat,
    #end if
    #if int($window) > 0:
        window=$window,
    #end if
    #if int($numwanted) > 0:
        numwanted=$numwanted,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.ccode_ command identifies putative chimeras using the ccode approach (Chimera and Cross-Over Detection and Evaluation).  Ccode_ compares differences in distances, for each word, between query sequence and reference sequences, and reference sequences and themselves.

This method was written using the algorithms described in the paper_ "Evaluating putative chimeric sequences from PCR-amplified products" by Juan M. Gonzalez, Johannes Zimmerman and Cesareo Saiz-Jimenez.

The program can analyze sequences for any required word length. Generally, values of 5-20% of sequence length appear to deliver accurate results, for example, working on 16S rDNA sequences with a full-length of #1500 nt. It should be noted that the use of fragments either too long or too short might result in a reduction of sensitivity.

.. _Ccode: http://www.microextreme.net/downloads.html
.. _paper: http://bioinformatics.oxfordjournals.org/content/21/3/333.full.pdf
.. _chimera.ccode: https://www.mothur.org/wiki/Chimera.ccode

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:label "Mask option" ;
                                    gal:option [ gal:value "" ;
                                            dc:description "None" ],
                                        [ gal:value "default" ;
                                            dc:description "default ecoli mask" ],
                                        [ gal:value "history" ;
                                            dc:description "From Your History" ] ;
                                    gal:type "select" ;
                                    dc:title "source2" ] ;
                            gal:when [ gal:param [ gal:argument "mask" ;
                                            gal:format "mothur.filter" ;
                                            gal:label "Mask for the reference file" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ],
                                [ gal:value "default" ],
                                [ gal:value "" ] ;
                            dc:title "mask_cond" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "False" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:help "uses default if set to 0" ;
                            gal:label "numwanted - Number of sequences compared with each query" ;
                            gal:type "integer" ;
                            gal:value "20" ;
                            dc:title "numwanted" ],
                        [ gal:help "Recommended window size is between 5 and 20% of your trimmed sequence length. Default is 10% of the sequence length. Default is used if < 1" ;
                            gal:label "window - Length of sequence you want in each window analyzed" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "window" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "*.mapinfo" ;
                            gal:label "${tool.name} on ${on_string}: mapinfo" ;
                            dc:title "mapinfo" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*ccode.accnos" ;
                            gal:label "${tool.name} on ${on_string}: ccode.accnos" ;
                            dc:title "ccode.accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*ccode.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: ccode.chimeras" ;
                            dc:title "ccode.chimeras" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using ccode" ;
            dc:identifier "mothur_chimera_ccode" ;
            dc:title "Chimera.ccode",
                "chimera.ccode" ;
            schema:sku 67 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$input.dist' input_dist.dat &&

echo 'remove.dists(
    accnos=accnos.dat,
    #if $input.source == "phylip":
        phylip=input_dist.dat
    #else
        column=input_dist.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.dists_ removes distances from a phylip or column file related to groups or sequences listed in an accnos file.

.. _remove.dists: https://www.mothur.org/wiki/Remove.dists

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select input format" ;
                                    gal:option [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "column" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "dist" ;
                            gal:from_work_dir "input_dist*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.dist" ;
                            dc:title "pick_dist" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Removes distances from a phylip or column file" ;
            dc:identifier "mothur_remove_dists" ;
            dc:title "Remove.dists",
                "remove.dists" ;
            schema:sku 97 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'pairwise.seqs(
    fasta=fasta.dat,
    align=$align,
    #if $calc:
        calc=$calc,
    #end if
    $countends
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $scoring.setby == "user":
        match=$scoring.match,
        mismatch=$scoring.mismatch,
        gapopen=$scoring.gapopen,
        gapextend=$scoring.gapextend,
    #end if
    #if $output:
        output=$output,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The pairwise.seqs_ command will calculate uncorrected pairwise distances between sequencesi as a column-formatted_distance_matrix_ or  phylip-formatted_distance_matrix_.

.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _pairwise.seqs: https://www.mothur.org/wiki/Pairwise.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Scoring match, mismatch, gapopen, and gapextend" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "default" ;
                                            dc:description "Use default settings" ],
                                        [ gal:value "user" ;
                                            dc:description "Manually set scoring values" ] ;
                                    gal:type "select" ;
                                    dc:title "setby" ] ;
                            gal:when [ gal:param [ gal:label "match - Pairwise alignment reward for a match" ;
                                            gal:type "integer" ;
                                            gal:value "1" ;
                                            dc:title "match" ],
                                        [ gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-2" ;
                                            dc:title "gapopen" ],
                                        [ gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ;
                                            dc:title "gapextend" ],
                                        [ gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ;
                                            dc:title "mismatch" ] ;
                                    gal:value "user" ],
                                [ gal:value "default" ] ;
                            dc:title "scoring" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:option [ gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "Column-Formatted Matrix (Default)" ] ;
                            gal:type "select" ;
                            dc:title "output" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:help "" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:option [ gal:value "blast" ;
                                    dc:description "blast" ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ],
                                [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default)" ] ;
                            gal:type "select" ;
                            dc:title "align" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "countends=false," ;
                            gal:help "Penalize terminal gaps" ;
                            gal:label "countends - Countends" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ;
                            dc:title "countends" ],
                        [ gal:help "" ;
                            gal:label "calc - Calc Method - Gap Penality" ;
                            gal:option [ gal:value "eachgap" ;
                                    dc:description "eachgap - penalize each gap" ],
                                [ gal:value "nogaps" ;
                                    dc:description "nogaps - ignores gaps" ],
                                [ gal:value "onegap" ;
                                    dc:description "onegap - counts a string of gaps as a single gap" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "use default" ] ;
                            gal:type "select" ;
                            dc:title "calc" ],
                        [ gal:help "Do not save any distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.0" ;
                            dc:title "cutoff" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:change_format [ gal:when [ gal:format "mothur.lower.dist" ;
                                            gal:input "output" ;
                                            gal:value "lt" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "output" ;
                                            gal:value "square" ] ] ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "fasta*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            dc:title "out_dist" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "calculate uncorrected pairwise distances between sequences" ;
            dc:identifier "mothur_pairwise_seqs" ;
            dc:title "Pairwise.seqs",
                "pairwise.seqs" ;
            schema:sku 115 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$taxonomy' taxonomy.dat &&
ln -s '$name' name.dat &&

echo 'phylotype(
    taxonomy=taxonomy.dat
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
    #if $name:
        ,name=name.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The phylotype_ command assign sequences to OTUs based on their taxonomy and outputs a a list_, a sabund_ (Species Abundance), and a rabund_ (Relative Abundance) file.

.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _phylotype: https://www.mothur.org/wiki/Phylotype

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Names reference file for the taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:label "label - Taxonomy Levels to report (All when none are selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "4" ;
                                    dc:description "4" ],
                                [ gal:value "5" ;
                                    dc:description "5" ],
                                [ gal:value "9" ;
                                    dc:description "9" ],
                                [ gal:value "7" ;
                                    dc:description "7" ],
                                [ gal:value "6" ;
                                    dc:description "6" ],
                                [ gal:value "2" ;
                                    dc:description "2" ],
                                [ gal:value "1" ;
                                    dc:description "1" ],
                                [ gal:value "10" ;
                                    dc:description "10" ],
                                [ gal:value "8" ;
                                    dc:description "8" ],
                                [ gal:value "0" ;
                                    dc:description "0" ],
                                [ gal:value "3" ;
                                    dc:description "3" ] ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:type "data" ;
                            dc:title "taxonomy" ],
                        [ gal:label "cutoff - Truncate the taxonomy at depth (Ignored if < 0)" ;
                            gal:max "50" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "cutoff" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.list" ;
                            gal:from_work_dir "taxonomy*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            dc:title "otulist" ],
                        [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "taxonomy*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            dc:title "rabund" ],
                        [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "taxonomy*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            dc:title "sabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to OTUs based on taxonomy" ;
            dc:identifier "mothur_phylotype" ;
            dc:title "Phylotype",
                "phylotype" ;
            schema:sku 35 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'rarefaction.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    calc=${ str($calc).replace(",","-") },
    abund=$abund,
    iters=$iters,
    freq=$freq,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## rename output from sobs calculator to be consistent with others
#if 'sobs' in str($calc).split(','):
    && mv otu\\.*rarefaction otu.r_sobs
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The rarefaction.single_ command generates intra-sample rarefaction curves using a re-sampling without replacement approach. Rarefaction curves provide a way of comparing the richness observed in different samples.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _rarefaction.single: https://www.mothur.org/wiki/Rarefaction.single

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ],
                                [ gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ] ;
                            gal:type "select" ;
                            dc:title "calc" ],
                        [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "abund" ],
                        [ gal:label "iters - Number of randomizations" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:help "if between 0 and 1 the fraction of sequences to sample, if greater than one - report every n iterations" ;
                            gal:label "freq - Reporting frequency" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "100" ;
                            dc:title "freq" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?(\\.groups)?\\.r_(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: rarefaction curves" ;
                            gal:type "list" ;
                            dc:title "rarefactioncurves" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate intra-sample rarefaction curves for OTUs" ;
            dc:identifier "mothur_rarefaction_single" ;
            dc:title "Rarefaction.single",
                "rarefaction.single" ;
            schema:sku 50 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$design' design.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&

echo 'make.lefse(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #else
        shared=otu.dat,
    #end if
    #if $design:
        design=design.dat,
    #end if
    #if $constaxonomy:
        constaxonomy=constaxonomy.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    scale=$scale
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.lefse_ allows you to create a lefse formatted input file from mothur's output files.

.. _make.lefse: https://www.mothur.org/wiki/Make.lefse

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared or relabund - provide a shared or relabund file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:label "constaxonomy - provide a constaxonomy file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "constaxonomy" ],
                        [ gal:help "" ;
                            gal:label "scale - select what scale you would like to use to convert your shared file abundances to relative abundances" ;
                            gal:multiple "false" ;
                            gal:option [ gal:value "totalotu" ;
                                    dc:description "totalotu" ],
                                [ gal:value "averagegroup" ;
                                    dc:description "averagegroup" ],
                                [ gal:value "averageotu" ;
                                    dc:description "averageotu" ],
                                [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "totalgroup" ] ;
                            gal:type "select" ;
                            dc:title "scale" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "If none selected, the first label in your file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "tabular" ;
                            gal:label "design - provide your design file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "design" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.lefse" ;
                            gal:label "${tool.name} on ${on_string}: lefse" ;
                            dc:title "lefse_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "create a lefse formatted input file from mothur's output files" ;
            dc:identifier "mothur_make_lefse" ;
            dc:title "Make.lefse",
                "make.lefse" ;
            schema:sku 40 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.sfffiles(
    sff=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.sfffiles_ command merge inputs into a single output.

.. _merge.sfffiles: https://www.mothur.org/wiki/Merge.sfffiles

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "sff" ;
                            gal:label "input - sff files to merge" ;
                            gal:multiple "true" ;
                            gal:type "data" ;
                            dc:title "input" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "sff" ;
                            gal:label "${tool.name} on ${on_string}: merged sff" ;
                            dc:title "output" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Merge SFF files" ;
            dc:identifier "mothur_merge_sfffiles" ;
            dc:title "Merge.sfffiles",
                "merge.sfffiles" ;
            schema:sku 6 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$count' count.dat &&
#if $input.source == 'shared':
    ln -s '$input.otu' input_otu.dat &&
#else
    ln -s '$input.dist' input_dist.dat &&
    #if $input.source == 'column':
        ln -s '$input.name' input_name.dat &&
    #end if
#end if

echo 'heatmap.sim(
    #if $input.source == "shared":
        shared=input_otu.dat,
        #if $input.label:
            label=${ str($input.label).replace(",","-") },
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.calc:
            calc=${ str($input.calc).replace(",","-") },
        #end if
    #elif $input.source == "column":
        column=input_dist.dat,
        name=input_name.dat,
    #elif $input.source == "phylip":
        phylip=input_dist.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    fontsize=$fontsize
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The heatmap.sim_ command generates a heat map from data provided in either a shared_ file, a phylip_ distance matrix, or a column_ distance matrix and a name_ file.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _phylip: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _column: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _name: https://www.mothur.org/wiki/Name_file
.. _heatmap.sim: https://www.mothur.org/wiki/Heatmap.sim

v.1.24.0: Updated to Mothur 1.33, added count parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "colomn - Pairwise Column Distance Matrix" ],
                                        [ gal:value "phylip" ;
                                            dc:description "phylip - Phylip Distance Matrix" ],
                                        [ gal:value "shared" ;
                                            dc:description "shared - Sample Similarity - OTU Shared" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:type "data" ;
                                            dc:title "name" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "column" ],
                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "phylip" ],
                                [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:option [ gal:value "sorclass" ;
                                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                                [ gal:value "thetan" ;
                                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                                [ gal:value "braycurtis" ;
                                                    dc:description "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient" ],
                                                [ gal:value "jabund" ;
                                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ],
                                                [ gal:value "morisitahorn" ;
                                                    dc:description "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient" ],
                                                [ gal:value "jclass" ;
                                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                                [ gal:value "sorabund" ;
                                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ],
                                                [ gal:value "sorest" ;
                                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                                [ gal:selected "true" ;
                                                    gal:value "jest" ;
                                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                                [ gal:selected "true" ;
                                                    gal:value "thetayc" ;
                                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ] ;
                                            gal:type "select" ;
                                            dc:title "calc" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "shared" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "24" ;
                            dc:title "fontsize" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern ".*?\\.(?P<designation>.*)\\.sim\\.svg" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: Heatmaps" ;
                            gal:type "list" ;
                            dc:title "heatmaps" ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format "svg" ;
                            gal:from_work_dir "input_dist*.heatmap.sim.svg" ;
                            gal:label "${tool.name} on ${on_string}: heatmap.sim.svg" ;
                            dc:title "heatmap" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a heatmap for pariwise similarity" ;
            dc:identifier "mothur_heatmap_sim" ;
            dc:title "Heatmap.sim",
                "heatmap.sim" ;
            schema:sku 8 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$matrix.dist' matrix.dist.dat &&
#if str($matrix.method_name.method) == "count" :
        ln -s '$matrix.method_name.count' matrix.method_name.count.dat &&
#else
       ln -s '$matrix.method_name.names' matrix.method_name.names.dat &&
#end if


echo 'sens.spec(
    list=otu.dat,
    #if str($matrix.format) == "phylip":
        phylip=matrix.dist.dat,
    #else
        column=matrix.dist.dat,
    #end if
    #if str($matrix.method_name.method) == "count" :
       count=matrix.method_name.count.dat,
    #else
       names=matrix.method_name.names.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    precision=$precision,
    cutoff=$cutoff
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The sens.spec_ command takes a list_ and either a column_  or phylip_ distance matrix to determine the quality of OTU assignment.


.. _list: https://www.mothur.org/wiki/List_file
.. _column: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _sens.spec: https://www.mothur.org/wiki/Sens.spec

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select a Distance Matrix Format" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "Pairwise Column Matrix " ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:title "format" ] ;
                            gal:when [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "phylip" ],
                                [ gal:conditional [ gal:param [ gal:help "" ;
                                                    gal:label "Select a Method" ;
                                                    gal:option [ gal:value "name" ;
                                                            dc:description "name file associated with your distance matrix. " ],
                                                        [ gal:value "count" ;
                                                            dc:description "count file associated with your distance matrix." ] ;
                                                    gal:type "select" ;
                                                    dc:title "method" ] ;
                                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                                            gal:label "name - Sequences Name reference" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ;
                                                            dc:title "names" ] ;
                                                    gal:value "name" ],
                                                [ gal:param [ gal:format "mothur.count_table" ;
                                                            gal:help "generated by count.seqs" ;
                                                            gal:label "count - a count_table" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ;
                                                            dc:title "count" ] ;
                                                    gal:value "count" ] ;
                                            dc:title "method_name" ] ;
                                    gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "column" ] ;
                            dc:title "matrix" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "By default all are included if no selection is made." ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "labels" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.dist,phylip,tabular" ;
                            gal:label "phylip,column - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist" ],
                        [ gal:help "Ignore pairwise distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:type "float" ;
                            gal:value "-1" ;
                            dc:title "cutoff" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "precision - Precision for rounding distance values" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "100" ;
                            dc:title "precision" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.sensspec" ;
                            gal:label "${tool.name} on ${on_string}: sensspec" ;
                            dc:title "sensspec" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Determine the quality of OTU assignment" ;
            dc:identifier "mothur_sens_spec" ;
            dc:title "Sens.spec",
                "sens.spec" ;
            schema:sku 2 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$axes' axes.dat &&

echo 'nmds(
    phylip=dist.dat
    #if $axes:
        ,axes=axes.dat
    #end if
    ,mindim=$mindim
    #if $maxdim >= $mindim:
        ,maxdim=$maxdim
    #end if
    ,iters=$iters
    ,maxiters=$maxiters

    ## Mothur can't cope with scientific notation
    #set epsilon_decimal = "{:.12f}".format(float($epsilon))
    ,epsilon=$epsilon_decimal
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The nmds_ command generates non-metric multidimensional scaling data from a phylip_distance_matrix_.

.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _nmds: https://www.mothur.org/wiki/Nmds

v1.20.0: Updated to mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "maxiters - Number of iterations to try with each random configuration (default 500)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "500" ;
                            dc:title "maxiters" ],
                        [ gal:label "mindim - minimum dimensions (default 2)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "2" ;
                            dc:title "mindim" ],
                        [ gal:label "maxdim - maximum dimensions (default 2)" ;
                            gal:type "integer" ;
                            gal:value "2" ;
                            dc:title "maxdim" ],
                        [ gal:label "epsilon - acceptable stopping precision (default 1e-12)" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "1e-12" ;
                            dc:title "epsilon" ],
                        [ gal:format "mothur.axes" ;
                            gal:label "axes - a starting configuration" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "axes" ],
                        [ gal:label "iters - Number of random configuration to try (default 10)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.iters" ;
                            gal:label "${tool.name} on ${on_string}: nmds.iters" ;
                            dc:title "nmds_iters" ],
                        [ gal:format "mothur.axes" ;
                            gal:from_work_dir "dist*.axes" ;
                            gal:label "${tool.name} on ${on_string}: nmds.axes" ;
                            dc:title "nmds_axes" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.stress" ;
                            gal:label "${tool.name} on ${on_string}: nmds.stress" ;
                            dc:title "nmds_stress" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "generate non-metric multidimensional scaling data" ;
            dc:identifier "mothur_nmds" ;
            dc:title "Nmds",
                "nmds" ;
            schema:sku 36 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$fasta' fasta.dat &&
ln -s '$otu' otu.dat &&
ln -s '$count' count.dat &&

echo 'bin.seqs(
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    fasta=fasta.dat,
    list=otu.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The bin.seqs_ command generates fasta-formatted files where sequences are ordered according to the OTU
from the list_file_ that they belong to. Such an output may be helpful for generating primers specific
to an OTU or for classification of sequences.

.. _list_file: https://www.mothur.org/wiki/List_file
.. _bin.seqs: https://www.mothur.org/wiki/Bin.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:argument "label" ;
                            gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequences to Bin" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "Represents the number of duplicate sequences for a given representitive sequence" ;
                            gal:label "count - Count Table" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:label "${tool.name} on ${on_string}: fastafiles per label" ;
                            gal:type "list" ;
                            dc:title "fastafiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Order Sequences by OTU" ;
            dc:identifier "mothur_bin_seqs" ;
            dc:title "Bin.seqs",
                "bin.seqs" ;
            schema:sku 21 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&
ln -s '$design' design.dat &&

echo 'amova(
    phylip=phylip.dat,
    iters=$iters,
    alpha=$alpha,
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    design=design.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The amova_ command calculates the analysis of molecular variance from a phylip_distance_matrix_,
a nonparametric analog of traditional analysis of variance. This method is widely used in population
genetics to test the hypothesis that genetic diversity within two populations is not significantly
different from that which would result from pooling the two populations.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
	=======	=======
	duck	bird
	cow	mammal
	pig	mammal
	goose	bird
	cobra	reptile
	=======	=======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.


.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _amova: https://www.mothur.org/wiki/Amova

    """ ;
            gal:inputs [ gal: """ TODO: update galaxy datatypes to set metadata for design files, then can switch to a select box
        <param argument="sets" type="select" multiple="true" label="sets - Which of the sets in your design file you would like to analyze."
            help="The set names are separated by dashes. The defualt is all sets in designfile">
            <options>
                <filter type="data_meta" ref="design" key="sets"/>
            </options>
        </param>
        """ ;
                    gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "iters" ;
                            gal:help "default: 1000" ;
                            gal:label "iters - Number of random configuration to try" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:argument "design" ;
                            gal:format "mothur.design" ;
                            gal:help "design has 2 TAB-separated columns: group and grouping (Tool: Make_Design)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ],
                        [ gal:help "separate sets by dashes or commas, e.g. set1,set2 or set1-set2-set3" ;
                            gal:label "sets - Which of the sets in your design file you would like to analyze?" ;
                            gal:type "text" ;
                            dc:title "sets" ],
                        [ gal:argument "alpha" ;
                            gal:help "default: 0.05" ;
                            gal:label "alpha - acceptable stopping precision" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:argument "phylip" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "phylip.amova" ;
                            gal:label "${tool.name} on ${on_string}: amova" ;
                            dc:title "amova" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Analysis of molecular variance" ;
            dc:identifier "mothur_amova" ;
            dc:title "Amova",
                "amova" ;
            schema:sku 11 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&

echo 'heatmap.bin(
    #if $input.otu.is_of_type("mothur.rabund"):
        rabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.sabund"):
        sabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.list"):
        list=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.relabund"):
        relabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.shared"):
        shared=input_otu.dat,
    #end if
    #if $input.has_groups == 'yes' and $input.groups:
        groups=${ str($input.groups).replace(",","-") },
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    scale=$scale,
    sorted=$sorted,
    numotu=$numotu,
    fontsize=$fontsize
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The heatmap.bin_ command generates a heat map from data provided in either a list_ or a shared_ file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _heatmap.bin: https://www.mothur.org/wiki/Heatmap.bin

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "list, rabund, sabund" ],
                                        [ gal:value "yes" ;
                                            dc:description "shared, relabund" ] ;
                                    gal:type "select" ;
                                    dc:title "has_groups" ] ;
                            gal:when [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.shared,mothur.relabund" ;
                                            gal:label "shared or relabund file - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "yes" ],
                                [ gal:param [ gal:format "mothur.list,mothur.rabund,mothur.sabund" ;
                                            gal:label "list,rabund,sabund - OTU List" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "no" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "24" ;
                            dc:title "fontsize" ],
                        [ gal:label "sorted - Sort heatmap" ;
                            gal:option [ gal:value "topotu" ;
                                    dc:description "By Total OTUs" ],
                                [ gal:selected "true" ;
                                    gal:value "shared" ;
                                    dc:description "By shared" ],
                                [ gal:value "none" ;
                                    dc:description "Don't sort" ],
                                [ gal:value "topgroup" ;
                                    dc:description "By Total Groups" ] ;
                            gal:type "select" ;
                            dc:title "sorted" ],
                        [ gal:label "numotu - Limit the number of OTUs displayed (ignored if 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "numotu" ],
                        [ gal:label "scale - Scaling for heatmap" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "log10" ;
                                    dc:description "Log10" ],
                                [ gal:value "linear" ;
                                    dc:description "Linear" ],
                                [ gal:value "log2" ;
                                    dc:description "Log2" ] ;
                            gal:type "select" ;
                            dc:title "scale" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern ".*?\\.(?P<designation>.*)\\.bin\\.svg" ] ;
                            gal:label "${tool.name} on ${on_string}: Heatmaps" ;
                            gal:type "list" ;
                            dc:title "heatmaps" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a heatmap for OTUs" ;
            dc:identifier "mothur_heatmap_bin" ;
            dc:title "Heatmap.bin",
                "heatmap.bin" ;
            schema:sku 114 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$design' design.dat &&

echo 'homova(
    phylip=dist.dat,
    design=design.dat,
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    iters=$iters,
    alpha=$alpha
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The homova_ command calculates the homogeneity of molecular variance (HOMOVA) from a phylip_distance_matrix_, a nonparametric analog of Bartlett's test for homo- geneity of variance, which has been used in population genetics to test the hypothesis that the genetic diversity within two or more populations is homogeneous.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
        ======= =======
        duck    bird
        cow     mammal
        pig     mammal
        goose   bird
        cobra   reptile
        ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.

.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _homova: https://www.mothur.org/wiki/Homova

v.1.20.0: Updated to Mothur 1.33, added sets parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ;
                            dc:title "design" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist" ],
                        [ gal:label "alpha - acceptable stopping precision (default 0.05)" ;
                            gal:min "0.0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ;
                            dc:title "alpha" ],
                        [ gal:label "iters - Number of random configuration to try (default 1000)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:label "sets - Which of the sets in your design file you would like to analyze. The set names are separated by dashes. The default is all sets in designfile" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "design" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "sets" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.homova" ;
                            gal:label "${tool.name} on ${on_string}: homova" ;
                            dc:title "homova" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Homogeneity of molecular variance" ;
            dc:identifier "mothur_homova" ;
            dc:title "Homova",
                "homova" ;
            schema:sku 109 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#if $input.source == "shared":
    ln -s '$input.otu' input.otu.dat &&
#else
    ln -s '$input.metadata' input.metadata.dat &&
#end if

echo 'corr.axes(
    #if $input.source == "shared":
        #if $input.otu.is_of_type("mothur.relabund"):
            relabund=input.otu.dat,
        #elif $input.otu.is_of_type("mothur.shared"):
            shared=input.otu.dat,
        #end if
        #if $input.label:
            label=$input.label,
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #else:
        metadata=input.metadata.dat,
    #end if
    method=$method,
    axes=$axes,
    numaxes=$numaxes
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The corr.axes_ command calculates the correlation of data to axes.

.. _corr.axes: https://www.mothur.org/wiki/Corr.axes

v.1.21.0: Updated to mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Generate Collector Curvers for" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "OTU Shared or Relabund" ],
                                        [ gal:value "metadata" ;
                                            dc:description "Metadata table" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:label "groups - Pairwise comparision groups" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.shared,mothur.relabund" ;
                                            gal:label "shared or relabund - OTU Shared or Relabund" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "shared" ],
                                [ gal:param [ gal:format "tabular" ;
                                            gal:help "metadata has the same number of rows as the samples, but the column(s) are floats that describe the samples (e.g. temperature, weight, etc.)" ;
                                            gal:label "metadata - Table of floating point values" ;
                                            gal:type "data" ;
                                            dc:title "metadata" ] ;
                                    gal:value "metadata" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "method - pearson, spearman, or kendall. Default: pearson" ;
                            gal:option [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ],
                                [ gal:value "spearman" ;
                                    dc:description "spearman" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "method" ],
                        [ gal:label "numaxes - Number of axes to use (default 3)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "3" ;
                            dc:title "numaxes" ],
                        [ gal:format "mothur.axes" ;
                            gal:label "axes - a pcoa axes dataset" ;
                            gal:type "data" ;
                            dc:title "axes" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.axes" ;
                            gal:from_work_dir "input.*.axes" ;
                            gal:label "${tool.name} on ${on_string}: corr.axes" ;
                            dc:title "corr_axes" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "correlation of data to axes" ;
            dc:identifier "mothur_corr_axes" ;
            dc:title "Corr.axes",
                "corr.axes" ;
            schema:sku 87 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$otu' otu.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'primer.design(
    fasta=fasta.dat,
    list=otu.dat,
    #if $label:
        label=$label,
    #end if
        otulabel=$otulabel,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    #if $mintm:
        mintm=$mintm,
    #end if
    #if $maxtm:
        maxtm=$maxtm,
    #end if
    pdiffs=$pdiffs,
    length=$length,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The primer.design_ allows you to identify sequence fragments that are specific to particular OTUs.

.. _primer.design: https://www.mothur.org/wiki/Primer.design

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - names file associated with your fasta file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU list file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:help "" ;
                            gal:label "mintm - indicate minimum melting temperature" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "mintm" ],
                        [ gal:format "mothur.align" ;
                            gal:label "fasta - provide aligned fasta file" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:help "" ;
                            gal:label "pdiffs - specify the number of differences allowed in the primer" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "pdiffs" ],
                        [ gal:help "" ;
                            gal:label "length - indicate the length of the primer" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "18" ;
                            dc:title "length" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "If none selected, the first label in your file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "false" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:help "For example: cutoff=97 would only return a sequence that only showed ambiguities for bases that were not supported by at least 97% of sequences." ;
                            gal:label "cutoff - set a percentage of sequences that support the base" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "cutoff" ],
                        [ gal:label "otulabel - choose an OTU name" ;
                            gal:multiple "false" ;
                            gal:optional "false" ;
                            gal:options [ gal:filter [ gal:key "otulabels" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "otulabel" ],
                        [ gal:help "" ;
                            gal:label "maxtm - indicate maximum melting temperature" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "maxtm" ],
                        [ gal:format "mothur.count_table" ;
                            gal:label "count - a count table associated with your fasta file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.list" ;
                            gal:from_work_dir "otu*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            dc:title "list_out" ],
                        [ gal:format "mothur.align" ;
                            gal:from_work_dir "otu*.cons.fasta" ;
                            gal:label "${tool.name} on ${on_string}: cons.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.primer.summary" ;
                            gal:label "${tool.name} on ${on_string}: primer.summary" ;
                            dc:title "summary_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "identify sequence fragments that are specific to particular OTUs" ;
            dc:identifier "mothur_primer_design" ;
            dc:title "Primer.design",
                "primer.design" ;
            schema:sku 56 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&
ln -s '$conservation' conservation.dat &&
ln -s '$quantile' quantile.dat &&
#if $mask_cond.source2 == "history":
    ln -s '$mask_cond.mask' mask.dat &&
#end if

echo 'chimera.pintail(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    filter=$filter,
    #if $mask_cond.source2 == "default":
        mask=default,
    #elif $mask_cond.source2 == "history":
        mask=mask.dat,
    #end if
    #if $conservation:
        conservation=conservation.dat,
    #end if
    #if $quantile:
        quantile=quantile.dat,
    #end if
    #if int($window) > 0:
        window=$window,
    #end if
    #if int($increment) > 0:
        increment=$increment,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.pintail_ command identifies putative chimeras using the pintail approach.  It looks at the variation between the expected differences and the observed differences in the query sequence over several windows.

This method was written using the algorithms described in the paper_ "At Least 1 in 20 16S rRNA Sequence Records Currently Held in the Public Repositories is Estimated To Contain Substantial Anomalies" by Kevin E. Ashelford 1, Nadia A. Chuzhanova 3, John C. Fry 1, Antonia J. Jones 2 and Andrew J. Weightman 1.

The Pintail algorithm is a technique for determining whether a 16S rDNA sequence is anomalous.  It is based on the idea that the extent of local base differences between two aligned 16S rDNA sequences should be roughly the same along the length of the alignment (having allowed for the underlying pattern of hypervariable and conserved regions known to exist within the 16S rRNA gene).  In other words, evolutionary distance between two reliable sequences should be constant along the length of the gene.

In contrast, if an error-free sequence is compared with an anomalous sequence, evolutionary distance along the alignment is unlikely to be constant, especially if the anomaly in question is a chimera and formed from phylogenetically different parental sequences.

The Pintail algorithm is designed to detect and quantify such local variations and in doing so generates the Deviation from Expectation (DE) statistic.  The higher the DE value, the greater the likelihood that the query is anomalous.

The algorithm works as follows

The sequence to be checked (the query) is first globally aligned with a phylogenetically similar sequence known to be error-free (the subject).  At regular intervals along the resulting alignment, the local evolutionary distance between query and subject is estimated by recording percentage base mismatches within a sampling window of fixed length.  The resulting array of percentages (observed percentage differences) reflects variations in evolutionary distance between the query and subject along the length of the 16S rRNA gene.  Subtracting observed percentage differences from an equivalent array of expected percentage differences (predicted values for error-free sequences), we obtain a set of deviations, the standard deviation of which (Deviation from Expectation, DE) summarises the variation between observed and expected datasets.  The greater the DE value, the greater the disparity there is between observed and expected percentage differences, and the more likely it is that the query sequence is anomalous.


.. _paper: http://www.ncbi.nlm.nih.gov/pubmed/16332745
.. _chimera.pintail: https://www.mothur.org/wiki/Chimera.pintail

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:label "Mask option" ;
                                    gal:option [ gal:value "" ;
                                            dc:description "None" ],
                                        [ gal:value "history" ;
                                            dc:description "From your history" ],
                                        [ gal:value "default" ;
                                            dc:description "default ecoli mask" ] ;
                                    gal:type "select" ;
                                    dc:title "source2" ] ;
                            gal:when [ gal:value "" ],
                                [ gal:value "default" ],
                                [ gal:param [ gal:argument "mask" ;
                                            gal:format "mothur.filter" ;
                                            gal:label "Mask for the template file" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ] ;
                            dc:title "mask_cond" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "conservation" ;
                            gal:format "mothur.freq" ;
                            gal:help "a file containing the frequency information for your template file to increase speed. Mothur will generate this for you but it takes a long time." ;
                            gal:label "conservation - Template Conserved frequencies" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "window" ;
                            gal:help "Default is set to 300. Note, changing the window size will require new quantile files to be made." ;
                            gal:label "window - Length of sequence you want in each window analyzed (uses default if < 1)" ;
                            gal:type "integer" ;
                            gal:value "300" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "quantile" ;
                            gal:format "mothur.quan" ;
                            gal:help "file containing the quantiles information for your template file to increase speed. Mothur can generate this for you but it takes a VERY long time.             Note that when you use the filter, mask or mask and filter you need to select the appropriate quantile file. The filter parameter makes the quantile file             generated specific to the query set you are analyzing." ;
                            gal:label "quantile - Template quantile information" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "increment" ;
                            gal:help "Default is 25. Note, changing the increment will require new quantile files to be made." ;
                            gal:label "increment - Increment for window slide on each iteration (uses default if < 1)" ;
                            gal:type "integer" ;
                            gal:value "25" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "quantile == None" ;
                            gal:format "mothur.quan" ;
                            gal:from_work_dir "*.quan" ;
                            gal:label "${tool.name} on ${on_string}: pintail.quan" ;
                            dc:title "out_quantile" ],
                        [ gal:filter "conservation == None" ;
                            gal:format "mothur.freq" ;
                            gal:from_work_dir "alignment.reference.freq" ;
                            gal:label "${tool.name} on ${on_string}: pintail.freq" ;
                            dc:title "out_freq" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*pintail.accnos" ;
                            gal:label "${tool.name} on ${on_string}: pintail.accnos" ;
                            dc:title "out_accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*pintail.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: pintail.chimeras" ;
                            dc:title "pintail.chimeras" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using pintail" ;
            dc:identifier "mothur_chimera_pintail" ;
            dc:title "Chimera.pintail",
                "chimera.pintail" ;
            schema:sku 123 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $designc.usedesign == "yes":
    ln -s '$designc.design' designc.design.dat &&
#end if

echo 'rarefaction.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $designc.usedesign == "yes":
        design=designc.design.dat,
        #if $designc.sets:
            sets=${ str($designc.sets).replace(",","-") },
        #end if
    #end if
    #if $subsample.usess == "yes":
        #if $subsample.subsamplesize:
            subsample=$subsample.subsamplesize,
        #else
            subsample=T,
        #end if
        #if $subsample.subsampleiters:
            subsampleiters=$subsample.subsampleiters,
        #end if
    #end if
    calc=${ str($calc).replace(",","-") },
    iters=$iters
    $jumble
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The rarefaction.shared_ command generates inter-sample rarefaction curves using a re-sampling without replacement approach. The traditional way that ecologists use rarefaction is not to randomize the sampling order within a sample, rather between samples. For instance, if we wanted to know the number of OTUs in the human colon, we might sample from various sites within the colon, and sequence a bunch of 16S rRNA genes. By determining the number of OTUs in each sample and comparing the composition of those samples it is possible to determine how well you have sampled the biodiversity within the individual.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _rarefaction.shared: https://www.mothur.org/wiki/Rarefaction.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "produce subsample rarefactions?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "usess" ] ;
                            gal:when [ gal:param [ gal:help "Leave blank to use the size of your smallest group" ;
                                            gal:label "subsample - size pergroup of the sample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsamplesize" ],
                                        [ gal:label "subsampleiters - Number of times to run the subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "subsampleiters" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "subsample" ],
                        [ gal:param [ gal:label "run on a per set basis using a design file?" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "usedesign" ] ;
                            gal:when [ gal:param [ gal:format "mothur.design" ;
                                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                                            gal:label "design - assigns groups to sets" ;
                                            gal:type "data" ;
                                            dc:title "design" ],
                                        [ gal:label "sets - group sets to analyze" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "design" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "sets" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "designc" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "calc - Calculators" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "sharednseqs" ;
                                    dc:description "sharednseqs - the number of sequences in two samples" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedobserved" ;
                                    dc:description "sharedobserved - the number of sequences in two samples" ] ;
                            gal:type "select" ;
                            dc:title "calc" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "" ;
                            gal:help "Obviously, the goal of rarefaction is to randomize across the samples; however, if you just want a             collector's curve across the samples you can use the jumble option" ;
                            gal:label "jumble?" ;
                            gal:truevalue ",jumble=true" ;
                            gal:type "boolean" ;
                            dc:title "jumble" ],
                        [ gal:label "iters - Number of randomizations" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:help "All groups will be analyzed by default if none are selected" ;
                            gal:label "groups - Groups to analyze" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.r_nseqs" ] ;
                            gal:filter "subsample['usess'] == 'yes' and 'sharednseqs' in calc" ;
                            gal:label "${tool.name} on ${on_string}: shared.r_nseqs" ;
                            gal:type "list" ;
                            dc:title "rarefaction_subsample_sharednseqs" ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.rarefaction" ] ;
                            gal:filter "subsample['usess'] == 'yes' and 'sharedobserved' in calc" ;
                            gal:label "${tool.name} on ${on_string}: shared.rarefaction" ;
                            gal:type "list" ;
                            dc:title "rarefaction_subsample_sharedobserved" ] ;
                    gal:data [ gal:filter "designc['usedesign'] == 'yes'" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.groups.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: groups.rarefaction" ;
                            dc:title "group_rarefaction" ],
                        [ gal:filter "designc['usedesign'] == 'no' and 'sharednseqs' in calc" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.shared.r_nseqs" ;
                            gal:label "${tool.name} on ${on_string}: shared.r_nseqs" ;
                            dc:title "rarefaction2" ],
                        [ gal:filter "designc['usedesign'] == 'no' and 'sharedobserved' in calc" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.shared.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: shared.rarefaction" ;
                            dc:title "rarefaction" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate inter-sample rarefaction curves for OTUs" ;
            dc:identifier "mothur_rarefaction_shared" ;
            dc:title "Rarefaction.shared",
                "rarefaction.shared" ;
            schema:sku 83 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$qfile_in' qfile_in.dat &&
ln -s '$flow_in' flow_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$tax_in' tax_in.dat &&
ln -s '$accnos' accnos.dat &&
ln -s '$count' count.dat &&

echo 'sort.seqs(
    #if $fasta_in:
        fasta=fasta_in.dat,
    #end if
    #if $qfile_in:
        qfile=qfile_in.dat,
    #end if
    #if $flow_in:
        flow=flow_in.dat,
    #end if
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $tax_in:
        taxonomy=tax_in.dat,
    #end if
    #if $accnos:
        accnos=accnos.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    large=$large
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The sort.seqs_ command puts sequences from a fasta, name, group, quality, flow or taxonomy file in the same order.
You can provide an accnos file to indicate the order you want, otherwise mothur will use the order of the first file it reads.

.. _sort.seqs: https://www.mothur.org/wiki/Sort.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta" ;
                            gal:help "format must be fasta" ;
                            gal:label "fasta - sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:help "format must be mothur.seq.taxonomy" ;
                            gal:label "taxonomy - taxonomy reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "tax_in" ],
                        [ gal:format "mothur.names" ;
                            gal:help "format must be mothur.names" ;
                            gal:label "names - name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "accnos" ],
                        [ gal:format "qual454" ;
                            gal:help "format must be qual454" ;
                            gal:label "qfile - sequence quality" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "qfile_in" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "large - Datasets are large and may not fit in RAM" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "large" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "format must be mothur.count_table (generated by count.seqs)" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "format must be mothur.sff.flow" ;
                            gal:label "flow - sff flowgram" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "flow_in" ],
                        [ gal:format "mothur.groups" ;
                            gal:help "format must be mothur.groups" ;
                            gal:label "groups - sequence groupings" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "tax_in" ;
                            gal:format_source "tax_in" ;
                            gal:from_work_dir "tax_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "name_in" ;
                            gal:format_source "name_in" ;
                            gal:from_work_dir "name_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.name" ;
                            dc:title "name_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "group_in" ;
                            gal:format_source "group_in" ;
                            gal:from_work_dir "group_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.group" ;
                            dc:title "group_out" ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.qfile" ;
                            dc:title "qfile_out" ],
                        [ gal:filter "flow_in" ;
                            gal:format_source "flow_in" ;
                            gal:from_work_dir "flow_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.flow" ;
                            dc:title "flow_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "put sequences in different files in the same order" ;
            dc:identifier "mothur_sort_seqs" ;
            dc:title "Sort.seqs",
                "sort.seqs" ;
            schema:sku 15 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'cooccurrence(
    shared=otu.dat,
    metric=$metric,
    matrixmodel=$matrixmodel,
    iters=$iters
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The cooccurrence_ command variance calculates four metrics and tests their significance to assess whether presence-absence patterns are different than what one would expect by chance.   The input is a shared_ file.  The output can be filtered by groups and labels.



**metric**

The metric parameter options are **cscore**, **checker**, **combo** and **vratio**. Default=cscore. The cscore or checkerboard score [1] is a metric that measures species segregation. It is the mean number of checkerboard units per species pair. The checker metric [2] counts the number of species pairs forming a perfect checkerboard. The combo metric [3] is the number of unique species pairs. The vratio or variance ratio [4] is a measure of the species association calculated by the ratio of the variance in total species number to the sum of the variances of the species.  ::

	[1] Stone, L., and A. Roberts. 1990. The checkerboard score and species distributions. Ocelogia. 85:74-79.
	[2] Diamond, J. M. 1975. Assembly of species communities. Pages 342-444 in M. L. Cody and J. M. Diamond, editors. Ecology and evolution of communities. Harvard University Press, Cambridge, Massachusetts, USA.
	[3] Pielou, D. P., and E. C. Pielou. 1968 Association among species of infrequent occurrence: the insect and spider fauna of Polypours betulinus (Bulliard) Fries. Journal of Theoretical Biology 21:202-216.
	[4] Schluter, D. 1984. A variance test for detecting species associations, with some example applications. Ecology 65:998-1005.
	[5] Gotelli, Nicholas J. 2000. NULL MODEL ANALYSIS OF SPECIES CO-OCCURRENCE PATTERNS. Ecology 81:2606-2621.



**matrixmodel**

The matrixmodel parameter allows you to select the model you would like to use. Options are sim1, sim2, sim3, sim4, sim5, sim6, sim7, sim8 and sim9. Default=sim2.

Each sim implements a different algorithm for generating null matrices with constraints on the rows (species) and columns (sites).::
 ===================== ====================== ======================= ======================
  Rows                  Columns equiprobable   Columns proportional    Column totals fixed
 ===================== ====================== ======================= ======================
  Rows equiprobable     sim1                   sim6                    sim3
  Rows proportional     sim7                   sim8                    sim5
  Row totals fixed      sim2                   sim4                    sim9
 ===================== ====================== ======================= ======================

Equiprobable rows or columns means that each row, column or both is not dependent on the original co-occurrence matrix. Each species or site has an equal change of occurring in the null matrix.
Proportional rows or columns means that the proportion of occurrences in rows, columns or both in the original co-occurrence matrix are preserved but the totals may differ. Each species or site's chances of occurring are proportional to their occurrence in the original co-occurrence matrix.
Fixed row or column totals preserves the total number of occurrences in rows, columns or both in the original co-occurrence matrix. Sim9 is a special case that is not probabilistic. Since both the row and column totals are preserved the only way to randomize the matrix is with a checkerboard swap. When a checkerboard appears in the matrix the 1s and 0s are swapped to their mirror image to preserve the species and site totals.

Checkerboard::

  10
  01

Swap::

  01
  10


suggested metric/matrixmodel combinations::
    ========  ========  ======== ========
     cscore    checker   combo    vratio
    ========  ========  ======== ========
     sim9      sim9      sim9     sim2
     sim2      sim2      sim2     sim4
     -         -         sim4     sim8
     -         -         sim8     -
    ========  ========  ======== ========


Careful readers will note that none of the suggested matrixmodels have equiprobable rows (species). This is because tests of co-occurrence are quite sensitive to the frequency of species occurrence. As such, rowtotals should be maintained or at least kept proportional in the null models. Sim9 is well suited to co-occurrence matrices that have an "island list" structure. Island lists are often found in classical ecology datasets that contain species with well defined habitat patches and are rarely degenerate (matrices that contain empty rows or columns). Sim2 is well suited for co-occurrence matrices that have a "sample list" structure. Sample list structured data are found where species have relatively homogeneous habitats and degenerate matrices are not uncommon. In these matrices species will often occur in only one site.
The default values of cscore and sim2 have been selected because the c-score is not very sensitive to noise in the data and when used with sim9 or sim2 is not particularly prone to false positives. Sim2 has been chosen because of the prevalence of degenerate matrices. These are just guidelines, however, be sure to select a metric and matrix model that is best suited to the type of data you are analyzing.
It should be noted that sim9 cannot be used with vratio because in sim9 both the column and row totals are maintained, hence there will be no variance.
Please see [5] for more details on metric/null model selection.


.. _shared: https://www.mothur.org/wiki/Shared_file
.. _cooccurrence: https://www.mothur.org/wiki/Cooccurrence

v1.26.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "See the notes below on choosing a metric/matrixmodel combination" ;
                            gal:label "matrixmodel - the scoring matrix" ;
                            gal:option [ gal:value "sim5" ;
                                    dc:description "sim5" ],
                                [ gal:value "sim4" ;
                                    dc:description "sim4" ],
                                [ gal:value "sim1" ;
                                    dc:description "sim1" ],
                                [ gal:value "sim9" ;
                                    dc:description "sim9" ],
                                [ gal:selected "true" ;
                                    gal:value "sim2" ;
                                    dc:description "sim2" ],
                                [ gal:value "sim6" ;
                                    dc:description "sim6" ],
                                [ gal:value "sim8" ;
                                    dc:description "sim8" ],
                                [ gal:value "sim3" ;
                                    dc:description "sim3" ],
                                [ gal:value "sim7" ;
                                    dc:description "sim7" ] ;
                            gal:type "select" ;
                            dc:title "matrixmodel" ],
                        [ gal:label "metric - test metric for scoring" ;
                            gal:option [ gal:value "checker" ;
                                    dc:description "checker - species segregation" ],
                                [ gal:selected "true" ;
                                    gal:value "cscore" ;
                                    dc:description "cscore - species segregation" ],
                                [ gal:value "vratio" ;
                                    dc:description "vratio - variance" ],
                                [ gal:value "combo" ;
                                    dc:description "combo - unique species pairs" ] ;
                            gal:type "select" ;
                            dc:title "metric" ],
                        [ gal:help "By default all are included if no selection is made." ;
                            gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "By default all are included if no selection is made." ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "1" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: cooccurence.summary" ;
                            dc:title "out_summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "tests whether presence-absence patterns differ from chance" ;
            dc:identifier "mothur_cooccurrence" ;
            dc:title "Cooccurrence",
                "cooccurrence" ;
            schema:sku 95 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$taxonomy' taxonomy.dat &&

echo 'classify.tree(
    tree=tree.dat,
    #if $name
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    taxonomy=taxonomy.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The classify.tree_ command is used to get a consensus taxonomy for each node on a tree.
Input is a taxonomy_ and a tree_ with optional name_ or group_ reference.
The output is a tree_ and a summary..

  TreeNode  NumRep  Taxonomy
  243   2   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  244   3   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  245   4   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  ...


.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _tree: http://evolution.genetics.washington.edu/phylip/newicktree.html
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _classify.tree: https://www.mothur.org/wiki/Classify.tree

v.1.25.0: Trivial upgrade to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "cutoff" ;
                            gal:help "The default is 51, meaning 51%. Cutoff cannot be below 51" ;
                            gal:label "cutoff - consensus confidence threshold" ;
                            gal:max "100" ;
                            gal:min "51" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "51" ],
                        [ gal:argument "taxonomy" ;
                            gal:format "mothur.ref.taxonomy" ;
                            gal:label "taxonomy - Taxonomy to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "tree" ;
                            gal:format "txt" ;
                            gal:label "tree - Sequences to filter" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Group reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "tree.*taxonomy.tre" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy.tre" ;
                            dc:title "out_tree" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree.*taxonomy.summary" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy.summary" ;
                            dc:title "summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get a consensus taxonomy for each node on a tree" ;
            dc:identifier "mothur_classify_tree" ;
            dc:title "Classify.tree",
                "classify.tree" ;
            schema:sku 127 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 
#import re

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#for $i in $inputs:
    ln -s '$i.fasta' fasta${inputs.index($i)}.dat &&
#end for
ln -s '$hard' hard.dat &&

echo 'filter.seqs(
    fasta=fasta.dat#for $i in $inputs#-fasta${inputs.index($i)}.dat#end for#,
    vertical=$vertical,
    #if $trump:
        trump=$trump,
    #end if
    soft=$soft,
    #if $hard:
        hard=hard.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## rename collection files for more transparent element naming
#set $identifier=re.sub('[^\\w\\-\\s\\.]', '_', str($fasta.element_identifier))
mv fasta.filter.fasta '${identifier}.filter.fasta'
#for i in $inputs:
    #set $identifier=re.sub('[^\\w\\-\\s]', '_', str($i.fasta.element_identifier))
    && mv fasta${inputs.index($i)}.filter.fasta '${identifier}.filter.fasta'
#end for
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The filter.seqs_ command removes columns from alignments based on a criteria defined by the user. For example, alignments
generated against reference alignments (e.g. from RDP, SILVA, or greengenes) often have columns where every character is
either a '.' or a '-'. These columns are not included in calculating distances because they have no information in them.
By removing these columns, the calculation of a large number of distances is accelerated. Also, people also like to mask
their sequences to remove variable regions using a soft or hard mask (e.g. Lane's mask). This type of masking is only
encouraged for deep-level phylogenetic analysis, not fine level analysis such as that needed with calculating OTUs.

.. _filter.seqs: https://www.mothur.org/wiki/Filter.seqs

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "Removes any column where the dominant base (i.e. A, T, G, C, or U) does not occur in at least a designated percentage of sequences" ;
                            gal:label "soft - percentage required to retain column. (0-100)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "soft" ],
                        [ gal:format "mothur.align" ;
                            gal:label "fasta - Alignment Fasta" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "Ignore any column that only contains gap characters (i.e. '-' or '.')" ;
                            gal:label "vertical - Vertical column" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "vertical" ],
                        [ gal:help "Remove a column if the trump character is found at that position in any sequence of the alignment" ;
                            gal:label "trump - Trump character" ;
                            gal:option [ gal:value "-" ;
                                    dc:description "-" ],
                                [ gal:value "N" ;
                                    dc:description "N" ],
                                [ gal:value "." ;
                                    dc:description "." ],
                                [ gal:value "" ;
                                    dc:description "Off" ] ;
                            gal:type "select" ;
                            dc:title "trump" ],
                        [ gal:format "mothur.filter" ;
                            gal:help "A file should only contain one line consisting of 0's and 1's" ;
                            gal:label "hard - Hard Column Filter" ;
                            gal:optional "True" ;
                            gal:type "data" ;
                            dc:title "hard" ] ;
                    gal:repeat [ gal:param [ gal:format "mothur.align" ;
                                    gal:label "fasta - Alignment Fasta" ;
                                    gal:type "data" ;
                                    dc:title "fasta" ] ;
                            gal:title "Additional Alignment File" ;
                            dc:title "inputs" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal: " only output collection if multiple outputs" ;
                            gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern "(?P<designation>.*)\\.filter\\.fasta" ] ;
                            gal:filter "inputs" ;
                            gal:label "${tool.name} on ${on_string}: filtered fastas" ;
                            gal:type "list" ;
                            dc:title "filteredfastas" ] ;
                    gal:data [ gal:filter "not inputs" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "*.filter.fasta" ;
                            gal:label "${tool.name} on ${on_string}: filtered fasta" ;
                            dc:title "filteredfasta" ],
                        [ gal:format "mothur.filter" ;
                            gal:from_work_dir "fasta*.filter" ;
                            gal:label "${tool.name} on ${on_string}: filter" ;
                            dc:title "out_filter" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "removes columns from alignments" ;
            dc:identifier "mothur_filter_seqs" ;
            dc:title "Filter.seqs",
                "filter.seqs" ;
            schema:sku 119 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

#import re

#set fastas = ''
#set groups = ''
#set count = 0

#if $method.how == 'collection':
    #for $i in $method.fasta_collection:
        #set $identifier=re.sub('[^\\w_]', '_', str($i.element_identifier))
        ln -s '$i' 'fasta_${identifier}.dat' &&
        #set fastas+='fasta_'+$identifier+'.dat-'
        #set groups+=$identifier+'-'
    #end for
#else
    #for $i in $method.inputs:
        ln -s '$i.fasta' fasta_${count}.dat &&
        #set fastas+='fasta_'+str($count)+'.dat-'
        #set groups+=str($i.group)+'-'
        #set count+=1
    #end for
#end if

echo 'make.group(
    fasta=${ str($fastas).rstrip('-') },
    groups=${ str($groups).rstrip('-') }
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.group_ command reads a fasta file or series of fasta files and creates a group_ file.

.. _group: https://www.mothur.org/wiki/Group_file
.. _make.group: https://www.mothur.org/wiki/Make.group

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Method to create group file" ;
                                    gal:option [ gal:value "collection" ;
                                            dc:description " Automatically from collection " ],
                                        [ gal:value "manually" ;
                                            dc:description " Manually specify fasta files and group names" ] ;
                                    gal:type "select" ;
                                    dc:title "how" ] ;
                            gal:when [ gal:repeat [ gal:param [ gal:format "fasta" ;
                                                    gal:label "fasta - Fasta to group" ;
                                                    gal:type "data" ;
                                                    dc:title "fasta" ],
                                                [ gal:label "group - Group name" ;
                                                    gal:type "text" ;
                                                    dc:title "group" ] ;
                                            gal:title "Additional" ;
                                            dc:title "inputs" ] ;
                                    gal:value "manually" ],
                                [ gal:param [ gal:collection_type "list" ;
                                            gal:format "fasta" ;
                                            gal:help "group names will be derived from the dataset names of the collection elements, please make sure these are meaningful names" ;
                                            gal:label "Collection with fasta files to group" ;
                                            gal:type "data_collection" ;
                                            dc:title "fasta_collection" ] ;
                                    gal:value "collection" ] ;
                            dc:title "method" ] ;
                    gal:label "Output logfile?" ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.groups" ;
                            gal:from_work_dir "*groups" ;
                            gal:label "${tool.name} on ${on_string}: group" ;
                            dc:title "output" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Make a group file" ;
            dc:identifier "mothur_make_group" ;
            dc:title "Make.group",
                "make.group" ;
            schema:sku 122 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$metadata' metadata.dat &&

echo 'otu.association(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $method:
        ,method=$method
    #end if
    #if $metadata:
        ,metadata=metadata.dat
    #end if
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The otu.association_ command calculates the correlation coefficient for the otus in a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _otu.association: https://www.mothur.org/wiki/Otu.association

v.1.25.0: Updated to mothur 1.33, added cutoff option

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "By default all labels are used" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "tabular" ;
                            gal:label "metadata - find the association between the otus and the metadata." ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "metadata" ],
                        [ gal:label "cutoff - set a pvalue at which the otu will be reported" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ;
                            dc:title "cutoff" ],
                        [ gal:label "method - Normalization method" ;
                            gal:option [ gal:value "spearman" ;
                                    dc:description "spearman" ],
                                [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ] ;
                            gal:type "select" ;
                            dc:title "method" ],
                        [ gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.otu.corr" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otu\\.corr" ] ;
                            gal:label "${tool.name} on ${on_string}: correlation coefficient files per OTU label" ;
                            gal:type "list" ;
                            dc:title "correlations" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Calculate the correlation coefficient for the otus" ;
            dc:identifier "mothur_otu_association" ;
            dc:title "Otu.association",
                "otu.association" ;
            schema:sku 113 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'summary.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
        groupmode=$groupmode
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $calc:
        ,calc=${ str($calc).replace(",","-") }
    #end if
    #if $abund:
        ,abund=$abund
    #end if
    #if $size:
        ,size=$size
    #end if
    #if $subsample.use == 'yes':
        #if $subsample.subsample:
            ,subsample=$subsample.subsample
        #else
            ,subsample=T
        #end if
        #if $subsample.iters:
            ,iters=$subsample.iters
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
#if $subsample.use == 'yes' and not ($otu.extension == 'mothur.shared' and not $groupmode):
    && mv otu.*ave[_-]std.summary otu.ave-std
#end if
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The summary.single_ command produce a summary file that has the calculator value for each line in the OTU data and for all possible comparisons between the different groups in the group_ file.  This can be useful if you aren't interested in generating collector's or rarefaction curves for your multi-sample data analysis. It would be worth your while, however, to look at the collector's curves for the calculators you are interested in to determine how sensitive the values are to sampling. If the values are not sensitive to sampling, then you can trust the values. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _group: https://www.mothur.org/wiki/Group_file
.. _summary.single: https://www.mothur.org/wiki/Summary.single

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "produce subsample distance matrices" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "If using shared input: may be left blank to use the size of your smallest group" ;
                                            gal:label "subsample - size of the sample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsample" ],
                                        [ gal:label "iters - Number of times to run the subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "iters" ] ;
                                    gal:value "yes" ] ;
                            dc:title "subsample" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "size - enter the size of the sample, if not set mothur will use the size of your smallest group" ;
                            gal:min "1" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "size" ],
                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "abund" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "boneh" ;
                                    dc:description "boneh - Estimator Boneh's estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:value "shen" ;
                                    dc:description "shen - Estimator Shen's estimator" ],
                                [ gal:value "goodscoverage" ;
                                    dc:description "goodscoverage - Community diversity the Good's estimate of sampling coverage " ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:selected "true" ;
                                    gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "qstat" ;
                                    dc:description "qstat - Community diversity the Q statistic" ],
                                [ gal:value "solow" ;
                                    dc:description "solow - Estimator Solow's estimator" ],
                                [ gal:value "efron" ;
                                    dc:description "efron - Estimator Efron's estimator" ],
                                [ gal:value "bstick" ;
                                    dc:description "bstick - Statistical distribution tests whether observed data follow the broken stick distribution" ],
                                [ gal:selected "true" ;
                                    gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ],
                                [ gal:selected "true" ;
                                    gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "logseries" ;
                                    dc:description "logseries - Statistical distribution tests whether observed data follow the log series distribution" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:value "bergerparker" ;
                                    dc:description "bergerparker - Community diversity the Berger-Parker index" ],
                                [ gal:value "geometric" ;
                                    dc:description "geometric - Statistical distribution tests whether observed data follow the geometric series distribution" ] ;
                            gal:type "select" ;
                            dc:title "calc" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "If false, create a summary file per group." ;
                            gal:label "groupmode - Collate shared summary results in one file" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "groupmode" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.summary" ] ;
                            gal:filter "otu.extension == 'mothur.shared' and not groupmode" ;
                            gal:label "${tool.name} on ${on_string}: summaries per group" ;
                            gal:type "list" ;
                            dc:title "summaryfiles" ] ;
                    gal:data [ gal:filter "groupmode" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ],
                        [ gal:filter "subsample['use'] and not (otu.extension == 'mothur.shared' and not groupmode)" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.ave-std" ;
                            gal:label "${tool.name} on ${on_string}: ave-std.summary" ;
                            dc:title "subsample_summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.2" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Summary of calculator values for OTUs" ;
            dc:identifier "mothur_summary_single" ;
            dc:title "Summary.single",
                "summary.single" ;
            schema:sku 82 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$group' group.dat &&
#if $groupnames.source == "accnos":
    ln -s '$groupnames.accnos' groupnames.accnos.dat &&
#end if

echo 'count.groups(
    #if $group.is_of_type("mothur.shared"):
        shared=group.dat
    #elif $group.is_of_type("mothur.count_table"):
        count=group.dat
    #else:
        group=group.dat
    #end if
    #if $groupnames.source == "groups":
        #if $groupnames.groups:
            ,groups=${ str($groupnames.groups).replace(",","-") }
        #end if
    #elif $groupnames.source == "accnos":
        #if $groupnames.accnos:
            ,accnos=groupnames.accnos.dat
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant tool output from logfile to file
cat mothur.*.logfile
| head -n-7
| sed '1,30d'
> '$grp_count'
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The count.groups_ command counts sequences from a specific group or set of groups from a group_ or shared_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _count.groups: https://www.mothur.org/wiki/Count.groups

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Filter group names" ;
                                    gal:option [ gal:value "none" ;
                                            dc:description "Report on All Groups" ],
                                        [ gal:value "groups" ;
                                            dc:description "A List of Group Names" ],
                                        [ gal:value "accnos" ;
                                            dc:description "A History Group Name Accnos Dataset" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:value "none" ],
                                [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "accnos - Group Names from your history" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "accnos" ] ;
                                    gal:value "accnos" ],
                                [ gal:param [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ] ;
                                    gal:value "groups" ] ;
                            dc:title "groupnames" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.groups,mothur.shared,mothur.count_table" ;
                            gal:label "group, shared, or count_table - Group file for sequence count" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:label "${tool.name} on ${on_string}: group.count" ;
                            dc:title "grp_count" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "group*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "counts the number of sequences represented by a specific group or set of groups" ;
            dc:identifier "mothur_count_groups" ;
            dc:title "Count.groups",
                "count.groups" ;
            schema:sku 16 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&
ln -s '$name' name.dat &&

echo 'parsimony(
    tree=tree.dat,
    iters=$iters,
    group=group.dat,
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The parsimony_ command implements the parsimony method (aka P-test), which was previously implemented in TreeClimber
and is also available in MacClade and on the UniFrac website. The parsimony method is a generic test that describes
whether two or more communities have the same structure. The significance of the test statistic can only indicate the
probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _parsimony: https://www.mothur.org/wiki/Parsimony

v.1.20.0: Added count parameter

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "iters" ;
                            gal:label "iters - Number of bootstrap iterations to try (default 1000)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:argument "groups" ;
                            gal:help "By default all are included if no selection is made." ;
                            gal:label "groups - Groups to display" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ],
                        [ gal:argument "tree" ;
                            gal:format "mothur.tre" ;
                            gal:label "tree - Phylogenetic Tree" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.parsimony" ;
                            gal:label "${tool.name} on ${on_string}: parsimony" ;
                            dc:title "parsimony" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.psummary" ;
                            gal:label "${tool.name} on ${on_string}: psummary" ;
                            dc:title "psummary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Describes whether two or more communities have the same structure" ;
            dc:identifier "mothur_parsimony" ;
            dc:title "Parsimony",
                "parsimony" ;
            schema:sku 51 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$count' count.dat &&
ln -s '$otu' otu.dat &&

echo 'get.rabund(
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #end if
    sorted=$sorted
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.rabund_ command generates an rabund_ file from a list_ or sabund_ file.

.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _list: https://www.mothur.org/wiki/List_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _get.rabund: https://www.mothur.org/wiki/Get.rabund

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list,mothur.sabund" ;
                            gal:label "list,sabund - List or Sabund" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "(all used if none are selected)" ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "By default the data in the rabund file the same order as the OTUs in input, select to sort by abundance." ;
                            gal:label "sorted - sort by abundance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "sorted" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "otu*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            dc:title "rabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get rabund from a otu list or sabund" ;
            dc:identifier "mothur_get_rabund" ;
            dc:title "Get.rabund",
                "get.rabund" ;
            schema:sku 13 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

ln -s '$biom' input.biom &&

echo 'biom.info(
    biom=input.biom,
    #if str($label) != '':
        label=$label,
    #end if
    basis=$basis,
    output=$output,
    relabund=$relabund,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The biom.info command reads a biom file creates a shared file. If your biom file contains metadata mothur will also
create taxonomy or constaxonomy along with tax.summary files.

    """ ;
            gal:inputs [ gal: " TODO: read label options from biom file " ;
                    gal:argument "output",
                        "printlevel" ;
                    gal:checked "false" ;
                    gal:help "The detail format outputs the totals at each level, where as the simple format outputs the highest level",
                        "specify taxlevel of your *tax.summary file to print to. Options are 1 to the maz level in the file. The default is -1, meaning max level" ;
                    gal:label "Output logfile?",
                        "Print level",
                        "Tax summary output type" ;
                    gal:min "-1" ;
                    gal:option [ gal:value "detail" ;
                            dc:description "detail" ],
                        [ gal:selected "true" ;
                            gal:value "simple" ;
                            dc:description "simple" ] ;
                    gal:param [ gal:argument "relabund" ;
                            gal:falsevalue "F" ;
                            gal:help "use relative abundances rather than raw abundances for the tax.summary file" ;
                            gal:label "Relative abundance values" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:argument "label" ;
                            gal:help "Enter a distance label to be used in the shared file created from your biom file (e.g. 0.03)" ;
                            gal:label "label - OTU Labels" ;
                            gal:type "text" ;
                            gal:value "userLabel" ],
                        [ gal:argument "basis" ;
                            gal:help "indicate what you want the summary file to represent, options are otu and sequence. Default is otu.             For example consider the following basis=sequence could give Clostridiales 3 105, where 105 is the total             number of sequences whose otu classified to Clostridiales. Now for basis=otu could give Clostridiales 3 7,             where 7 is the number of otus that classified to Clostridiales." ;
                            gal:label "Summary type" ;
                            gal:option [ gal:value "sequence" ;
                                    dc:description "Sequence" ],
                                [ gal:selected "true" ;
                                    gal:value "otu" ;
                                    dc:description "OTU" ] ;
                            gal:type "select" ],
                        [ gal:argument "biom" ;
                            gal:format "biom1" ;
                            gal:label "Biom input dataset" ;
                            gal:type "data" ] ;
                    gal:type "boolean",
                        "integer",
                        "select" ;
                    gal:value "-1" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.cons.taxonomy" ;
                            gal:from_work_dir "input*.cons.taxonomy" ;
                            gal:label "${tool.name} on ${on_string}: cons.taxonomy" ;
                            dc:title "taxonomy" ],
                        [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "input*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            dc:title "tax.summary" ],
                        [ gal:format "mothur.shared" ;
                            gal:from_work_dir "input*.shared" ;
                            gal:label "${tool.name} on ${on_string}: shared" ;
                            dc:title "shared" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "create shared and taxonomy files from biom" ;
            dc:identifier "mothur_biom_info" ;
            dc:title "Biom.info",
                "biom.info" ;
            schema:sku 108 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## enable mothur to find blast
ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.template' alignment.template.dat &&
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$count' count.dat &&
ln -s '$name' name.dat &&

echo 'classify.seqs(
    fasta=fasta.dat,
    reference=alignment.template.dat,
    taxonomy=tax.taxonomy.dat,
    method=$classify.method,
    #if $classify.method == "wang":
        ksize=$classify.ksize,
        iters=$classify.iters,
        cutoff=$classify.cutoff,
        probs=$classify.probs,
    #elif $classify.method == "knn":
        numwanted=$classify.numwanted,
        search=$classify.search.algorithm,
        #if $classify.search.algorithm == "kmer":
            ksize=$classify.search.ksize,
        #elif $classify.search.algorithm == "blast":
            match=$classify.search.match,
            mismatch=$classify.search.mismatch,
            gapopen=$classify.search.gapopen,
            gapextend=$classify.search.gapextend,
        #end if
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $name:
        name=name.dat,
    #end if
    relabund=$relabund,
    output=$output,
    printlevel=$printlevel,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The classify.seqs_ command assigns sequences to chosen taxonomy outline.

.. _classify.seqs: https://www.mothur.org/wiki/Classify.seqs


v1.22.0: Updated for Mothur 1.33. Added count parameter (1.28), added relabund parameter (1.33), bayesian term changed to wang.

    """ ;
            gal:inputs [ gal:argument "output",
                        "printlevel" ;
                    gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Taxonomy from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source2" ] ;
                            gal:when [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy reference" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy reference" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ] ;
                            dc:title "tax" ],
                        [ gal:param [ gal:argument "method" ;
                                    gal:label "method - Select a classification method" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "wang" ;
                                            dc:description "Wang (default)" ],
                                        [ gal:value "knn" ;
                                            dc:description "K-Nearest Neighbor (knn)" ] ;
                                    gal:type "select" ] ;
                            gal:when [ gal:param [ gal:argument "ksize" ;
                                            gal:label "ksize - kmer length" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "8" ],
                                        [ gal:argument "cutoff" ;
                                            gal:label "cutoff - specify a bootstrap confidence threshold for your taxonomy" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "80" ],
                                        [ gal:argument "iters" ;
                                            gal:label "iters - iterations to do when calculating the bootstrap confidence score" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "100" ],
                                        [ gal:argument "probs" ;
                                            gal:checked "true" ;
                                            gal:falsevalue "false" ;
                                            gal:label "probs - Show probabilities" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ] ;
                                    gal:value "wang" ],
                                [ gal:conditional [ gal:param [ gal:argument "search" ;
                                                    gal:help "" ;
                                                    gal:label "algorithm -" ;
                                                    gal:option [ gal:selected "true" ;
                                                            gal:value "kmer" ;
                                                            dc:description "Kmer (default)" ],
                                                        [ gal:value "blast" ;
                                                            dc:description "BLAST" ],
                                                        [ gal:value "suffix" ;
                                                            dc:description "Suffix Tree" ],
                                                        [ gal:value "distance" ;
                                                            dc:description "Distance" ] ;
                                                    gal:type "select" ;
                                                    dc:title "algorithm" ] ;
                                            gal:when [ gal:value "suffix" ],
                                                [ gal:param [ gal:argument "ksize" ;
                                                            gal:label "ksize - kmer length" ;
                                                            gal:min "1" ;
                                                            gal:type "integer" ;
                                                            gal:value "8" ] ;
                                                    gal:value "kmer" ],
                                                [ gal:param [ gal:argument "gapopen" ;
                                                            gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                                            gal:type "integer" ;
                                                            gal:value "-2" ],
                                                        [ gal:argument "gapextend" ;
                                                            gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                                            gal:type "integer" ;
                                                            gal:value "-1" ],
                                                        [ gal:argument "match" ;
                                                            gal:label "match - Pairwise alignment reward for a match" ;
                                                            gal:type "integer" ;
                                                            gal:value "1" ],
                                                        [ gal:argument "mismatch" ;
                                                            gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                                            gal:type "integer" ;
                                                            gal:value "-1" ] ;
                                                    gal:value "blast" ],
                                                [ gal:value "distance" ] ;
                                            dc:title "search" ] ;
                                    gal:param [ gal:argument "numwanted" ;
                                            gal:label "numwanted - the number of sequence matches you want with the knn method" ;
                                            gal:type "integer" ;
                                            gal:value "10" ] ;
                                    gal:value "knn" ] ;
                            dc:title "classify" ],
                        [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:help "" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:title "template" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ;
                                            dc:title "template" ] ;
                                    gal:value "hist" ] ;
                            dc:title "alignment" ] ;
                    gal:help "The detail format outputs the totals at each level, where as the simple format outputs the highest level",
                        "specify taxlevel of your *tax.summary file to print to. Options are 1 to the maz level in the file. The default is -1, meaning max level" ;
                    gal:label "Output logfile?",
                        "Print level",
                        "Tax summary output type" ;
                    gal:min "-1" ;
                    gal:option [ gal:value "detail" ;
                            dc:description "detail" ],
                        [ gal:selected "true" ;
                            gal:value "simple" ;
                            dc:description "simple" ] ;
                    gal:param [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "names file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "relabund" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "relabund - allows you to indicate that you want the summary files to be relative abundances rather than raw abundances" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean",
                        "integer",
                        "select" ;
                    gal:value "-1" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "fasta*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            dc:title "tax_summary" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tax.taxonomy*.tree.sum" ;
                            gal:label "${tool.name} on ${on_string}: tree.sum" ;
                            dc:title "tree_sum" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "fasta*.taxonomy" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy" ;
                            dc:title "taxonomy_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to taxonomy" ;
            dc:identifier "mothur_classify_seqs" ;
            dc:title "Classify.seqs",
                "classify.seqs" ;
            schema:sku 46 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$count' count.dat &&

echo 'get.sabund(
    #if $label:
       label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The get.sabund_ command generates an sabund_ file from a list_ or rabund_ file.

.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _get.sabund: https://www.mothur.org/wiki/Get.sabund

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list,mothur.rabund" ;
                            gal:label "list,rabund - List or Rabund" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "(all used if none are selected)" ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "If your list file contains only the unique sequence names because you ran cluster with a count file, be sure to include the count file." ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "otu*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            dc:title "sabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Get sabund from a otu list or rabund" ;
            dc:identifier "mothur_get_sabund" ;
            dc:title "Get.sabund",
                "get.sabund" ;
            schema:sku 93 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$group' group.dat &&

echo 'classify.otu(
    list=otu.dat,
    taxonomy=tax.taxonomy.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $group:
        group=group.dat,
    #end if
    basis=$basis,
    probs=$probs,
    persample=$persample,
    cutoff=$cutoff,
    relabund=$relabund,
    output=$output,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The classify.otu_ command assigns sequences to chosen taxonomy outline.

The basis parameter allows you indicate what you want the summary file to represent, options are otu and sequence. Default is otu. For example consider the following basis=sequence could give Clostridiales 3 105 16 43 46, where 105 is the total number of sequences whose otu classified to Clostridiales. 16 is the number of sequences in the otus from groupA, 43 is the number of sequences in the otus from groupB, and 46 is the number of sequences in the otus from groupC. Now for basis=otu could give Clostridiales 3 7 6 1 2, where 7 is the number of otus that classified to Clostridiales. 6 is the number of otus containing sequences from groupA, 1 is the number of otus containing sequences from groupB, and 2 is the number of otus containing sequences from groupC.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu

v1.21.0: Updated to use Mothur 1.33. Added count parameter (1.28.0) and persample parameter (1.29.0)

    """ ;
            gal:inputs [ gal:argument "output",
                        "printlevel" ;
                    gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ] ;
                            dc:title "tax" ] ;
                    gal:help "The detail format outputs the totals at each level, where as the simple format outputs the highest level",
                        "specify taxlevel of your *tax.summary file to print to. Options are 1 to the maz level in the file. The default is -1, meaning max level" ;
                    gal:label "Output logfile?",
                        "Print level",
                        "Tax summary output type" ;
                    gal:min "-1" ;
                    gal:option [ gal:selected "true" ;
                            gal:value "simple" ;
                            dc:description "simple" ],
                        [ gal:value "detail" ;
                            dc:description "detail" ] ;
                    gal:param [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count - used to represent the number of duplicate sequences for a given representative sequence" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - taxonomy sequence names" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "cutoff" ;
                            gal:label "cutoff - Confindence percentage cutoff between 1 and 100" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "60" ],
                        [ gal:argument "persample" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "default false" ;
                            gal:label "persample - allows you to find a consensus taxonomy for each group" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "probs" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "probs - Show probabilities" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "relabund" ;
                            gal:checked "false" ;
                            gal:falsevalue "F" ;
                            gal:help "use relative abundances rather than raw abundances for the tax.summary file" ;
                            gal:label "Relative abundance values?" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:argument "label" ;
                            gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "basis" ;
                            gal:help "" ;
                            gal:label "basis - Summary file gives numbers of" ;
                            gal:option [ gal:value "otu" ;
                                    dc:description "OTU" ],
                                [ gal:value "sequence" ;
                                    dc:description "sequence" ] ;
                            gal:type "select" ] ;
                    gal:type "boolean",
                        "integer",
                        "select" ;
                    gal:value "-1" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.cons.taxonomy" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.taxonomy" ] ;
                            gal:label "${tool.name} on ${on_string}: taxonomy" ;
                            gal:type "list" ;
                            dc:title "taxonomies" ],
                        [ gal:discover_datasets [ gal:format "mothur.tax.summary" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.tax\\.summary" ] ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            gal:type "list" ;
                            dc:title "taxsummaries" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to taxonomy" ;
            dc:identifier "mothur_classify_otu" ;
            dc:title "Classify.otu",
                "classify.otu" ;
            schema:sku 25 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$dist2' dist2.dat &&

echo 'mantel(
    phylip1=dist.dat,
    phylip2=dist2.dat,
    method=$method,
    iters=$iters
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The mantel_ command calculates the Mantel correlation coefficient between two matrices_.

.. _matrices: //www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _mantel: https://www.mothur.org/wiki/Mantel

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "iters - Number of random configuration to try (default 1000)" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip2 - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist2" ],
                        [ gal:label "method - pearson, spearman, or kendall. Default: pearson" ;
                            gal:option [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ],
                                [ gal:value "spearman" ;
                                    dc:description "spearman" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "method" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.mantel" ;
                            gal:label "${tool.name} on ${on_string}: mantel" ;
                            dc:title "mantel" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Mantel correlation coefficient between two matrices." ;
            dc:identifier "mothur_mantel" ;
            dc:title "Mantel",
                "mantel" ;
            schema:sku 34 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'degap.seqs(
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """





**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The degap.seqs_ command reads a fasta file and outputs a fasta containing the sequences after all gap characters are removed.

.. _degap.seqs: https://www.mothur.org/wiki/Degap.seqs

v1.21.0: Updated to Mothur 1.33


    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Dataset" ;
                            gal:type "data" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.ng.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "out_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Remove gap characters from sequences" ;
            dc:identifier "mothur_degap_seqs" ;
            dc:title "Degap.seqs",
                "degap.seqs" ;
            schema:sku 44 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&
#if $input.source == 'list':
    ln -s '$input.group' input.group.dat &&
    ln -s '$input.count' input.count.dat &&
#end if

echo 'remove.rare(
    #if $input.otu.is_of_type("mothur.rabund"):
        rabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.sabund"):
        sabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.list"):
        list=input_otu.dat,
        #if $input.group:
            group=input.group.dat,
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.count:
            count=input.count.dat,
        #end if
    #elif $input.otu.is_of_type("mothur.shared"):
        shared=input_otu.dat,
        bygroup=$input.bygroup,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    nseqs=$nseqs
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.rare_ command reads one of the following file types: list_, rabund_, sabund_ or shared_ file. It outputs a new file after removing the rare otus.

.. _list: https://www.mothur.org/wiki/List_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _remove.rare: https://www.mothur.org/wiki/Remove.rare

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Input Format" ;
                                    gal:option [ gal:value "default" ;
                                            dc:description "rabund or sabund" ],
                                        [ gal:value "shared" ;
                                            dc:description "shared" ],
                                        [ gal:value "list" ;
                                            dc:description "list" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "mothur.list,mothur.rabund,mothur.sabund" ;
                                            gal:label "list,rabund,sabund - Otu dataset" ;
                                            gal:type "data" ;
                                            dc:title "otu" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ] ;
                                    gal:value "default" ],
                                [ gal:param [ gal:label "groups - Pick groups to analyze" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "bygroup - Remove any OTU that has nseqs or fewer sequences across all groups" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "bygroup" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - Otu dataset" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "shared" ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Groups" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "group" ],
                                        [ gal:format "mothur.count_table" ;
                                            gal:help "If you clustered with a count file, can only supply one of group or count table, not both" ;
                                            gal:label "count - Count Table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "count" ],
                                        [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:label "groups - Pick groups to analyze" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - Otu dataset" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "list" ] ;
                            dc:title "input" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "nseqs - Number of sequences cutoff for an otu to be deemed rare" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1" ;
                            dc:title "nseqs" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared per label" ;
                            gal:type "list" ;
                            dc:title "pick_shared" ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format_source "otu" ;
                            gal:from_work_dir "input_otu*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.${input.otu.ext}" ;
                            dc:title "pick_otu" ],
                        [ gal:filter "input['source'] == 'list'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "input.group*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            dc:title "pick_group" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Remove rare OTUs" ;
            dc:identifier "mothur_remove_rare" ;
            dc:title "Remove.rare",
                "remove.rare" ;
            schema:sku 76 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$group' group.dat &&

echo 'libshuff(
    phylip=dist.dat,
    group=group.dat,
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    sim=$sim,
    #if $form.form2 == "discrete":
        step=$form.step,
        #if $form.cutoff:
            cutoff=$form.cutoff,
        #end if
    #end if
    iters=$iters
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The libshuff_ method is a generic test that describes whether two or more communities have the same structure using the Cramer-von Mises test statistic. The significance of the test statistic indicates the probability that the communities have the same structure by chance. Because each pairwise comparison requires two significance tests, a correction for multiple comparisons (e.g. Bonferroni's correction) must be applied.

.. _libshuff: https://www.mothur.org/wiki/Libshuff

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "form - Select a Clustering Method" ;
                                    gal:option [ gal:value "discrete" ;
                                            dc:description "Discrete" ],
                                        [ gal:selected "true" ;
                                            gal:value "integral" ;
                                            dc:description "Integral" ] ;
                                    gal:type "select" ;
                                    dc:title "form2" ] ;
                            gal:when [ gal:value "integral" ],
                                [ gal:param [ gal:label "cutoff - Cutoff threshold - ignored if left empty" ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:optional "true" ;
                                            gal:type "float" ;
                                            gal:value "" ;
                                            dc:title "cutoff" ],
                                        [ gal:help "default value 0.10, smaller steps approach integral" ;
                                            gal:label "step - Step size - ignored if not > 0" ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:type "float" ;
                                            gal:value "0.10" ;
                                            dc:title "step" ] ;
                                    gal:value "discrete" ] ;
                            dc:title "form" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "sim" ],
                        [ gal:label "groups - Groups to condider" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:type "data" ;
                            dc:title "group" ],
                        [ gal:label "iters - Number of iterations to try (default 10000)" ;
                            gal:type "integer" ;
                            gal:value "10000" ;
                            dc:title "iters" ],
                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "dist" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.coverage" ;
                            gal:label "${tool.name} on ${on_string}: coverage" ;
                            dc:title "coverage" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Cramer-von Mises tests communities for the same structure" ;
            dc:identifier "mothur_libshuff" ;
            dc:title "Libshuff",
                "libshuff" ;
            schema:sku 102 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$count' count.dat &&

echo 'cluster.fragments(
    fasta=fasta.dat,
    diffs=$diffs,
    percent=$percent,
    #if $count:
        count=count.dat,
    #end if
    name=names.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The cluster.fragments_ command groups sequences that are part of a larger sequence.

.. _cluster.fragments: https://www.mothur.org/wiki/Cluster.fragments

v1.21: Updated to Mothur 1.33. Added count parameter.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:type "data" ],
                        [ gal:argument "diffs" ;
                            gal:label "diffs - Number of mismatched bases to allow between sequences in a group (default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "names" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "percent" ;
                            gal:help "The percent parameter allows you to set percentage of differences allowed, default=0. percent=2 means if the number of difference is less                than or equal to two percent of the length of the fragment, then cluster. You may use diffs and percent at the same time to say something like:                If the number or differences is greater than 1 or more than 2% of the fragment length, don't merge." ;
                            gal:label "percent - percentage of differences allowed ( between 1 and 100, default 0)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.fragclust.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "out_fasta" ],
                        [ gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.fragclust.names" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            dc:title "out_names" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description " Group sequences that are part of a larger sequence" ;
            dc:identifier "mothur_cluster_fragments" ;
            dc:title "Cluster.fragments",
                "cluster.fragments" ;
            schema:sku 12 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'chimera.perseus(
    fasta=fasta.dat,
    #if $name.is_of_type("mothur.names"):
        name=name.dat,
    #elif $name.is_of_type("mothur.count_table"):
        count=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    alpha=$alpha,
    beta=$beta,
    cutoff=$cutoff,
    dereplicate=$dereplicate,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.perseus_ command reads a fasta and name file, and outputs potentially chimeric sequences.

.. _chimera.perseus: https://www.mothur.org/wiki/Chimera.perseus

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "name" ;
                            gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name - Names or count_table" ;
                            gal:type "data" ],
                        [ gal:argument "beta" ;
                            gal:help "The default is 0.33" ;
                            gal:label "beta" ;
                            gal:type "float" ;
                            gal:value "0.33" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "alpha" ;
                            gal:help "The default is -5.54" ;
                            gal:label "alpha" ;
                            gal:type "float" ;
                            gal:value "-5.54" ],
                        [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric. default=false" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "cutoff" ;
                            gal:help "The default is 0.50" ;
                            gal:label "cutoff" ;
                            gal:type "float" ;
                            gal:value "0.50" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "fasta.perseus.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: perseus.chimeras" ;
                            dc:title "out_chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.perseus.accnos" ;
                            gal:label "${tool.name} on ${on_string}: perseus.accnos" ;
                            dc:title "out_accnos" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using chimeraCheck" ;
            dc:identifier "mothur_chimera_perseus" ;
            dc:title "Chimera.perseus",
                "chimera.perseus" ;
            schema:sku 110 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&

echo 'pcoa(
    phylip=phylip.dat,
    metric=$metric
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The pcoa_ command performs principal coordinate analysis on a phylip-formatted_distance_matrix_.

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _pcoa: https://www.mothur.org/wiki/Pcoa

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Phylip Distance Matrix" ;
                            gal:type "data" ;
                            dc:title "phylip" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "metric - Calculate pearson correlation coefficient" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "metric" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "phylip*.pcoa.loadings" ;
                            gal:label "${tool.name} on ${on_string}: loadings" ;
                            dc:title "loadings" ],
                        [ gal:format "mothur.axes" ;
                            gal:from_work_dir "phylip*.pcoa.axes" ;
                            gal:label "${tool.name} on ${on_string}: pcoa.axes" ;
                            dc:title "pcoa" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Principal Coordinate Analysis for a distance matrix" ;
            dc:identifier "mothur_pcoa" ;
            dc:title "Pcoa",
                "pcoa" ;
            schema:sku 49 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$group' group.dat &&
ln -s '$fasta' fasta.dat &&
#if $design.source == "hist":
    ln -s '$design.design_dataset' design_dataset.dat &&
#else:
    ln -s '$generated_design' generated_design.dat &&
#end if

echo 'merge.groups(
    #if $design.source == "hist":
        design=design_dataset.dat
    #else:
        design=generated_design.dat
    #end if
    #if $otu:
        ,shared=otu.dat
    #end if
    #if $group:
        #if $group.is_of_type("mothur.groups"):
            ,group=group.dat
        #elif $group.is_of_type("mothur.count_table"):
            ,count=group.dat
        #end if
    #end if
    #if $fasta:
        ,fasta=fasta.dat
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    ,method=$method
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:configfiles [ gal:configfile [ dc:description """
            #if $design.source == 'build':
                #for $grouping in $design.groupings:
                    #set grp_str = $grouping.groups.__str__
                    #if grp_str != None and len(grp_str) > 0:
                        #for $grp in grp_str.split(','):
                            $grp	$grouping.name
                        #end for
                    #end if
                #end for
            #end if
        """ ;
                            dc:title "generated_design" ] ] ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The merge.groups_ command reads a shared_ file and a design file and merges the groups in the shared file that are in the same grouping in the design file.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
                                ======= =======
                                duck    bird
                                cow     mammal
                                pig     mammal
                                goose   bird
                                cobra   reptile
                                ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _merge.groups: https://www.mothur.org/wiki/Merge.groups

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Grouping Design from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "Your History" ],
                                        [ gal:value "build" ;
                                            dc:description "Build a grouping design" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                                            gal:label "design - assign groups to new grouping" ;
                                            gal:type "data" ;
                                            dc:title "design_dataset" ] ;
                                    gal:value "hist" ],
                                [ gal:repeat [ gal:param [ gal:label "Name for a new combined grouping" ;
                                                    gal:type "text" ;
                                                    dc:title "name" ],
                                                [ gal:label "Select groups for to include in this grouping" ;
                                                    gal:multiple "true" ;
                                                    gal:options [ gal:filter [ gal:key "groups" ;
                                                                    gal:ref "otu" ;
                                                                    gal:type "data_meta" ] ] ;
                                                    gal:type "select" ;
                                                    dc:title "groups" ] ;
                                            gal:title "Grouping" ;
                                            dc:title "groupings" ] ;
                                    gal:value "build" ] ;
                            dc:title "design" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "groups - Pick groups to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.groups,mothur.count_table" ;
                            gal:label "group or count - Group Dataset or Count Table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - Pick OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "fasta,mothur.align" ;
                            gal:help "only valid if you supplied a count file" ;
                            gal:label "Fasta file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:label "Merging method" ;
                            gal:option [ gal:value "average" ;
                                    dc:description " Average " ],
                                [ gal:value "median" ;
                                    dc:description " Median " ],
                                [ gal:selected "true" ;
                                    gal:value "sum" ;
                                    dc:description " Sum " ] ;
                            gal:type "select" ;
                            dc:title "method" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared Dataset" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "otu" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "otu" ;
                            gal:format "mothur.shared" ;
                            gal:from_work_dir "otu*.merge.*" ;
                            gal:label "${tool.name} on ${on_string}: merge.shared" ;
                            dc:title "merged_shared" ],
                        [ gal:filter "group" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group*.merge.*" ;
                            gal:label "${tool.name} on ${on_string}: merge.groups" ;
                            dc:title "merged_group" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Merge groups in a shared file" ;
            dc:identifier "mothur_merge_groups" ;
            dc:title "Merge.groups",
                "merge.groups" ;
            schema:sku 55 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&
ln -s '$alignment.template' alignment.template.dat &&
#if $qual.use == "yes":
    ln -s '$qual.qfile_in' qfile_in.dat &&
    ln -s '$qual.alignreport_in' alignreport_in.dat &&
#end if

echo 'seq.error(
    fasta=fasta_in.dat,
    reference=alignment.template.dat,
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $qual.use == "yes":
        qfile=qfile_in.dat,
        report=alignreport_in.dat,
    #end if
    #if $threshold:
        threshold=$threshold,
    #end if
    ignorechimeras=$ignorechimeras,
    #if $count:
        count=count.dat,
    #end if
    #if $fasta_in.is_of_type('mothur.align')
        aligned=T,
    #else
        aligned=F,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The seq.error_ command evaluates error rate for sequences by comparing to the fasta-formatted template_alignment_.
This is demonstrated in https://mothur.org/wiki/miseq_sop/#assessing-error-rates

.. _template_alignment: https://www.mothur.org/wiki/Alignment_database
.. _seq.error: https://www.mothur.org/wiki/Seq.error

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "history" ;
                                            dc:description "Your History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:help "" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:title "template" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:format "mothur.align,fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ;
                                            dc:title "template" ] ;
                                    gal:value "history" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Include a quality file and an alignment report as inputs" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes" ],
                                        [ gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:param [ gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report" ;
                                            gal:type "data" ;
                                            dc:title "alignreport_in" ],
                                        [ gal:format "qual" ;
                                            gal:label "qfile - Fasta Quality" ;
                                            gal:type "data" ;
                                            dc:title "qfile_in" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "qual" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "threshold - error rate at which to report (default 1.)" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ;
                            dc:title "threshold" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "ignorechimeras -" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "ignorechimeras" ],
                        [ gal:format "mothur.count_table" ;
                            gal:label "count table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:help "sequences must be aligned" ;
                            gal:label "fasta - Candidate Sequences" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "qual['use'] == 'yes' and 'qual_reverse' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.qual.reverse" ;
                            gal:label "${tool.name} on ${on_string}: error.qual.reverse" ;
                            dc:title "qual_reverse_out" ],
                        [ gal:filter "'summary' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.summary" ;
                            gal:label "${tool.name} on ${on_string}: error.summary" ;
                            dc:title "summary_out" ],
                        [ gal:filter "'count' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.count" ;
                            gal:label "${tool.name} on ${on_string}: error.count" ;
                            dc:title "count_out" ],
                        [ gal:filter "'matrix' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.matrix" ;
                            gal:label "${tool.name} on ${on_string}: error.matrix" ;
                            dc:title "matrix_out" ],
                        [ gal:filter "'seq_reverse' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.seq.reverse" ;
                            gal:label "${tool.name} on ${on_string}: error.seq.reverse" ;
                            dc:title "seq_reverse_out" ],
                        [ gal:filter "'chimera' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.chimera" ;
                            gal:label "${tool.name} on ${on_string}: error.chimera" ;
                            dc:title "chimera_out" ],
                        [ gal:filter "qual['use'] == 'yes' and 'quality' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.quality" ;
                            gal:label "${tool.name} on ${on_string}: error.quality" ;
                            dc:title "quality_out" ],
                        [ gal:filter "qual['use'] == 'yes' and 'qual_forward' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.qual.forward" ;
                            gal:label "${tool.name} on ${on_string}: error.qual.forward" ;
                            dc:title "qual_forward_out" ],
                        [ gal:filter "'seq' in output_sel" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "fasta_in*.error.seq" ;
                            gal:label "${tool.name} on ${on_string}: error.seq" ;
                            dc:title "seq_out" ],
                        [ gal:filter "'seq_forward' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.seq.forward" ;
                            gal:label "${tool.name} on ${on_string}: error.seq.forward" ;
                            dc:title "seq_forward_out" ],
                        [ gal:filter "'ref_query' in output_sel" ;
                            gal:format "mothur.align" ;
                            gal:from_work_dir "fasta_in*.error.ref" ;
                            gal:label "${tool.name} on ${on_string}: error.ref-query" ;
                            dc:title "ref_query_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "assess error rates in sequencing data" ;
            dc:identifier "mothur_seq_error" ;
            dc:title "Seq.error",
                "seq.error" ;
            schema:sku 78 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.label(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat
    #else
        list=otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant output from logfile to file
cat mothur.*.logfile
| head -n-3
| sed '1,30d'
> '$labels_list'
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.label_ command generate principle components plot data.

.. _get.label: https://www.mothur.org/wiki/Get.label

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list,mothur.sabund,mothur.rabund" ;
                            gal:label "Input file. May be shared, sabund or rabund file" ;
                            gal:type "data" ;
                            dc:title "otu" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:label "${tool.name} on ${on_string}: labels" ;
                            dc:title "labels_list" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "label names from list, sabund, or rabund file" ;
            dc:identifier "mothur_get_label" ;
            dc:title "Get.label",
                "get.label" ;
            schema:sku 9 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

#import re
## create symlinks to input datasets
ln -s '$file.taxonomy' file.taxonomy.dat &&
#if $file.filetype == "useconstaxonomy":
    ln -s '$file.shared' file.shared.dat &&
    ln -s '$file.list' file.list.dat &&
#end if
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&

echo 'remove.lineage(
    #if $file.filetype == "usetaxonomy":
        taxonomy=file.taxonomy.dat
    #else
        constaxonomy=file.taxonomy.dat
        #if $file.shared:
            ,shared=file.shared.dat
        #end if
        #if $file.list:
            ,list=file.list.dat
        #end if
    #end if
    #if $file.taxons:
        #set taxonstring=str($file.taxons).replace(",","-")
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxonstring ))'"'
    #elif $taxon:
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxon.value )).replace(",","-")'"'
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $group_in:
        ,group=group_in.dat
    #end if
    #if $alignreport_in:
        ,alignreport=alignreport_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
        ,dups=$dups
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.lineage_ command reads a taxonomy_ file and a taxon and generates a new file that contains only the sequences in the that are not from that taxon. You may also include either a fasta, name_, group_, list_, or align.report_ file to this command and mothur will generate new files for each of those containing only the selected sequences.

.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _remove.lineage: https://www.mothur.org/wiki/Remove.lineage

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "choose which file is used" ;
                                    gal:option [ gal:value "useconstaxonomy" ;
                                            dc:description "constaxonomy" ],
                                        [ gal:selected "true" ;
                                            gal:value "usetaxonomy" ;
                                            dc:description "taxonomy" ] ;
                                    gal:type "select" ;
                                    dc:title "filetype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "1" ;
                                                            dc:title "value" ],
                                                        [ gal:index "1" ;
                                                            dc:title "name" ] ;
                                                    gal:filter [ gal:column "1" ;
                                                            gal:type "sort_by" ;
                                                            dc:title "sorted_taxon" ],
                                                        [ gal:column "1" ;
                                                            gal:type "unique_value" ;
                                                            dc:title "unique_taxon" ] ;
                                                    gal:from_dataset "taxonomy" ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "\"" ],
                                                                [ gal:value "'" ] ] ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:title "taxons" ] ;
                                    gal:value "usetaxonomy" ],
                                [ gal:param [ gal:format "mothur.shared" ;
                                            gal:label "shared - shared file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "shared" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - list file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "list" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "2" ;
                                                            dc:title "name" ],
                                                        [ gal:index "2" ;
                                                            dc:title "value" ] ;
                                                    gal:filter [ gal:column "2" ;
                                                            gal:type "sort_by" ;
                                                            dc:title "sorted_taxon" ],
                                                        [ gal:column "2" ;
                                                            gal:type "unique_value" ;
                                                            dc:title "unique_taxon" ] ;
                                                    gal:from_dataset "taxonomy" ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "'" ],
                                                                [ gal:value "\"" ] ] ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:title "taxons" ],
                                        [ gal:format "mothur.cons.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "constaxonomy - Constaxonomy file. Provide either a constaxonomy file or a taxonomy file" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy" ] ;
                                    gal:value "useconstaxonomy" ] ;
                            dc:title "file" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicate names" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "dups" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "list_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "alignreport_in" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. It can also contain group information" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:area "True" ;
                            gal:help "If no taxons selected from file, Enter 1 or more taxons separated by dashes here, e.g. Bacteria;Firmicutes;-Bacteria;Actinobacteria;" ;
                            gal:label "taxon - Manually select Taxons for filtering" ;
                            gal:size "5x120" ;
                            gal:type "text" ;
                            dc:title "taxon" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in.*?\\.(?P<designation>.*)\\.pick.*" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:type "list" ;
                            dc:title "list_out" ] ;
                    gal:data [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "file.taxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            dc:title "name_out" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            dc:title "count_out" ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            dc:title "alignreport_out" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.group" ;
                            dc:title "group_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Picks by taxon" ;
            dc:identifier "mothur_remove_lineage" ;
            dc:title "Remove.lineage",
                "remove.lineage" ;
            schema:sku 4 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$names' names.dat &&

echo 'deunique.tree(
    tree=tree.dat,
    name=names.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The deunique.tree_ command is the reinserts the redundant sequence identiers back into a unique tree using a name_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _deunique.tree: https://www.mothur.org/wiki/Deunique.tree

v1.21.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "names - Sequences Name reference" ;
                            gal:type "data" ;
                            dc:title "names" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Sequences to filter" ;
                            gal:type "data" ;
                            dc:title "tree" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "tree" ;
                            gal:from_work_dir "tree*.deunique.tre" ;
                            gal:label "${tool.name} on ${on_string}: deunique.tre" ;
                            dc:title "out_tree" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Reinsert the redundant sequence identiers back into a unique tree." ;
            dc:identifier "mothur_deunique_tree" ;
            dc:title "Deunique.tree",
                "deunique.tree" ;
            schema:sku 60 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'shhh.seqs(
    fasta=fasta.dat,
    name=name.dat,
    #if $group:
        group=group.dat,
    #end if
    sigma=$sigma,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The shhh.seqs_ command is a mothur-based rewrite of Chris Quince's sequence denoting program, SeqNoise.  Schloss prefers pre.cluster for this operation.

.. _shhh.seqs: https://www.mothur.org/wiki/Shhh.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:type "data" ;
                            dc:title "name" ],
                        [ gal:format "fasta" ;
                            gal:help "" ;
                            gal:label "fasta - Sequences" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:help "default .01" ;
                            gal:label "sigma" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value ".01" ;
                            dc:title "sigma" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.shhh_seqs.fasta" ;
                            gal:label "${tool.name} on ${on_string}: shhh.fasta" ;
                            dc:title "shhh_fasta" ],
                        [ gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.shhh_seqs.names" ;
                            gal:label "${tool.name} on ${on_string}: shhh.names" ;
                            dc:title "shhh_names" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta*.shhh_seqs.map" ;
                            gal:label "${tool.name} on ${on_string}: shhh.map" ;
                            dc:title "shhh_map" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Denoise program (Quince SeqNoise)" ;
            dc:identifier "mothur_shhh_seqs" ;
            dc:title "Shhh.seqs",
                "shhh.seqs" ;
            schema:sku 10 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'summary.seqs(
    fasta=fasta.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The summary.seqs_ command will summarize the quality of sequences in an unaligned or aligned fasta-formatted sequence file.


.. _summary.seqs: https://www.mothur.org/wiki/Summary.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Dataset" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence." ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.summary" ;
                            gal:from_work_dir "fasta*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "out_summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Summarize the quality of sequences" ;
            dc:identifier "mothur_summary_seqs" ;
            dc:title "Summary.seqs",
                "summary.seqs" ;
            schema:sku 19 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#if $splitby.splitmethod == "distance":
    ln -s '$splitby.matrix.dist' splitby.matrix.dist.dat &&
    ln -s '$splitby.matrix.nameOrCount' splitby.matrix.nameOrCount.dat &&
#elif $splitby.splitmethod == "classify":
    ln -s '$splitby.dist' splitby.dist.dat &&
    ln -s '$splitby.nameOrCount' splitby.nameOrCount.dat &&
    ln -s '$splitby.taxonomy' splitby.taxonomy.dat &&
#elif $splitby.splitmethod == "fasta":
    ln -s '$splitby.fasta' splitby.fasta.dat &&
    ln -s '$splitby.nameOrCount' splitby.nameOrCount.dat &&
    ln -s '$splitby.taxonomy' splitby.taxonomy.dat &&
#end if

echo 'cluster.split(
    splitmethod=$splitby.splitmethod,
    #if $splitby.splitmethod == "distance":
        #if $splitby.matrix.format == "column":
            column=splitby.matrix.dist.dat,
            #if $splitby.matrix.nameOrCount.is_of_type("mothur.names"):
                name=splitby.matrix.nameOrCount.dat,
            #elif $splitby.matrix.nameOrCount.is_of_type("mothur.count_table"):
                count=splitby.matrix.nameOrCount.dat,
            #end if
        #elif $splitby.matrix.format == "phylip":
            phylip=splitby.matrix.dist.dat,
            #if $splitby.matrix.nameOrCount:
                #if $splitby.matrix.nameOrCount.is_of_type("mothur.names"):
                    name=splitby.matrix.nameOrCount.dat,
                #elif $splitby.matrix.nameOrCount.is_of_type("mothur.count_table"):
                    count=splitby.matrix.nameOrCount.dat,
                #end if
            #end if
        #end if
    #elif $splitby.splitmethod == "classify":
        column=splitby.dist.dat,
        taxonomy=splitby.taxonomy.dat,
        #if $splitby.nameOrCount.is_of_type("mothur.names"):
            name=splitby.nameOrCount.dat,
        #elif $splitby.nameOrCount.is_of_type("mothur.count_table"):
            count=splitby.nameOrCount.dat,
        #end if
        #if $splitby.taxlevel:
            taxlevel=$splitby.taxlevel,
        #end if
    #elif $splitby.splitmethod == "fasta":
        fasta=splitby.fasta.dat,
        taxonomy=splitby.taxonomy.dat,
        #if $splitby.nameOrCount.is_of_type("mothur.names"):
            name=splitby.nameOrCount.dat,
        #elif $splitby.nameOrCount.is_of_type("mothur.count_table"):
            count=splitby.nameOrCount.dat,
        #end if
        #if $splitby.taxlevel:
            taxlevel=$splitby.taxlevel,
        #end if
        classic=$splitby.classic,
    #end if
    method=$splitby.condmethod.method,
    #if $splitby.condmethod.method == "opti":
        metric=$splitby.condmethod.metric,
        initialize=$splitby.condmethod.initialize,
        delta=$splitby.condmethod.delta,
        iters=$splitby.condmethod.iters,
    #end if
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $precision
        precision=$precision,
    #end if
    large=$large,
    cluster=$cluster,
    runsensspec=$runsensspec,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**

The cluster.split_ command assign sequences to OTUs (Operational Taxonomy Unit).

.. _cluster.split: https://www.mothur.org/wiki/Cluster.split

v1.28.0: Upgraded to Mothur 1.33, introduced cluster boolean.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "VSEARCH methods (agc and dgc) require a fasta file" ;
                                    gal:label "Split by" ;
                                    gal:option [ gal:value "distance" ;
                                            dc:description "Distance" ],
                                        [ gal:value "fasta" ;
                                            dc:description "Classification using fasta" ],
                                        [ gal:value "classify" ;
                                            dc:description "Classification" ] ;
                                    gal:type "select" ;
                                    dc:title "splitmethod" ] ;
                            gal:when [ gal:conditional [ gal:argument "method" ;
                                            gal:label "Clustering Method" ;
                                            gal:option [ gal:value "average" ;
                                                    dc:description "Average neighbor" ],
                                                [ gal:value "nearest" ;
                                                    dc:description "Nearest neighbor" ],
                                                [ gal:value "furthest" ;
                                                    dc:description "Furthest neighbor" ],
                                                [ gal:selected "true" ;
                                                    gal:value "opti" ;
                                                    dc:description "Opticlust method" ] ;
                                            gal:type "select" ;
                                            gal:when [ gal:value "nearest" ],
                                                [ gal:value "average" ],
                                                [ gal:value "dgc" ],
                                                [ gal:value "agc" ],
                                                [ gal:argument "delta",
                                                        "initialize",
                                                        "iters",
                                                        "metric" ;
                                                    gal:help "Options are Matthews correlation coefficient (mcc), sensitivity (sens), specificity (spec), true positives + true negatives (tptn),             false positives + false negatives (fpfn), true positives (tp), true negative (tn), false positive (fp), false negative (fn), f1score (f1score),             accuracy (accuracy), positive predictive value (ppv), negative predictive value (npv), false discovery rate (fdr). Default=mcc.",
                                                        "The delta parameter allows to set the stable value for the metric in the opticluster method. To reach a full convergence, set delta=0.",
                                                        "singleton: each sequence is randomly assigned to its own OTU; oneotu: all sequences are assigned to one otu" ;
                                                    gal:label "Initial randomization",
                                                        "Maximum number of iterations",
                                                        "metric - select the metric in the opticluster method",
                                                        "set the stable value for the metric in the opticluster method" ;
                                                    gal:option [ gal:value "accuracy" ;
                                                            dc:description "accuracy" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "singleton" ;
                                                            dc:description "Singleton" ],
                                                        [ gal:value "tp" ;
                                                            dc:description "true positives" ],
                                                        [ gal:value "npv" ;
                                                            dc:description "negative predictive value" ],
                                                        [ gal:value "tn" ;
                                                            dc:description "true negative" ],
                                                        [ gal:value "tptn" ;
                                                            dc:description "true positives + true negatives" ],
                                                        [ gal:value "ppv" ;
                                                            dc:description "positive predictive value" ],
                                                        [ gal:value "oneotu" ;
                                                            dc:description "Oneotu" ],
                                                        [ gal:value "fpfn" ;
                                                            dc:description "false positives + false negatives" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "mcc" ;
                                                            dc:description "Matthews correlation coefficient (mcc)" ],
                                                        [ gal:value "fn" ;
                                                            dc:description "false negative" ],
                                                        [ gal:value "fdr" ;
                                                            dc:description "false discovery rate" ],
                                                        [ gal:value "fp" ;
                                                            dc:description "false positive" ],
                                                        [ gal:value "f1score" ;
                                                            dc:description "f1score" ],
                                                        [ gal:value "sens" ;
                                                            dc:description "Sensitivity" ],
                                                        [ gal:value "spec" ;
                                                            dc:description "specificity" ] ;
                                                    gal:type "float",
                                                        "integer",
                                                        "select" ;
                                                    gal:value "0.0001",
                                                        "100",
                                                        "opti" ],
                                                [ gal:value "furthest" ] ;
                                            dc:title "condmethod" ] ;
                                    gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:type "data" ;
                                            dc:title "nameOrCount" ],
                                        [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta" ;
                                            gal:type "data" ],
                                        [ gal:argument "classic" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "classic - Use cluster.classic" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:help "can be obtained by running classify.seqs" ;
                                            gal:label "Taxonomy" ;
                                            gal:type "data" ],
                                        [ gal:argument "taxlevel" ;
                                            gal:help "taxonomy level you want to use to split the distance file, default=1, meaning use the first taxon in each list" ;
                                            gal:label "taxlevel - taxonomy level for split (default=3)" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "3" ] ;
                                    gal:value "fasta" ],
                                [ gal:conditional [ gal:argument "method" ;
                                            gal:label "Clustering Method" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "opti" ;
                                                    dc:description "Opticlust method" ],
                                                [ gal:value "average" ;
                                                    dc:description "Average neighbor" ],
                                                [ gal:value "nearest" ;
                                                    dc:description "Nearest neighbor" ],
                                                [ gal:value "furthest" ;
                                                    dc:description "Furthest neighbor" ] ;
                                            gal:type "select" ;
                                            gal:when [ gal:value "average" ],
                                                [ gal:value "furthest" ],
                                                [ gal:value "nearest" ],
                                                [ gal:argument "delta",
                                                        "initialize",
                                                        "iters",
                                                        "metric" ;
                                                    gal:help "Options are Matthews correlation coefficient (mcc), sensitivity (sens), specificity (spec), true positives + true negatives (tptn),             false positives + false negatives (fpfn), true positives (tp), true negative (tn), false positive (fp), false negative (fn), f1score (f1score),             accuracy (accuracy), positive predictive value (ppv), negative predictive value (npv), false discovery rate (fdr). Default=mcc.",
                                                        "The delta parameter allows to set the stable value for the metric in the opticluster method. To reach a full convergence, set delta=0.",
                                                        "singleton: each sequence is randomly assigned to its own OTU; oneotu: all sequences are assigned to one otu" ;
                                                    gal:label "Initial randomization",
                                                        "Maximum number of iterations",
                                                        "metric - select the metric in the opticluster method",
                                                        "set the stable value for the metric in the opticluster method" ;
                                                    gal:option [ gal:value "fp" ;
                                                            dc:description "false positive" ],
                                                        [ gal:value "tptn" ;
                                                            dc:description "true positives + true negatives" ],
                                                        [ gal:value "oneotu" ;
                                                            dc:description "Oneotu" ],
                                                        [ gal:value "fdr" ;
                                                            dc:description "false discovery rate" ],
                                                        [ gal:value "fpfn" ;
                                                            dc:description "false positives + false negatives" ],
                                                        [ gal:value "f1score" ;
                                                            dc:description "f1score" ],
                                                        [ gal:value "ppv" ;
                                                            dc:description "positive predictive value" ],
                                                        [ gal:value "fn" ;
                                                            dc:description "false negative" ],
                                                        [ gal:value "npv" ;
                                                            dc:description "negative predictive value" ],
                                                        [ gal:value "tp" ;
                                                            dc:description "true positives" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "singleton" ;
                                                            dc:description "Singleton" ],
                                                        [ gal:value "accuracy" ;
                                                            dc:description "accuracy" ],
                                                        [ gal:value "spec" ;
                                                            dc:description "specificity" ],
                                                        [ gal:value "tn" ;
                                                            dc:description "true negative" ],
                                                        [ gal:value "sens" ;
                                                            dc:description "Sensitivity" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "mcc" ;
                                                            dc:description "Matthews correlation coefficient (mcc)" ] ;
                                                    gal:type "float",
                                                        "integer",
                                                        "select" ;
                                                    gal:value "0.0001",
                                                        "100",
                                                        "opti" ] ;
                                            dc:title "condmethod" ] ;
                                    gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:type "data" ;
                                            dc:title "nameOrCount" ],
                                        [ gal:argument "taxlevel" ;
                                            gal:help "taxonomy level you want to use to split the distance file, default=1, meaning use the first taxon in each list" ;
                                            gal:label "taxlevel - taxonomy level for split (default=1)" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "1" ],
                                        [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy (from Classify.seqs)" ;
                                            gal:type "data" ],
                                        [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:type "data" ;
                                            dc:title "dist" ] ;
                                    gal:value "classify" ],
                                [ gal:conditional [ gal:param [ gal:label "Select a Distance Matrix Format" ;
                                                    gal:option [ gal:value "column" ;
                                                            dc:description "Pairwise Column Matrix" ],
                                                        [ gal:value "phylip" ;
                                                            dc:description "Phylip Distance Matrix" ] ;
                                                    gal:type "select" ;
                                                    dc:title "format" ] ;
                                            gal:when [ gal:param [ gal:argument "phylip" ;
                                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                                            gal:label "phylip - Distance Matrix" ;
                                                            gal:type "data" ;
                                                            dc:title "dist" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ;
                                                            dc:title "nameOrCount" ] ;
                                                    gal:value "phylip" ],
                                                [ gal:param [ gal:argument "column" ;
                                                            gal:format "mothur.pair.dist" ;
                                                            gal:label "column - Distance Matrix" ;
                                                            gal:type "data" ;
                                                            dc:title "dist" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:type "data" ;
                                                            dc:title "nameOrCount" ] ;
                                                    gal:value "column" ] ;
                                            dc:title "matrix" ],
                                        [ gal:argument "method" ;
                                            gal:label "Clustering Method" ;
                                            gal:option [ gal:value "furthest" ;
                                                    dc:description "Furthest neighbor" ],
                                                [ gal:value "average" ;
                                                    dc:description "Average neighbor" ],
                                                [ gal:value "nearest" ;
                                                    dc:description "Nearest neighbor" ],
                                                [ gal:selected "true" ;
                                                    gal:value "opti" ;
                                                    dc:description "Opticlust method" ] ;
                                            gal:type "select" ;
                                            gal:when [ gal:argument "delta",
                                                        "initialize",
                                                        "iters",
                                                        "metric" ;
                                                    gal:help "Options are Matthews correlation coefficient (mcc), sensitivity (sens), specificity (spec), true positives + true negatives (tptn),             false positives + false negatives (fpfn), true positives (tp), true negative (tn), false positive (fp), false negative (fn), f1score (f1score),             accuracy (accuracy), positive predictive value (ppv), negative predictive value (npv), false discovery rate (fdr). Default=mcc.",
                                                        "The delta parameter allows to set the stable value for the metric in the opticluster method. To reach a full convergence, set delta=0.",
                                                        "singleton: each sequence is randomly assigned to its own OTU; oneotu: all sequences are assigned to one otu" ;
                                                    gal:label "Initial randomization",
                                                        "Maximum number of iterations",
                                                        "metric - select the metric in the opticluster method",
                                                        "set the stable value for the metric in the opticluster method" ;
                                                    gal:option [ gal:value "oneotu" ;
                                                            dc:description "Oneotu" ],
                                                        [ gal:value "fp" ;
                                                            dc:description "false positive" ],
                                                        [ gal:value "tn" ;
                                                            dc:description "true negative" ],
                                                        [ gal:value "spec" ;
                                                            dc:description "specificity" ],
                                                        [ gal:value "fn" ;
                                                            dc:description "false negative" ],
                                                        [ gal:value "fpfn" ;
                                                            dc:description "false positives + false negatives" ],
                                                        [ gal:value "fdr" ;
                                                            dc:description "false discovery rate" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "mcc" ;
                                                            dc:description "Matthews correlation coefficient (mcc)" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "singleton" ;
                                                            dc:description "Singleton" ],
                                                        [ gal:value "npv" ;
                                                            dc:description "negative predictive value" ],
                                                        [ gal:value "ppv" ;
                                                            dc:description "positive predictive value" ],
                                                        [ gal:value "accuracy" ;
                                                            dc:description "accuracy" ],
                                                        [ gal:value "tp" ;
                                                            dc:description "true positives" ],
                                                        [ gal:value "sens" ;
                                                            dc:description "Sensitivity" ],
                                                        [ gal:value "f1score" ;
                                                            dc:description "f1score" ],
                                                        [ gal:value "tptn" ;
                                                            dc:description "true positives + true negatives" ] ;
                                                    gal:type "float",
                                                        "integer",
                                                        "select" ;
                                                    gal:value "0.0001",
                                                        "100",
                                                        "opti" ],
                                                [ gal:value "nearest" ],
                                                [ gal:value "furthest" ],
                                                [ gal:value "average" ] ;
                                            dc:title "condmethod" ] ;
                                    gal:value "distance" ] ;
                            dc:title "splitby" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this, a common value would be 0.25" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.0" ],
                        [ gal:argument "precision" ;
                            gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:option [ gal:value "10" ;
                                    dc:description ".1" ],
                                [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ],
                                [ gal:value "100000" ;
                                    dc:description ".00001" ] ;
                            gal:optional "true" ;
                            gal:type "select" ],
                        [ gal:argument "cluster" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "indicate whether you want to run the clustering or just split the distance matrix" ;
                            gal:label "perform clustering?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "runsensspec" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "run the sens.spec command on the completed list file" ;
                            gal:label "runsensspec" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "large" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If your job fails due to not enough memory error, set this to true to rerun" ;
                            gal:label "large - distance matrix is too large to fit in RAM" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.column\\.dist\\.(?P<designation>.*)\\.temp" ] ;
                            gal:filter "not cluster" ;
                            gal:label "${tool.name} on ${on_string}: split dist" ;
                            gal:type "list" ;
                            dc:title "splitdist" ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.names\\.(?P<designation>.*)\\.temp" ] ;
                            gal:filter "not cluster" ;
                            gal:label "${tool.name} on ${on_string}: split names" ;
                            gal:type "list" ;
                            dc:title "splitnames" ] ;
                    gal:data [ gal:filter "not cluster" ;
                            gal:format "txt" ;
                            gal:from_work_dir "splitby.*.file" ;
                            gal:label "${tool.name} on ${on_string}: split.file" ;
                            dc:title "splitfile" ],
                        [ gal:filter "runsensspec and splitby['condmethod']['method'] == \"opti\"" ;
                            gal:format "txt" ;
                            gal:from_work_dir "splitby.*.sensspec" ;
                            gal:label "${tool.name} on ${on_string}: sensspec" ;
                            dc:title "sensspec" ],
                        [ gal:filter "splitby['matrix']['nameOrCount'].ext != \"mothur.count_table\"",
                                "splitby['nameOrCount'].ext != \"mothur.count_table\"" ;
                            gal:format "mothur.rabund" ;
                            gal:from_work_dir "splitby.*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            dc:title "rabund" ],
                        [ gal:format "mothur.list" ;
                            gal:from_work_dir "splitby.*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            dc:title "otulist" ],
                        [ gal:filter "splitby['matrix']['nameOrCount'].ext != \"mothur.count_table\"",
                                "splitby['nameOrCount'].ext != \"mothur.count_table\"" ;
                            gal:format "mothur.sabund" ;
                            gal:from_work_dir "splitby.*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            dc:title "sabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Assign sequences to OTUs and split large matrices" ;
            dc:identifier "mothur_cluster_split" ;
            dc:title "Cluster.split",
                "cluster.split" ;
            schema:sku 47 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'remove.otus(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.data,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=${ str($infile.label).replace(",","-") },
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.otus command removes otu labels from cons.taxonomy, corr.axes, otu.corr, shared and list files. This can be useful especially with subsampled datasets or when groups have been selected.

.. _remove.otus: https://www.mothur.org/wiki/Remove.otus

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:option [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ],
                                        [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_other" ],
                                [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from." ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_shared" ] ;
                            dc:title "infile" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:type "data" ;
                            dc:title "accnos" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            dc:title "pick_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Removes OTUs from various file formats" ;
            dc:identifier "mothur_remove_otus" ;
            dc:title "Remove.otus",
                "remove.otus" ;
            schema:sku 14 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'summary.shared(
    shared=otu.dat,
    #if $groups:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    all=$all,
    distance=$distance,
    #if $subsample.use == "yes":
        #if $subsample.subsample:
            subsample=$subsample.subsample,
        #else
            subsample=T,
        #end if
        #if $subsample.iters:
            iters=$subsample.iters,
        #end if
    #end if
    output=$output,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The summary.shared_ command produce a summary file that has the calculator value for each line in the OTU data of the shared_ file and for all possible comparisons between the different groups in the group_ file.  This can be useful if you aren't interested in generating collector's or rarefaction curves for your multi-sample data analysis. It would be worth your while, however, to look at the collector's curves for the calculators you are interested in to determine how sensitive the values are to sampling. If the values are not sensitive to sampling, then you can trust the values. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _summary.shared: https://www.mothur.org/wiki/Summary.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "produce subsample distance matrices" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "Leave blank to use the size of your smallest group" ;
                                            gal:label "subsample - size pergroup of the sample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsample" ],
                                        [ gal:label "iters - Number of times to run the subsample" ;
                                            gal:min "1" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "iters" ] ;
                                    gal:value "yes" ] ;
                            dc:title "subsample" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal: " set default option(s) ",
                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "sorabund" ;
                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jabund" ;
                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "thetan" ;
                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sorest" ;
                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "jest" ;
                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sorclass" ;
                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedsobs" ;
                                    dc:description "sharedsobs - Shared community richness the observed richness shared between two or more samples" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedchao" ;
                                    dc:description "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedace" ;
                                    dc:description "sharedace - Shared community richness the two sample shared ACE richness estimator" ] ;
                            gal:type "select" ;
                            gal:value "anderberg",
                                "braycurtis",
                                "canberra",
                                "gower",
                                "hamming",
                                "hellinger",
                                "jabund",
                                "jclass",
                                "jest",
                                "jsd",
                                "kstest",
                                "kulczynski",
                                "kulczynskicody",
                                "lennon",
                                "manhattan",
                                "memchi2",
                                "memchord",
                                "memeuclidean",
                                "mempearson",
                                "morisitahorn",
                                "ochiai",
                                "odum",
                                "rjsd",
                                "sharedace",
                                "sharedchao",
                                "sharednseqs",
                                "sharedobserved",
                                "sharedsobs",
                                "soergel",
                                "sorabund",
                                "sorclass",
                                "sorest",
                                "spearman",
                                "speciesprofile",
                                "structchi2",
                                "structchord",
                                "structeuclidean",
                                "structkulczynski",
                                "structpearson",
                                "thetan",
                                "thetayc",
                                "whittaker" ;
                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                "canberra - Community Structure Similarity",
                                "gower - Community Structure Similarity",
                                "hamming - Community Membership Similarity",
                                "hellinger - Community Structure Similarity",
                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                "jsd",
                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                "manhattan - Community Structure Similarity",
                                "memchi2 - Community Membership Similarity",
                                "memchord - Community Membership Similarity",
                                "memeuclidean - Community Membership Similarity",
                                "mempearson - Community Membership Similarity",
                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                "odum - Community Structure Similarity",
                                "rjsd",
                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                "sharednseqs - Utility the number of sequences in two samples",
                                "sharedobserved - Utility the number of sequences in two samples",
                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                "soergel - Community Structure Similarity",
                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                "spearman - Community Structure Similarity",
                                "speciesprofile - Community Structure Similarity",
                                "structchi2 - Community Structure Similarity",
                                "structchord - Community Structure Similarity",
                                "structeuclidean - Community Structure Similarity",
                                "structkulczynski - Community Structure Similarity",
                                "structpearson - Community Structure Similarity",
                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                            dc:title "calc" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "all - Include RAM intensive sharedsobs and sharedchao calculations" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "all" ],
                        [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:title "output" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "distance - Output a distance file for each calculator at each label" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "distance" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal: """ doesn't seem to work for collection elements yet
            <change_format>
                <when input="output" value="lt" format="mothur.lower.dist"/>
                <when input="output" value="square" format="mothur.square.dist"/>
            </change_format>
            """ ;
                            gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.dist" ] ;
                            gal:filter "distance" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:type "list" ;
                            dc:title "distfiles" ] ;
                    gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: shared.summary" ;
                            dc:title "summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Summary of calculator values for OTUs" ;
            dc:identifier "mothur_summary_shared" ;
            dc:title "Summary.shared",
                "summary.shared" ;
            schema:sku 68 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$fastq_in' fastq_in.dat &&
ln -s '$count_in' count_in.dat &&
ln -s '$qfile_in' qfile_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&

echo 'get.seqs(
    accnos=accnos.dat,
    #if $fasta_in:
        fasta=fasta_in.dat,
    #end if
    #if $fastq_in:
        fastq=fastq_in.dat,
    #end if
    #if $count_in:
        count=count_in.dat,
    #end if
    #if $qfile_in:
        qfile=qfile_in.dat,
    #end if
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $alignreport_in:
        alignreport=alignreport_in.dat,
    #end if
    #if $list_in:
        list=list_in.dat,
    #end if
    #if $taxonomy_in:
        taxonomy=taxonomy_in.dat,
    #end if
    dups=$dups
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.seqs_ command takes a list of sequence names and either a fasta, name_, group_, list_, align.report_ or taxonomy_ file to generate a new file that contains only the sequences in the list. This command may be used in conjunction with the list.seqs_ command to help screen a sequence collection.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs
.. _get.seqs: https://www.mothur.org/wiki/Get.seqs

v.1.27.0 : Updated to Mothur 1.33, added count and fastq params

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Accession Names" ;
                            gal:type "data" ;
                            dc:title "accnos" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "list_in" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "name_in" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "alignreport_in" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fasta_in" ],
                        [ gal:format "fastq" ;
                            gal:help "fastq - allows you to select sequences from your fastq file" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "fastq_in" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicates" ;
                            gal:truevalue "dups" ;
                            gal:type "boolean" ;
                            dc:title "dups" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Fasta Quality" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "qfile_in" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count_in" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Groups" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group_in" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "taxonomy_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "count_in" ;
                            gal:format_source "count_in" ;
                            gal:from_work_dir "count_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count" ;
                            dc:title "count_out" ],
                        [ gal:filter "fastq_in" ;
                            gal:format_source "fastq_in" ;
                            gal:from_work_dir "fastq_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fastq" ;
                            dc:title "fastq_out" ],
                        [ gal:filter "list_in" ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            dc:title "list_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            dc:title "alignreport_out" ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            dc:title "name_out" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            dc:title "group_out" ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.qfile" ;
                            dc:title "qfile_out" ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Picks sequences by name" ;
            dc:identifier "mothur_get_seqs" ;
            dc:title "Get.seqs",
                "get.seqs" ;
            schema:sku 111 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&
ln -s '$design' design.dat &&

echo 'anosim(
    phylip=phylip.dat,
    iters=$iters,
    alpha=$alpha,
    design=design.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The anosim_ command uses a phylip_distance_matrix_ and a design file to calculate the non-parametric multivariate analysis of changes in community structure.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
        ======= =======
        duck    bird
        cow     mammal
        pig     mammal
        goose   bird
        cobra   reptile
        ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.


.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _anosim: https://www.mothur.org/wiki/Anosim

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "phylip" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ],
                        [ gal:argument "iters" ;
                            gal:help "default: 1000" ;
                            gal:label "iters - Number of random configuration to try" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:argument "alpha" ;
                            gal:help "default: 0.05" ;
                            gal:label "alpha - acceptable stopping precision" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:argument "design" ;
                            gal:format "tabular" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "phylip.anosim" ;
                            gal:label "${tool.name} on ${on_string}: anosim" ;
                            dc:title "anosim" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Non-parametric multivariate analysis of changes in community structure" ;
            dc:identifier "mothur_anosim" ;
            dc:title "Anosim",
                "anosim" ;
            schema:sku 54 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'remove.otulabels(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.data,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=${ str($infile.label).replace(",","-") },
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.otulabels_ command removes otu labels from the output from classify.otu_, corr.axes_ and otu.association_. This can be useful especially with subsampled datasets or when groups have been selected.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _otu.association: https://www.mothur.org/wiki/Otu.association
.. _remove.otulabels: https://www.mothur.org/wiki/Remove.otus

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:option [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ],
                                        [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:param [ gal:filter [ gal:key "labels" ;
                                                    gal:ref "otu" ;
                                                    gal:type "data_meta" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "label" ],
                                        [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from." ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_shared" ],
                                [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:type "data" ;
                                            dc:title "otu" ] ;
                                    gal:value "in_other" ] ;
                            dc:title "infile" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:type "data" ;
                            dc:title "accnos" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            dc:title "pick_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Removes OTU labels" ;
            dc:identifier "mothur_remove_otulabels" ;
            dc:title "Remove.otulabels",
                "remove.otulabels" ;
            schema:sku 61 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#if $groupnames.source == "other":
    ln -s '$groupnames.group_in' groupnames_group_in.dat &&
    ln -s '$groupnames.fasta_in' groupnames_fasta_in.dat &&
    ln -s '$groupnames.name_in' groupnames_name_in.dat &&
    ln -s '$groupnames.list_in' groupnames_list_in.dat &&
    ln -s '$groupnames.taxonomy_in' groupnames_taxonomy_in.dat &&
    ln -s '$groupnames.column_in' groupnames_column_in.dat &&
    ln -s '$groupnames.phylip_in' groupnames_phylip_in.dat &&
#else
    ln -s '$groupnames.shared_in' groupnames_shared_in.dat &&
#end if

echo 'remove.groups(
    #if $groupnames.source == "other":
        #if $group_in.is_of_type("mothur.groups"):
            group=groupnames_group_in.dat
        #else
            count=groupnames_group_in.dat
        #end if
        #if $groupnames.fasta_in:
            ,fasta=groupnames_fasta_in.dat
        #end if
        #if $groupnames.name_in:
            ,name=groupnames_name_in.dat
        #end if
        #if $groupnames.list_in:
            ,list=groupnames_list_in.dat
        #end if
        #if $groupnames.taxonomy_in:
            ,taxonomy=groupnames_taxonomy_in.dat
        #end if
        #if $column_in:
            ,column=groupnames_column_in.dat
        #end if
        #if $phylip_in:
            ,phylip=groupnames_phylip_in.dat
        #end if
    #else
        shared=groupnames_shared_in.dat
    #end if
    ,groups=${ str($groupnames.groups).replace(",","-") }
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The remove.groups_ command removes sequences from a specific group or set of groups from the following file types: fasta, name_, group_, list_, taxonomy_.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _remove.groups: https://www.mothur.org/wiki/Remove.groups

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Input Type" ;
                                    gal:option [ gal:value "other" ;
                                            dc:description "fasta, name, taxonomy, distance matrix or list with a group file or count table" ],
                                        [ gal:value "shared" ;
                                            dc:description "shared file" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:label "groups - Pick groups to remove" ;
                                            gal:multiple "true" ;
                                            gal:optional "false" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "shared_in" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "shared_in" ] ;
                                    gal:value "shared" ],
                                [ gal:param [ gal:label "groups - Pick groups to remove" ;
                                            gal:multiple "true" ;
                                            gal:optional "false" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group_in" ;
                                                            gal:type "data_meta" ] ] ;
                                            gal:type "select" ;
                                            dc:title "groups" ],
                                        [ gal:format "mothur.align,fasta" ;
                                            gal:label "fasta - Fasta Sequences" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "fasta_in" ],
                                        [ gal:format "mothur.groups,mothur.count_table" ;
                                            gal:label "group or count table - Groups" ;
                                            gal:type "data" ;
                                            dc:title "group_in" ],
                                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                                            gal:help "must be a phylip-formatted distance matrix" ;
                                            gal:label "phylip - Distance Matrix you would like to select distances from" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "phylip_in" ],
                                        [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "taxonomy_in" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:help "must be a column-formatted distance matrix" ;
                                            gal:label "column - Distance Matrix you would like to select distances from" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "column_in" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "list_in" ],
                                        [ gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ;
                                            dc:title "name_in" ] ;
                                    gal:value "other" ] ;
                            dc:title "groupnames" ] ;
                    gal:label "Output logfile?" ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "groupnames['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            gal:type "list" ;
                            dc:title "shared_out" ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "groupnames['source'] == 'other' and groupnames['list_in']" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:type "list" ;
                            dc:title "list_out" ] ;
                    gal:data [ gal:filter "groupnames['source'] == 'other' and groupnames['group_in'].ext == 'mothur.groups'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "groupnames_group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            dc:title "group_out" ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['group_in'].ext == 'mothur.count_table'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "groupnames_group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            dc:title "count_out" ],
                        [ gal:filter "groupnames['phylip_in']" ;
                            gal:format_source "phylip_in" ;
                            gal:from_work_dir "groupnames_phylip_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.phylip" ;
                            dc:title "phylip_out" ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['taxonomy_in']" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "groupnames_taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            dc:title "taxonomy_out" ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['fasta_in']" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "groupnames_fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            dc:title "fasta_out" ],
                        [ gal:filter "groupnames['column_in']" ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "groupnames_column_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.column" ;
                            dc:title "column_out" ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['name_in']" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "groupnames_name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            dc:title "name_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Remove groups from groups,fasta,names,list,taxonomy" ;
            dc:identifier "mothur_remove_groups" ;
            dc:title "Remove.groups",
                "remove.groups" ;
            schema:sku 57 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.taxsummary(
    input=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.taxsummary command takes a list of tax.summary files separated by dashes and merges them into one file.

.. _merge.taxsummary: https://www.mothur.org/wiki/Merge.taxsummary

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.tax.summary" ;
                            gal:label "input - tax.summary files" ;
                            gal:multiple "true" ;
                            gal:type "data" ;
                            dc:title "input" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: merged sff" ;
                            dc:title "output" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Merge tax.summary files" ;
            dc:identifier "mothur_merge_taxsummary" ;
            dc:title "Merge.taxsummary",
                "merge.taxsummary" ;
            schema:sku 106 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'chimera.bellerophon(
    fasta=fasta.dat,
    filter=$filter,
    correction=$correction,
    #if int($window) > 0:
        window=$window,
    #end if
    #if $increment:
        increment=$increment,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.bellerophon_ command identifies putative chimeras using the bellerophon_ approach.

Advantages of Bellerophon:

 1) You can process all sequences from a PCR-clone library in a single analysis and don't have to inspect outputs for every sequence in the dataset.
 2) The approximate putative breakpoint is calculated using a sliding window (see above) and will help verification of the chimera manually.
 3) A chimeric sequence is not only tested against two (putative) parent sequences but rather is assessed by how well it fits into the complete phylogenetic environment of a multiple sequence alignment. Hence sequences do not become invisible to the program as is the case with CHIMERA_CHECK (see Ref 1 below).
 4) The calculations Bellerophon uses to detect chimeric sequences are computationally relatively cheap and results are quickly calculated for datasets with up 50 sequences (~1 min). Larger datasets take longer - 100 sequences ~30 min, 300 sequences ~8 hours.

Tips for using Bellerophon:

 1) Bellerophon works most efficiently if the parent sequences or non-chimeric sequences closely related to the parent sequences are present in the dataset analyzed. Therefore, as many sequences as possible from the one PCR-clone library should be included in the analysis since the parent sequences of any chimera are most likely to be in that dataset. Addition of non-chimeric outgroup sequences (e.g. from isolates) may help refine an analysis by providing reference points (and a broader phylogenetic context) in the analysis, but be aware of increasing analysis time with bigger datasets.
 2) Bellerophon is compromised by using sequences of different lengths as this can produce artificial skews in distance matrices of fragments of the alignment. Datasets containing sequences of the same length and covering the same portion of the gene should be used (usually not an issue with sequences from a PCR-clone library). The filter will automatically remove sequences too short for the window size, i.e. less than 600 bp for a window size of 300.
 3) If possible multiple window sizes should be used as the number of identified chimeras can vary with the choice of the window size.
 4) Re-running the dataset without the first reported chimeras may identify additional putative chimeras by reducing noise in the analysis. Ideally, the dataset should continue to be re-run removing previously reported chimeras until no chimeras are identified.
 5) Bellerophon should be used in concert with other detection methods such as CHIMERA_CHECK and putatively identified chimeras should always be confirmed by manual inspection of the sequences for signature shifts.


.. _bellerophon: http://comp-bio.anu.edu.au/Bellerophon/doc/doc.html
.. _chimera.bellerophon: https://www.mothur.org/wiki/Chimera.bellerophon

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "window" ;
                            gal:help "Default is 25% of the sequence length. Uses default if < 1" ;
                            gal:label "window - Length of sequence you want in each window analyzed" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "increment" ;
                            gal:help "Default is 25, but you may set it up to sequence length minus twice the window." ;
                            gal:label "increment - Increment for window slide on each iteration" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "25" ],
                        [ gal:argument "correction" ;
                            gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:label "correction - Use the square root of the distances instead of the distance value" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "False" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.bellerophon.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: bellerophon.chimeras" ;
                            dc:title "bellerophon.chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.bellerophon.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bellerophon.accnos" ;
                            dc:title "bellerophon.accnos" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using bellerophon" ;
            dc:identifier "mothur_chimera_bellerophon" ;
            dc:title "Chimera.bellerophon",
                "chimera.bellerophon" ;
            schema:sku 59 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'otu.hierarchy(
    list=otu.dat,
    label=$label1-$label2,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The otu.hierarchy_ command relates OTUs from a list_ at different distances.

.. _list: https://www.mothur.org/wiki/List_file
.. _otu.hierarchy: https://www.mothur.org/wiki/Otu.hierarchy

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "output - display the names of the sequences in the otus or the otu numbers" ;
                            gal:option [ gal:value "number" ;
                                    dc:description "OTU numbers" ],
                                [ gal:selected "true" ;
                                    gal:value "name" ;
                                    dc:description "OTU sequence names" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "output" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Label 1" ;
                            gal:type "select" ;
                            dc:title "label1" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "Must be different than Label 1" ;
                            gal:label "label - OTU Label 2" ;
                            gal:type "select" ;
                            dc:title "label2" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.hierarchy" ;
                            gal:label "${tool.name} on ${on_string}: otu.hierarchy" ;
                            dc:title "hierarchy" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Relate OTUs at different distances" ;
            dc:identifier "mothur_otu_hierarchy" ;
            dc:title "Otu.hierarchy",
                "otu.hierarchy" ;
            schema:sku 18 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$biosample_in' biosample_in.dat &&

echo 'mimarks.attributes(
    xml=biosample_in.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The mimarks.attributes_ command reads `BioSample Attributes`_ xml and generates source for get.mimarkspackage_ command.

.. _BioSample Attributes: https://www.ncbi.nlm.nih.gov/biosample/docs/attributes/
.. _get.mimarkspackage: https://www.mothur.org/wiki/Get.mimarkspackage

    """ ;
            gal:inputs [ gal: """ TODO: add package type options (currently none described in documentation apart from default)
        <param name="package" type="select" label="package - select the mimarks package you would like to use">
            <option value="MIMARKS.survey" selected="true">MIMARKS.survey</option>
        </param>""" ;
                    gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "xml" ;
                            gal:label "BioSample attributes xml file" ;
                            gal:type "data" ;
                            dc:title "biosample_in" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "biosample_in*.source" ;
                            gal:label "${tool.name} on ${on_string}: source" ;
                            dc:title "source_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Reads bioSample Attributes xml and generates source for get.mimarkspackage command" ;
            dc:identifier "mothur_mimarks_attributes" ;
            dc:title "Mimarks.attributes",
                "mimarks.attributes" ;
            schema:sku 26 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

#import re
## create symlinks to input datasets
ln -s '$reference.template' reference.template.dat &&
ln -s '$flow' flow.dat &&
ln -s '$error' error.dat &&

echo 'make.lookup(
    reference=reference.template.dat,
    flow=flow.dat,
    error=error.dat,
    order=$order,
    barcode=$re.sub("[^ACTG]","",str($barcode)),
    key=$re.sub("[^ACTG]","",str($key)),
    threshold=$threshold
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.lookup_ allows you to create custom lookup files for use with shhh.flows.

.. _make.lookup: https://www.mothur.org/wiki/Make.lookup

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ;
                                            dc:title "template" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:help "" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:title "template" ] ;
                                    gal:value "ref" ] ;
                            dc:title "reference" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "A" ;
                                    dc:description "A (TACG)" ],
                                [ gal:value "I" ;
                                    dc:description "I" ],
                                [ gal:value "B" ;
                                    dc:description "B" ] ;
                            gal:type "select" ;
                            dc:title "order" ],
                        [ gal:format "tabular" ;
                            gal:help "this file is an output of seq.error tool" ;
                            gal:label "error - provide the error summary" ;
                            gal:type "data" ;
                            dc:title "error" ],
                        [ gal:label "key - provide the key sequence" ;
                            gal:type "text" ;
                            gal:value "TCAG" ;
                            dc:title "key" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:label "flow - provide file with flow data" ;
                            gal:type "data" ;
                            dc:title "flow" ],
                        [ gal:label "barcode - provide the barcode sequence" ;
                            gal:type "text" ;
                            gal:value "AACCGTGTC" ;
                            dc:title "barcode" ],
                        [ gal:help "" ;
                            gal:label "threshold -" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10000" ;
                            dc:title "threshold" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "flow*.lookup" ;
                            gal:label "${tool.name} on ${on_string}: lookup" ;
                            dc:title "lookup_out" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "allows you to create custom lookup files for use with shhh.flows" ;
            dc:identifier "mothur_make_lookup" ;
            dc:title "Make.lookup",
                "make.lookup" ;
            schema:sku 100 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$qfile' qfile.dat &&

echo 'make.fastq(
    fasta=fasta.dat,
    qfile=qfile.dat
    #if $chooseformat.use == "yes":
        ,format=${chooseformat.format}
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The make.fastq_ command reads a fasta file and quality file and creates a fastq.


.. _make.fastq: https://www.mothur.org/wiki/Make.fastq

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "If none selected, this tool will keep the format of input qfile" ;
                                    gal:label "Choose quality format for your output sequences are" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:param [ gal:multiple "true" ;
                                            gal:option [ gal:value "illumina" ;
                                                    dc:description "Illumina" ],
                                                [ gal:selected "true" ;
                                                    gal:value "sanger" ;
                                                    dc:description "sanger" ],
                                                [ gal:value "illumina1.8+" ;
                                                    dc:description "Illumina 1.8+" ] ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:title "format" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "chooseformat" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "qual454,qualillumina,qualsolid,qual" ;
                            gal:label "qfile - Sequence Quality file" ;
                            gal:type "data" ;
                            dc:title "qfile" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequence file" ;
                            gal:type "data" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:change_format [ gal: " if set, chooseformat.format param should override qfile.ext format " ;
                                    gal:when [ gal:format "fastqsanger" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qual454" ],
                                        [ gal:format "fastqsanger" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "sanger" ],
                                        [ gal:format "fastqillumina" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "illumina" ],
                                        [ gal:format "fastqillumina" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qualillumina" ],
                                        [ gal:format "fastqcssanger" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qualsolid" ],
                                        [ gal:format "fastqsanger" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "illumina1.8+" ] ] ;
                            gal:format "fasta" ;
                            gal:from_work_dir "fasta*.fastq" ;
                            gal:label "${tool.name} on ${on_string}: fastq" ;
                            dc:title "fastq" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Convert fasta and quality to fastq" ;
            dc:identifier "mothur_make_fastq" ;
            dc:title "Make.fastq",
                "make.fastq" ;
            schema:sku 5 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $template.source == "self":
    ln -s '$template.count' template.count.dat &&
    ln -s '$template.group' template.group.dat &&
#elif $template.source == "names":
    ln -s '$template.name' template.name.dat &&
#else:
    ln -s '$template.reference' template.reference.dat &&
#end if

echo 'chimera.uchime(
    fasta=fasta.dat,
    #if $template.source == "self":
        reference=self,
        #if float($template.abskew) > 0:
            abskew=$template.abskew,
        #end if
        #if $template.group:
            group=template.group.dat,
        #end if
        #if $template.count:
            count=template.count.dat,
        #end if
    #elif $template.source == "names":
        name=template.name.dat,
    #else:
        reference=template.reference.dat,
    #end if
    minh=$minh,
    mindiv=$mindiv,
    xn=$xn,
    dn=$dn,
    xa=$xa,
    chunks=$chunks,
    minchunk=$minchunk,
    #if $idsmoothwindow:
        idsmoothwindow=$idsmoothwindow,
    #end if
    maxp=$maxp,
    minlen=$minlen,
    maxlen=$maxlen,
    skipgaps=$skipgaps,
    skipgaps2=$skipgaps2,
    #if $alignment.ucl == "local":
        ucl=true,
        #if $alignment.queryfract:
            queryfract=$alignment.queryfract,
        #end if
    #end if
    dereplicate=$dereplicate,
    chimealns=$chimealns,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
2>&1  ## uchime component writes output to stderr
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.uchime_ command reads a fasta file and reference file and outputs potentially chimeric sequences. The original uchime program was written by Robert C. Edgar and donated to the public domain, http://drive5.com/uchime

.. _chimera.uchime: https://www.mothur.org/wiki/Chimera.uchime

Version 1.23.0: Upgrades tool dependency to mothur 1.33 and adds support for count (mothur 1.28) and dereplicate (mothur 1.29) options.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:argument "ucl" ;
                                    gal:help "global-X is the default" ;
                                    gal:label "ucl - Use local-X alignments" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "global" ;
                                            dc:description "global" ],
                                        [ gal:value "local" ;
                                            dc:description "local" ] ;
                                    gal:type "select" ] ;
                            gal:when [ gal:param [ gal:argument "queryfract" ;
                                            gal:help "Default 0.5" ;
                                            gal:label "queryfract - minimum fraction of the query sequence that must be covered by a local-X alignment" ;
                                            gal:max "1" ;
                                            gal:min "0" ;
                                            gal:type "float" ;
                                            gal:value "0.5" ] ;
                                    gal:value "local" ],
                                [ gal:value "global" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "self" ;
                                            dc:description "Self" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "names" ;
                                            dc:description "Use a names file" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequence names" ;
                                            gal:type "data" ] ;
                                    gal:value "names" ],
                                [ gal:param [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:help "Generated by count.seqs. When you use a count file with group info and dereplicate=T, mothur will create a count table containing seqeunces after chimeras are removed." ;
                                            gal:label "count - a count_table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "abskew" ;
                                            gal:help "Abundance skew is: min [ abund(parent1), abund(parent2) ] / abund(query). Default 1.9" ;
                                            gal:label "abskew - Abundance skew" ;
                                            gal:type "float" ;
                                            gal:value "1.9" ] ;
                                    gal:value "self" ] ;
                            dc:title "template" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "xa" ;
                            gal:help "Reasonable values might range from 0.1 to 2.0. Default 1.0" ;
                            gal:label "xa - eight of an abstain vote" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.0" ],
                        [ gal:argument "idsmoothwindow" ;
                            gal:help "Default 32" ;
                            gal:label "idsmoothwindow - the length of id smoothing window" ;
                            gal:min "0" ;
                            gal:optional "True" ;
                            gal:type "integer" ;
                            gal:value "32" ],
                        [ gal:argument "dn" ;
                            gal:help "Reasonable values are probably in the range from 0.2 to 2.0. Default 1.4" ;
                            gal:label "dn - pseudo-count prior on number of no votes" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.4" ],
                        [ gal:argument "chimealns" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "Alignments show columns with differences that support or contradict a chimeric model." ;
                            gal:label "chimealns - Produce a file containing multiple alignments of query sequences to parents in human readable format" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "minh" ;
                            gal:help "Values from 0.1 to 5 might be reasonable. Lower values increase sensitivity but may report more false positives." ;
                            gal:label "minh - mininum score to report chimera. Default 0.3" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.3" ],
                        [ gal:argument "minlen" ;
                            gal:help "Applies to both query and reference sequences. Default 10" ;
                            gal:label "minlen - minimum unaligned sequence length" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "skipgaps" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "controls how gapped columns affect counting of diffs" ;
                            gal:label "skipgaps - columns containing gaps do not count as diffs" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "maxlen" ;
                            gal:help "Applies to both query and reference sequences. Default 10000" ;
                            gal:label "maxlen - maximum unaligned sequence length" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10000" ],
                        [ gal:argument "maxp" ;
                            gal:help "increasing maxp gives only a very small improvement in sensivity but tends to increase the error rate quite a bit. Default 2" ;
                            gal:label "maxp - maximum number of candidate parents to consider" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "2" ],
                        [ gal:argument "mindiv" ;
                            gal:help "to ignore very close chimeras, increase mindiv to 1.0 or 2.0, to increase sensitivity decrease minh to 0.1. Default 0.5" ;
                            gal:label "mindiv - minimum divergence ratio" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.5" ],
                        [ gal:argument "minchunk" ;
                            gal:help "Default 64" ;
                            gal:label "minchunk - minimum length of a chunk" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "64" ],
                        [ gal:argument "chunks" ;
                            gal:help "number of chunks to extract from the query sequence when searching for parents.  Default 4." ;
                            gal:label "chunks - number of chunks" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "4" ],
                        [ gal:argument "xn" ;
                            gal:help "Decreasing this weight to around 3 or 4 may give better performance on denoised data" ;
                            gal:label "xn - weight of a no vote. Default 8.0" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "8.0" ],
                        [ gal:argument "skipgaps2" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "controls how gapped columns affect counting of diffs" ;
                            gal:label "skipgaps2 - column is immediately adjacent to a column containing a gap, it is not counted as a diff" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:filter "chimealns" ;
                            gal:format "txt" ;
                            gal:from_work_dir "fasta.*uchime.alns" ;
                            gal:label "${tool.name} on ${on_string}: uchime.alns" ;
                            dc:title "out_alns" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*uchime.accnos" ;
                            gal:label "${tool.name} on ${on_string}: uchime.accnos" ;
                            dc:title "out_accnos" ],
                        [ gal:filter "template['source'] == 'self' and template['count']" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "template.*uchime.pick.count_table" ;
                            gal:label "${tool.name} on ${on_string}: uchime.count_table" ;
                            dc:title "out_count" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*uchime.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: uchime.chimeras" ;
                            dc:title "uchime.chimeras" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using uchime" ;
            dc:identifier "mothur_chimera_uchime" ;
            dc:title "Chimera.uchime",
                "chimera.uchime" ;
            schema:sku 58 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## enable mothur to find blast
ln -s ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $alignment.source == "self":
    ln -s '$alignment.name' alignment.name.dat &&
    ln -s '$alignment.group' alignment.group.dat &&
    ln -s '$alignment.count' alignment.count.dat &&
#else:
    ln -s '$alignment.reference' alignment.reference.dat &&
#end if

echo 'chimera.slayer(
    fasta=fasta.dat,
    #if $alignment.source == "self":
        reference=self,
        #if $alignment.name:
            name=$alignment.name,
        #end if
        #if $alignment.group:
            group=$alignment.group,
        #end if
        #if $alignment.count:
            count=$alignment.count,
        #end if
    #else:
        reference=$alignment.reference,
    #end if
    #if $options.setby == "user":
        search=$options.search,
        window=$options.window,
        increment=$options.increment,
        match=$options.match,
        mismatch=$options.mismatch,
        numwanted=$options.numwanted,
        parents=$options.parents,
        minsim=$options.minsim,
        mincov=$options.mincov,
        iters=$options.iters,
        minbs=$options.minbs,
        minsnp=$options.minsnp,
        divergence=$options.divergence,
        trim=$options.trim,
        split=$options.split,
    #end if
    dereplicate=$dereplicate,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.slayer_ command identifies putative chimeras using the slayer approach.

ChimeraSlayer_ is a chimeric sequence detection utility, compatible with near-full length Sanger sequences and shorter 454-FLX sequences (~500 bp).

Chimera Slayer involves the following series of steps that operate to flag chimeric 16S rRNA sequences:

    (A) the ends of a query sequence are searched against an included database of reference chimera-free 16S sequences to identify potential parents of a chimera;
    (B) candidate parents of a chimera are selected as those that form a branched best scoring alignment to the NAST-formatted query sequence;
    (C) the NAST alignment of the query sequence is improved in a 'chimera-aware' profile-based NAST realignment to the selected reference parent sequences; and
    (D) an evolutionary framework is used to flag query sequences found to exhibit greater sequence homology to an in silico chimera formed between any two of the selected reference parent sequences.

Note:
It is not recommended to blindly discard all sequences flagged as chimeras. Some may represent naturally formed chimeras that do not represent PCR artifacts. Sequences flagged may warrant further investigation.


.. _ChimeraSlayer: http://microbiomeutil.sourceforge.net/
.. _chimera.slayer: https://www.mothur.org/wiki/Chimera.slayer

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "self" ;
                                            dc:description "Self - Use abundant sequences from the input Candiate Sequences fasta " ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "names - Sequences Names" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:label "count - Count file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "self" ] ;
                            dc:title "alignment" ],
                        [ gal:param [ gal:label "Slayer Options" ;
                                    gal:option [ gal:value "user" ;
                                            dc:description "Manually set options" ],
                                        [ gal:value "default" ;
                                            dc:description "Use default settings" ] ;
                                    gal:type "select" ;
                                    dc:title "setby" ] ;
                            gal:when [ gal:value "default" ],
                                [ gal:param [ gal:argument "search" ;
                                            gal:label "search - Search method for finding the closest parent" ;
                                            gal:option [ gal:value "kmer" ;
                                                    dc:description "kmer" ],
                                                [ gal:selected "true" ;
                                                    gal:value "blast" ;
                                                    dc:description "blast" ] ;
                                            gal:type "select" ],
                                        [ gal:argument "mincov" ;
                                            gal:label "mincov - Minimum coverage % of closest matches in reference and the query (default 70)" ;
                                            gal:type "integer" ;
                                            gal:value "70" ],
                                        [ gal:argument "iters" ;
                                            gal:label "iters - Number of bootstrap iterations to try (default 1000)" ;
                                            gal:type "integer" ;
                                            gal:value "1000" ],
                                        [ gal:argument "match" ;
                                            gal:label "match - Reward matched bases (default 5)" ;
                                            gal:type "integer" ;
                                            gal:value "5" ],
                                        [ gal:argument "mismatch" ;
                                            gal:label "mismatch - Penalty for mismatched bases (default -4)" ;
                                            gal:type "integer" ;
                                            gal:value "-4" ],
                                        [ gal:argument "increment" ;
                                            gal:label "increment - Increment for window slide on each iteration (default 5)" ;
                                            gal:type "integer" ;
                                            gal:value "5" ],
                                        [ gal:argument "minsim" ;
                                            gal:label "minsim - Minimum similarity % between the query and parent (default 90)" ;
                                            gal:type "integer" ;
                                            gal:value "90" ],
                                        [ gal:argument "trim" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "trim - include chimeric sequences trimmed to their longest piece" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "minsnp" ;
                                            gal:label "minsnp - Percent of SNPs to sample on each side of breakpoint for computing bootstrap support (default 10)" ;
                                            gal:type "integer" ;
                                            gal:value "10" ],
                                        [ gal:argument "window" ;
                                            gal:label "window - Window size for searching for chimeras (default 50)" ;
                                            gal:type "integer" ;
                                            gal:value "50" ],
                                        [ gal:argument "split" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "if a sequence comes back as non-chimeric, mothur will test the two sides to see if they are chimeric." ;
                                            gal:label "split - detect tri- and quadmeras" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "parents" ;
                                            gal:label "parents - Number of potential parents to investigate from the numwanted best matches" ;
                                            gal:type "integer" ;
                                            gal:value "3" ],
                                        [ gal:argument "numwanted" ;
                                            gal:label "numwanted - Number of potential parents to to compare with query sequence (default 15)" ;
                                            gal:type "integer" ;
                                            gal:value "15" ],
                                        [ gal:argument "minbs" ;
                                            gal:label "minbs - Minimum bootstrap support % for calling a sequence chimeric (default 90)" ;
                                            gal:type "integer" ;
                                            gal:value "90" ],
                                        [ gal:argument "divergence" ;
                                            gal:label "divergence - Divergence cutoff for chimera determination (default 1.007)" ;
                                            gal:type "float" ;
                                            gal:value "1.007" ] ;
                                    gal:value "user" ] ;
                            dc:title "options" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "dereplicate" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.slayer.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: slayer.chimeras" ;
                            dc:title "slayer.chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.slayer.accnos" ;
                            gal:label "${tool.name} on ${on_string}: slayer.accnos" ;
                            dc:title "out_accnos" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Find putative chimeras using slayer" ;
            dc:identifier "mothur_chimera_slayer" ;
            dc:title "Chimera.slayer",
                "chimera.slayer" ;
            schema:sku 81 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $template.source == "self":
    ln -s '$template.count' template.count.dat &&
    ln -s '$template.group' template.group.dat &&
#elif $template.source == "names":
    ln -s '$template.name' template.name.dat &&
#else:
    ln -s '$template.reference' template.reference.dat &&
#end if

echo 'chimera.vsearch(
    fasta=fasta.dat,
    #if $template.source == "self":
        reference=self,
        #if float($template.abskew) > 0:
            abskew=$template.abskew,
        #end if
        #if $template.group:
            group=template.group.dat,
        #end if
        #if $template.count:
            count=template.count.dat,
        #end if
    #elif $template.source == "names":
        name=template.name.dat,
    #else:
        reference=template.reference.dat,
    #end if
    minh=$minh,
    mindiv=$mindiv,
    xn=$xn,
    dn=$dn,
    dereplicate=$dereplicate,
    mindiffs=$mindiffs,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
2>&1  ## uchime component writes output to stderr
&& cat *accnos
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The chimera.vsearch_ command reads a fasta file and reference file and outputs potentially chimeric sequences.

.. _chimera.vsearch: https://www.mothur.org/wiki/Chimera.vsearch

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "Select Reference Template from" ;
                                    gal:option [ gal:value "self" ;
                                            dc:description "Self" ],
                                        [ gal:value "names" ;
                                            dc:description "Use a names file" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:help "Generated by count.seqs. When you use a count file with group info and dereplicate=T, mothur will create a count table containing seqeunces after chimeras are removed." ;
                                            gal:label "count - a count_table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "abskew" ;
                                            gal:help "Abundance skew is: min [ abund(parent1), abund(parent2) ] / abund(query). Default 1.9" ;
                                            gal:label "abskew - Abundance skew" ;
                                            gal:type "float" ;
                                            gal:value "1.9" ] ;
                                    gal:value "self" ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequence names" ;
                                            gal:type "data" ] ;
                                    gal:value "names" ] ;
                            dc:title "template" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "mindiffs" ;
                            gal:label "minimum number of differences in segment" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "3" ],
                        [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "minh" ;
                            gal:help "Values from 0.1 to 5 might be reasonable. Lower values increase sensitivity but may report more false positives." ;
                            gal:label "minh - mininum score to report chimera. Default 0.3" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.3" ],
                        [ gal:argument "mindiv" ;
                            gal:help "to ignore very close chimeras, increase mindiv to 1.0 or 2.0, to increase sensitivity decrease minh to 0.1. Default 0.5" ;
                            gal:label "mindiv - minimum divergence ratio" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.5" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "xn" ;
                            gal:help "Decreasing this weight to around 3 or 4 may give better performance on denoised data" ;
                            gal:label "xn - weight of a no vote. Default 8.0" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "8.0" ],
                        [ gal:argument "dn" ;
                            gal:help "Reasonable values are probably in the range from 0.2 to 2.0. Default 1.4" ;
                            gal:label "dn - pseudo-count prior on number of no votes" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.4" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*vsearch.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.chimeras" ;
                            dc:title "vsearch.chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*vsearch.accnos" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.accnos" ;
                            dc:title "out_accnos" ],
                        [ gal:filter "template['source'] == 'self' and template['count']" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "template.*vsearch.pick.count_table" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.count_table" ;
                            dc:title "out_count" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.1" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "find potential chimeric sequences using vsearch" ;
            dc:identifier "mothur_chimera_vsearch" ;
            dc:title "Chimera.vsearch",
                "chimera.vsearch" ;
            schema:sku 63 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' shared.dat &&
ln -s '$design' design.dat &&

echo 'lefse(
    shared=shared.dat,
    design=design.dat,
    #if $class:
        class=$class,
    #end if
    #if $sclass:
        subclass=$sclass,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    aalpha=$aalpha,
    walpha=$walpha,
    lda=$lda,
    iters=$iters,
    fboots=$fboots,
    strict=$strict,
    minc=$minc,
    wilc=$wilc,
    curv=$curv,
    norm=$norm
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """



**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    


**Command Documentation**


.. _lefse: https://www.mothur.org/wiki/Lefse
    """ ;
            gal:inputs [ gal: """ TODO: update galaxy datatypes to set metadata for design files, then can switch to a select box
        <param argument="sets" type="select" multiple="true" label="sets - Which of the sets in your design file you would like to analyze."
            help="The set names are separated by dashes. The defualt is all sets in designfile">
            <options>
                <filter type="data_meta" ref="design" key="sets"/>
            </options>
         </param>
         """ ;
                    gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assigns groups to sets" ;
                            gal:type "data" ;
                            dc:title "design" ],
                        [ gal:help "" ;
                            gal:label "minc - minimum number of samples per subclass for performing wilcoxon test" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ;
                            dc:title "minc" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "F" ;
                            gal:help "" ;
                            gal:label "wilc - indicate whether to perform the Wilcoxon test" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ;
                            dc:title "wilc" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Label filter" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "F" ;
                            gal:help "" ;
                            gal:label "curv - whether perform the wilcoxon testing the Curtis's approach (beta)" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ;
                            dc:title "curv" ],
                        [ gal:help "separate sets by dashes or commas, e.g. set1,set2 or set1-set2-set3" ;
                            gal:label "sets - Which of the sets in your design file you would like to analyze?" ;
                            gal:type "text" ;
                            dc:title "sets" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "F" ;
                            gal:help "Recommended when very low values are present" ;
                            gal:label "norm - multiply relative abundances by 1000000" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ;
                            dc:title "norm" ],
                        [ gal:help "" ;
                            gal:label "lda - threshold on the absolute value of the logarithmic LDA score" ;
                            gal:type "float" ;
                            gal:value "2.0" ;
                            dc:title "lda" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:help "0 no correction (more strict, default), 1 correction for independent comparisons, 2 correction for independent comparison" ;
                            gal:label "strict - set the multiple testing correction options" ;
                            gal:max "2" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "strict" ],
                        [ gal:help "" ;
                            gal:label "iters - number of bootstrap iteration for LDA" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "30" ;
                            dc:title "iters" ],
                        [ gal:help "" ;
                            gal:label "aalpha - alpha value for the Krukal Wallis Anova test" ;
                            gal:type "float" ;
                            gal:value "0.05" ;
                            dc:title "aalpha" ],
                        [ gal:help "If none is provided first category is used" ;
                            gal:label "class -indicate the which category you would like used for the Kruskal Wallis analysis" ;
                            gal:optional "true" ;
                            gal:type "text" ;
                            gal:value "" ;
                            dc:title "class" ],
                        [ gal:help "If none is provided second category is used" ;
                            gal:label "subclass - indicate the which category you would like used for the Kruskal Wallis analysis" ;
                            gal:optional "true" ;
                            gal:type "text" ;
                            gal:value "" ;
                            dc:title "sclass" ],
                        [ gal:help "" ;
                            gal:label "fboots - set the subsampling fraction value for each bootstrap iteration" ;
                            gal:type "float" ;
                            gal:value "0.67" ;
                            dc:title "fboots" ],
                        [ gal:help "" ;
                            gal:label "walpha - alpha value for the Wilcoxon test" ;
                            gal:type "float" ;
                            gal:value "0.05" ;
                            dc:title "walpha" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "shared.*lefse_summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            dc:title "summary" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "description" ;
            dc:identifier "mothur_lefse" ;
            dc:title "Lefse",
                "lefse" ;
            schema:sku 86 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

 echo 'get.relabund(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    scale=$scale
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.relabund_ command calculates the relative abundance of each otu in a sample from a shared_ file. It outputs a .relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _get.relabund: https://www.mothur.org/wiki/Get.relabund

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.shared" ;
                            gal:help "Use Make.shared to create a shared file from a list and a group file" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:label "scale - Scale by" ;
                            gal:option [ gal:value "averageotu" ;
                                    dc:description "Average OTUs" ],
                                [ gal:value "averagegroup" ;
                                    dc:description "Average Groups" ],
                                [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "Total Groups" ],
                                [ gal:value "totalotu" ;
                                    dc:description "Total OTUs" ] ;
                            gal:type "select" ;
                            dc:title "scale" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "mothur.relabund" ;
                            gal:from_work_dir "otu*.relabund" ;
                            gal:label "${tool.name} on ${on_string}: relabund" ;
                            dc:title "relabund" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Calculate the relative abundance of each otu" ;
            dc:identifier "mothur_get_relabund" ;
            dc:title "Get.relabund",
                "get.relabund" ;
            schema:sku 53 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'collect.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    freq=$freq,
    all=true
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& rm otu.dat  ## don't want this collected into datacollection
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The collect.shared_ command generates collector's curves for calculators_, which describe the similarity between communities or their shared richness. Collector's curves describe how richness or diversity change as you sample additional individuals. If a collector's curve becomes parallel to the x-axis, you can be reasonably confident that you have done a good job of sampling and can trust the last value in the curve.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _calculators: https://www.mothur.org/wiki/Calculators
.. _collect.shared: https://www.mothur.org/wiki/Collect.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal: " set default option(s) ",
                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                            gal:label "calc - Calculators (Uses defaults if none are selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "sorabund" ;
                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sorclass" ;
                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedchao" ;
                                    dc:description "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedsobs" ;
                                    dc:description "sharedsobs - Shared community richness the observed richness shared between two or more samples" ],
                                [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedace" ;
                                    dc:description "sharedace - Shared community richness the two sample shared ACE richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "thetan" ;
                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jest" ;
                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sorest" ;
                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "jabund" ;
                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ] ;
                            gal:type "select" ;
                            gal:value "anderberg",
                                "braycurtis",
                                "canberra",
                                "gower",
                                "hamming",
                                "hellinger",
                                "jabund",
                                "jclass",
                                "jest",
                                "jsd",
                                "kstest",
                                "kulczynski",
                                "kulczynskicody",
                                "lennon",
                                "manhattan",
                                "memchi2",
                                "memchord",
                                "memeuclidean",
                                "mempearson",
                                "morisitahorn",
                                "ochiai",
                                "odum",
                                "rjsd",
                                "sharedace",
                                "sharedchao",
                                "sharednseqs",
                                "sharedobserved",
                                "sharedsobs",
                                "soergel",
                                "sorabund",
                                "sorclass",
                                "sorest",
                                "spearman",
                                "speciesprofile",
                                "structchi2",
                                "structchord",
                                "structeuclidean",
                                "structkulczynski",
                                "structpearson",
                                "thetan",
                                "thetayc",
                                "whittaker" ;
                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                "canberra - Community Structure Similarity",
                                "gower - Community Structure Similarity",
                                "hamming - Community Membership Similarity",
                                "hellinger - Community Structure Similarity",
                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                "jsd",
                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                "manhattan - Community Structure Similarity",
                                "memchi2 - Community Membership Similarity",
                                "memchord - Community Membership Similarity",
                                "memeuclidean - Community Membership Similarity",
                                "mempearson - Community Membership Similarity",
                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                "odum - Community Structure Similarity",
                                "rjsd",
                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                "sharednseqs - Utility the number of sequences in two samples",
                                "sharedobserved - Utility the number of sequences in two samples",
                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                "soergel - Community Structure Similarity",
                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                "spearman - Community Structure Similarity",
                                "speciesprofile - Community Structure Similarity",
                                "structchi2 - Community Structure Similarity",
                                "structchord - Community Structure Similarity",
                                "structeuclidean - Community Structure Similarity",
                                "structkulczynski - Community Structure Similarity",
                                "structpearson - Community Structure Similarity",
                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                            dc:title "calc" ],
                        [ gal:help "To filter: select select at least 2 groups" ;
                            gal:label "groups - Groups filter (uses all groups if none are selected)" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Label filter" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:help "by default it is set to 100. But you can set it to a percentage of the number of sequence. For example freq=0.10, means 10%" ;
                            gal:label "freq - indicates when to output your data" ;
                            gal:max "100.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "100" ;
                            dc:title "freq" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "otu\\.(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: calculators" ;
                            gal:type "list" ;
                            dc:title "calcfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate collector's curves for calculators on OTUs" ;
            dc:identifier "mothur_collect_shared" ;
            dc:title "Collect.shared",
                "collect.shared" ;
            schema:sku 27 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.coremicrobiome(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $abundance:
        ,abundance=$abundance
    #end if
    #if $samples:
        ,samples=$samples
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The get.coremicrobiome_ command determines the fraction of OTUs that are found in varying numbers of samples for different minimum relative abundances.

.. _get.coremicrobiome: https://www.mothur.org/wiki/Get.coremicrobiome

v1.27.0: Updated to Mothur 1.33

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "output - fraction or count" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "fraction" ;
                                    dc:description "fraction" ],
                                [ gal:value "count" ;
                                    dc:description "count" ] ;
                            gal:type "select" ;
                            dc:title "output" ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared or relabund - OTU Shared or Relabund" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:label "samples - minimum number of samples requied to list OTU names" ;
                            gal:min "1" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "samples" ],
                        [ gal:label "abundance - list OTU names at this abundance" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ;
                            dc:title "abundance" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.core\\.microbiome$" ] ;
                            gal:label "${tool.name} on ${on_string}: core.microbiome files" ;
                            gal:type "list" ;
                            dc:title "core_microbiome" ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.core\\.microbiomelist" ] ;
                            gal:filter "abundance or samples " ;
                            gal:label "${tool.name} on ${on_string}: core.microbiome list files" ;
                            gal:type "list" ;
                            dc:title "core_microbiome_list" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "fraction of OTUs for samples or abundances" ;
            dc:identifier "mothur_get_coremicrobiome" ;
            dc:title "Get.coremicrobiome",
                "get.coremicrobiome" ;
            schema:sku 48 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&

 echo 'deunique.seqs(
    #if $inputtype.intype == "countfile":
        count=names.dat,
    #else
        name=names.dat,
    #end if
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The deunique.seqs_ command is the reverse of the unique.seqs command, and creates a fasta file from a fasta and name_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _deunique.seqs: https://www.mothur.org/wiki/Deunique.seqs

v.1.21.0: Updated to Mothur 1.33, added option to provide count instead of names file, new groups file as output

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "type of file to provide, may be either a names or a count file" ;
                                    gal:option [ gal:value "namesfile" ;
                                            dc:description "names" ],
                                        [ gal:value "countfile" ;
                                            dc:description "count table" ] ;
                                    gal:type "select" ;
                                    dc:title "intype" ] ;
                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                            gal:help "A names file will generate a new faste file containing all the sequences." ;
                                            gal:label "provide a names file" ;
                                            gal:type "data" ;
                                            dc:title "names" ] ;
                                    gal:value "namesfile" ],
                                [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:help "A counts table will generate a new faste file containing all the sequences.                     If the file contains group information, a group file will also be created." ;
                                            gal:label "provide a count table" ;
                                            gal:type "data" ;
                                            dc:title "names" ] ;
                                    gal:value "countfile" ] ;
                            dc:title "inputtype" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:type "data" ;
                            dc:title "fasta" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal: " groups file is created when a count file is used as input, but will be empty if the count file did not contain group information " ;
                    gal:data [ gal:filter "inputtype.intype == 'countfile'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "names.redundant.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            dc:title "groups_file" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.redundant.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            dc:title "out_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Return all sequences" ;
            dc:identifier "mothur_deunique_seqs" ;
            dc:title "Deunique.seqs",
                "deunique.seqs" ;
            schema:sku 90 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$repfasta' repfasta.dat &&
ln -s '$nameOrCount' nameOrCount.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&
ln -s '$group' group.dat &&

echo 'create.database(
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    ,repfasta=repfasta.dat
    #if $nameOrCount.is_of_type("mothur.names"):
        ,repname=nameOrCount.dat
    #elif $nameOrCount.is_of_type("mothur.count_table"):
        ,count=nameOrCount.dat
    #end if
    ,constaxonomy=constaxonomy.dat
    #if $group:
        ,group=group.dat
    #end if
    #if $label:
        ,label=$label
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The create.database_ command reads a list_ or shared_ file, .cons.taxonomy, .rep.fasta, .rep.names and optional group file, and creates a database file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _create.database: https://www.mothur.org/wiki/Create.database

v.1.28.0: Updated to Mothur 1.33, added count paramter.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:format "mothur.names,mothur.count_table" ;
                            gal:help "rep.name file or rep.count_table file generated by get.oturep" ;
                            gal:label "repname/count - Representative sequences" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "nameOrCount" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:help "consensus taxonomy file output by classify.otu" ;
                            gal:label "constaxonomy - Consensus Taxonomy" ;
                            gal:type "data" ;
                            dc:title "constaxonomy" ],
                        [ gal:format "fasta" ;
                            gal:help "rep.fasta file generated by get.oturep" ;
                            gal:label "repfasta - rep.fasta" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "repfasta" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "Select exactly one label. If none selected, first label in your list or shared file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:format "mothur.list,mothur.shared" ;
                            gal:label "list or shared - OTU List of Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "group" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.database" ;
                            gal:label "${tool.name} on ${on_string}: database" ;
                            dc:title "database" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "creates a database file from a list, repnames, repfasta and contaxonomy file" ;
            dc:identifier "mothur_create_database" ;
            dc:title "Create.database",
                "create.database" ;
            schema:sku 128 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'dist.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        iters=$subsampling.iters,
    #end if
    output=$output,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The dist.shared_ command will generate a phylip-formatted_distance_matrix_ that describes the dissimilarity (1-similarity) among multiple groups from a shared_ file. For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _dist.shared: https://www.mothur.org/wiki/Dist.shared

v1.26.0: Updated to Mothur 1.33. Omitted calculators since they do not appear to be available.

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:label "subsample" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "use" ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:label "iters - Number of iterations to try (default 1000)" ;
                                            gal:min "1" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "1000" ;
                                            dc:title "iters" ],
                                        [ gal:help "Should not exceed the number of sequences in any group" ;
                                            gal:label "subsample (defaults to the size of the smallest group)" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ;
                                            dc:title "subsample" ] ;
                                    gal:value "yes" ] ;
                            dc:title "subsampling" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:label "groups - Groups to analyze" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ;
                            dc:title "groups" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal: " set default option(s) ",
                                " you can set defaults in tool xml by repeating those options again after macro expand, overriding first " ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ] ;
                            gal:type "select" ;
                            gal:value "anderberg",
                                "braycurtis",
                                "canberra",
                                "gower",
                                "hamming",
                                "hellinger",
                                "jabund",
                                "jclass",
                                "jest",
                                "jsd",
                                "kstest",
                                "kulczynski",
                                "kulczynskicody",
                                "lennon",
                                "manhattan",
                                "memchi2",
                                "memchord",
                                "memeuclidean",
                                "mempearson",
                                "morisitahorn",
                                "ochiai",
                                "odum",
                                "rjsd",
                                "sharedace",
                                "sharedchao",
                                "sharednseqs",
                                "sharedobserved",
                                "sharedsobs",
                                "soergel",
                                "sorabund",
                                "sorclass",
                                "sorest",
                                "spearman",
                                "speciesprofile",
                                "structchi2",
                                "structchord",
                                "structeuclidean",
                                "structkulczynski",
                                "structpearson",
                                "thetan",
                                "thetayc",
                                "whittaker" ;
                            dc:description "anderberg - Community Membership Similarity the Anderberg similarity coefficient",
                                "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient",
                                "canberra - Community Structure Similarity",
                                "gower - Community Structure Similarity",
                                "hamming - Community Membership Similarity",
                                "hellinger - Community Structure Similarity",
                                "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient",
                                "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness",
                                "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses",
                                "jsd",
                                "kstest - Community Membership Similarity Kolmogorov-Smirnov test",
                                "kulczynski - Community Membership Similarity the Kulczynski similarity coefficient",
                                "kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient",
                                "lennon - Community Membership Similarity the Lennon similarity coefficient",
                                "manhattan - Community Structure Similarity",
                                "memchi2 - Community Membership Similarity",
                                "memchord - Community Membership Similarity",
                                "memeuclidean - Community Membership Similarity",
                                "mempearson - Community Membership Similarity",
                                "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient",
                                "ochiai - Community Membership Similarity the Ochiai similarity coefficient",
                                "odum - Community Structure Similarity",
                                "rjsd",
                                "sharedace - Shared community richness the two sample shared ACE richness estimator",
                                "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator",
                                "sharednseqs - Utility the number of sequences in two samples",
                                "sharedobserved - Utility the number of sequences in two samples",
                                "sharedsobs - Shared community richness the observed richness shared between two or more samples",
                                "soergel - Community Structure Similarity",
                                "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient",
                                "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness",
                                "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses",
                                "spearman - Community Structure Similarity",
                                "speciesprofile - Community Structure Similarity",
                                "structchi2 - Community Structure Similarity",
                                "structchord - Community Structure Similarity",
                                "structeuclidean - Community Structure Similarity",
                                "structkulczynski - Community Structure Similarity",
                                "structpearson - Community Structure Similarity",
                                "thetan - Community Structure Similarity the Smith theta similarity coefficient",
                                "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient",
                                "whittaker - Community Membership Similarity the Whittaker similarity coefficient" ;
                            dc:title "calc" ],
                        [ gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:label "label - OTU Labels to calculate" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:title "label" ],
                        [ gal:help "A Distance Matrix will be generated for each calculator label pair" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:title "output" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.dist" ] ;
                            gal:label "${tool.name} on ${on_string}: dist files" ;
                            gal:type "list" ;
                            dc:title "distfiles" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Generate a phylip-formatted dissimilarity distance matrix among multiple groups" ;
            dc:identifier "mothur_dist_shared" ;
            dc:title "Dist.shared",
                "dist.shared" ;
            schema:sku 121 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$flow' flow.dat &&
ln -s '$prob.lookup' lookup.dat &&

## Mothur can't handle scientific notation (i.e. 1e-6)
#set mindelta_decimal = "{:.12f}".format(float($mindelta))
echo 'shhh.flows(
    flow=flow.dat,
    lookup=lookup.dat,
    maxiter=$maxiter,
    mindelta=$mindelta_decimal,
    cutoff=$cutoff,
    sigma=$sigma,
    order=$order,
    large=$large,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The shhh.flows_ command is Pat Schloss's translation of Chris Quince's PyroNoise algorithm [1] from C to C++ with the incorporation of mothur's bells and whistles. Based on processing of test datasets provided by Quince, shhh.flows gives the same/similar output to AmpliconNoise. shhh.flows uses a expectation-maximization algorithm to correct flowgrams to identify the idealized form of each flowgram and translate that flowgram to a DNA sequence. Our testing has shown that when Titanium data are trimmed to 450 flows using trim.flows, shhh.flows provides the highest quality data for any other method available. In contrast, when we use the min/max number of flows suggested by Quince of 360/720, the error rate is not that great. This much improved error rate does come at a computational cost. Whereas the features in trim.seqs take on the order of minutes, shhh.flows can take on the order of hours.  You will also need a lookup file that tells shhh.flows the probability of observing an intensity value for a given homopolymer length. You can get mothur-compatible files at: https://www.mothur.org/wiki/Lookup_files

.. _shhh.flows: https://www.mothur.org/wiki/Shhh.flows

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:title "source" ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "table of the probability of observing an intensity value for a given homopolymer length" ;
                                            gal:label "lookup - intensity value per homopolymer length" ;
                                            gal:options [ gal:from_data_table "mothur_lookup" ] ;
                                            gal:type "select" ;
                                            dc:title "lookup" ] ;
                                    gal:value "ref" ],
                                [ gal:param [ gal:format "tabular" ;
                                            gal:help "from https://www.mothur.org/wiki/Lookup_files" ;
                                            gal:label "lookup - intensity value per homopolymer length" ;
                                            gal:type "data" ;
                                            dc:title "lookup" ] ;
                                    gal:value "hist" ] ;
                            dc:title "prob" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "default .06 (usually doesn't need to be changed)" ;
                            gal:label "sigma - the dispersion of the data in the expectation-maximization step of the algorithm" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.06" ;
                            dc:title "sigma" ],
                        [ gal:help "if the delta value does not first drop below the mindelta value." ;
                            gal:label "maxiter - maximum iterations to run (default 1000)" ;
                            gal:min "10" ;
                            gal:type "integer" ;
                            gal:value "1000" ;
                            dc:title "maxiter" ],
                        [ gal:help "default .000001 (10^-6)" ;
                            gal:label "mindelta - threshold for determining how much change in the flowgram correction is allowed" ;
                            gal:max "0.1" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.000001" ;
                            dc:title "mindelta" ],
                        [ gal:help "" ;
                            gal:label "large - split your flow file and process the pieces separately (default 10000)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "10000" ;
                            dc:title "large" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "Use sffinfo to generate flow data from an sff file and usually trimmed by trim.flows" ;
                            gal:label "flow - flowgram data" ;
                            gal:type "data" ;
                            dc:title "flow" ],
                        [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:type "text" ;
                            gal:value "A" ;
                            dc:title "order" ],
                        [ gal:help "default .01 (usually doesn't need to be changed)" ;
                            gal:label "cutoff - seed the expectation-maximizaton step" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.01" ;
                            dc:title "cutoff" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:data [ gal:format "fasta" ;
                            gal:from_work_dir "flow*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: shhh.fasta" ;
                            dc:title "shhh_fasta" ],
                        [ gal:format "mothur.groups" ;
                            gal:from_work_dir "flow*.groups" ;
                            gal:label "${tool.name} on ${on_string}: shhh.groups" ;
                            dc:title "shhh_groups" ],
                        [ gal:format "mothur.names" ;
                            gal:from_work_dir "flow*.names" ;
                            gal:label "${tool.name} on ${on_string}: shhh.names" ;
                            dc:title "shhh_names" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "flow*.counts" ;
                            gal:label "${tool.name} on ${on_string}: shhh.counts" ;
                            dc:title "shhh_counts" ],
                        [ gal:format "qual454" ;
                            gal:from_work_dir "flow*.qual" ;
                            gal:label "${tool.name} on ${on_string}: shhh.qual" ;
                            dc:title "shhh_qual" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Denoise flowgrams (PyroNoise algorithm)" ;
            dc:identifier "mothur_shhh_flows" ;
            dc:title "Shhh.flows",
                "shhh.flows" ;
            schema:sku 42 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$count' count.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if
#if $qual.add2 == "yes":
    ln -s '$qual.qfile' qual.qfile.dat &&
#end if

echo 'trim.seqs(
    fasta=fasta.dat,
    minlength=$minlength,
    maxlength=$maxlength,
    maxambig=$maxambig,
    maxhomop=$maxhomop,
    keepfirst=$keepfirst,
    removelast=$removelast,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        ldiffs=$oligo.ldiffs,
        sdiffs=$oligo.sdiffs,
        keepforward=$oligo.keepforward,
        allfiles=$oligo.allfiles,
    #end if
    #if $qual.add2 == "yes":
        qfile=qual.qfile.dat,
        qaverage=$qual.qaverage,
        qthreshold=$qual.qthreshold,
        qwindowaverage=$qual.qwindowaverage,
        qwindowsize=$qual.qwindowsize,
        rollaverage=$qual.rollaverage,
        qstepsize=$qual.qstepsize,
        qtrim=$qual.qtrim,
    #end if
    flip=$flip,
    #if $names:
        name=names.dat,
    #end if
    logtransform=$logtransform,
    checkorient=$checkorient,
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## prevent these two files from being gathered into collection
&& mv fasta.trim.fasta fasta.trim
&& mv fasta.scrap.fasta fasta.scrap
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The trim.seqs_ command provides the preprocessing features needed to screen and sort pyrosequences.  The command will enable you to trim off primer sequences and barcodes, use the barcode information to generate a group file and split a fasta file into sub-files, screen sequences based on the qual file that comes from 454 sequencers, cull sequences based on sequence length and the presence of ambiguous bases and get the reverse complement of your sequences. While this analysis is clearly geared towards pyrosequencing collections, it can also be used with traditional Sanger sequences.

.. _trim.seqs: https://www.mothur.org/wiki/Trim.seqs

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:conditional [ gal:param [ gal:help "" ;
                                    gal:label "Trim based on a quality file?" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:title "add2" ] ;
                            gal:when [ gal:param [ gal:label "qaverage - remove sequences that have an average base quality below this value (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "qaverage" ],
                                        [ gal:label "qwindowsize - number of bases in a window. Default=50." ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "50" ;
                                            dc:title "qwindowsize" ],
                                        [ gal:label "rollaverage - remove sequences that have an average base quality below this value in a rolling window (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "rollaverage" ],
                                        [ gal:label "qthreshold - remove sequences that have any base quality below this value (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "qthreshold" ],
                                        [ gal:label "qwindowaverage - remove sequences that have an average base quality below this value over a window (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "qwindowaverage" ],
                                        [ gal:format "qual454" ;
                                            gal:label "qfile - 454 quality file" ;
                                            gal:type "data" ;
                                            dc:title "qfile" ],
                                        [ gal:label "qstepsize - number of bases to move the window over. Default=1." ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "1" ;
                                            dc:title "qstepsize" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "qtrim - trim sequences below qthreshold and put in trim output, else put in scrap" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "qtrim" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "qual" ],
                        [ gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:title "add" ] ;
                            gal:when [ gal:param [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "bdiffs" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:type "data" ;
                                            dc:title "oligos" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "keepforward - keep the primer" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "keepforward" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "allfiles - separate into file per barcode" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ;
                                            dc:title "allfiles" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "pdiffs" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "tdiffs" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "ldiffs" ],
                                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ;
                                            dc:title "sdiffs" ] ;
                                    gal:value "yes" ],
                                [ gal:value "no" ] ;
                            dc:title "oligo" ] ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:help "trims the sequence to the first keepfirst number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements" ;
                            gal:label "keepfirst - ignored if < 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "keepfirst" ],
                        [ gal:label "minlength - Minimum Sequence Length (default 0, ignored if < 1 )" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "minlength" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. If you run trim.seqs with an oligos file that contains group labels, trim.seqs will create a new *.trim.count_table with the group information included." ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "count" ],
                        [ gal:label "maxhomop - Maximum homopolymers (default 0, ignored if < 1)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "maxhomop" ],
                        [ gal:help "removes the last removelast number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements" ;
                            gal:label "removelast - ignored if < 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "removelast" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "allows you to indicate you want the averages for the qwindowaverage, rollaverage and qaverage to be calculated using a logtransform." ;
                            gal:label "logtransform" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "logtransform" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If you are running the trim.seqs command with paired barcodes or primers, you can use the checkorient parameter. When checkorient=t and mothur can't find the barcodes and primers, it will search the reverse compliment." ;
                            gal:label "checkorient - search the reverse complement?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "checkorient" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Sequences" ;
                            gal:type "data" ;
                            dc:title "fasta" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "flip - reverse complement the trimmed sequences" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ;
                            dc:title "flip" ],
                        [ gal:label "maxambig - Maximum ambiguous bases (default -1, ignored if < 0)" ;
                            gal:min "-1" ;
                            gal:type "integer" ;
                            gal:value "-1" ;
                            dc:title "maxambig" ],
                        [ gal:label "maxlength - Maximum Sequence Length (default 0, ignored if < 1)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ;
                            dc:title "maxlength" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequence representative name list" ;
                            gal:optional "true" ;
                            gal:type "data" ;
                            dc:title "names" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern "fasta.*?\\.(?P<designation>.*)\\.groups" ] ;
                            gal:filter "oligo['add'] == 'yes' and oligo['allfiles']" ;
                            gal:label "${tool.name} on ${on_string}: allfiles groups)" ;
                            gal:type "list" ;
                            dc:title "groups_allfiles" ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern "fasta.*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:filter "oligo['add'] == 'yes' and oligo['allfiles']" ;
                            gal:label "${tool.name} on ${on_string}: allfiles fasta" ;
                            gal:type "list" ;
                            dc:title "fasta_allfiles" ] ;
                    gal:data [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.trim.names" ;
                            gal:label "${tool.name} on ${on_string}: trim.names" ;
                            dc:title "trim_names" ],
                        [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.scrap.names" ;
                            gal:label "${tool.name} on ${on_string}: scrap.names" ;
                            dc:title "scrap_names" ],
                        [ gal:filter "qual['add2'] == 'yes'" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "fasta*.scrap.qual" ;
                            gal:label "${tool.name} on ${on_string}: scrap.qual" ;
                            dc:title "scrap_qual" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.trim.count_table" ;
                            gal:label "${tool.name} on ${on_string}: trim.count" ;
                            dc:title "trim_count" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.scrap" ;
                            gal:label "${tool.name} on ${on_string}: scrap.fasta" ;
                            dc:title "scrap_fasta" ],
                        [ gal:filter "qual['add2'] == 'yes'" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "fasta*.trim.qual" ;
                            gal:label "${tool.name} on ${on_string}: trim.qual" ;
                            dc:title "trim_qual" ],
                        [ gal:filter "oligo['add'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "fasta.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            dc:title "groups_file" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.scrap.count_table" ;
                            gal:label "${tool.name} on ${on_string}: scrap.count" ;
                            dc:title "scrap_count" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.trim" ;
                            gal:label "${tool.name} on ${on_string}: trim.fasta" ;
                            dc:title "trim_fasta" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "Trim sequences - primers, barcodes, quality" ;
            dc:identifier "mothur_trim_seqs" ;
            dc:title "Trim.seqs",
                "trim.seqs" ;
            schema:sku 31 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:citation [ gal:type "doi" ;
                    dc:description "10.1128/AEM.01541-09" ] ;
            gal:command """
set -o pipefail; export TERM=vt100; 

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'filter.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        groups=${ str($groups).replace(",","-") },
    #end if
    minabund=$minabund,
    minpercent=$minpercent,
    rarepercent=$rarepercent,
    keepties=$keepties,
    minnumsamples=$minnumsamples,
    minpercentsamples=$minpercentsamples,
    mintotal=$mintotal,
    makerare=$makerare
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:exit_code [ gal:level "fatal" ;
                    gal:range "1:" ] ;
            gal:help """




**Mothur Overview**

Mothur is a comprehensive suite of tools for microbial ecology community. It is initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan. For more information, see Mothur-Wiki_.

.. _Mothur-Wiki: https://www.mothur.org/wiki/Main_Page


    

**Command Documentation**

The filter.shared_ is used to remove OTUs based on various critieria.

.. _filter.shared: https://www.mothur.org/wiki/Filter.shared

    """ ;
            gal:inputs [ gal:checked "false" ;
                    gal:label "Output logfile?" ;
                    gal:param [ gal:argument "minnumsamples" ;
                            gal:help "If the number of samples present falls below the minimum, the OTU is removed" ;
                            gal:label "minnumsamples - indicate the minimum number of samples present in an OTU" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "makerare" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "This will preserve the number of reads in your dataset" ;
                            gal:label "makerare - indicate you want the abundances of any removed OTUs to be saved and a new rare OTU created with its abundances equal to the sum of the OTUs removed" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "groups" ;
                            gal:label "Select groups for to include in this grouping" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ] ;
                            gal:type "select" ],
                        [ gal:argument "minpercent" ;
                            gal:help "For example, if the OTUs total abundance across all samples is 8, and the total abundance across all OTUs is 1000, and minpercent=1.             The OTU's relative abundance is 0.008, the minimum is 0.01, so the OTU will be removed" ;
                            gal:label "minpercent - indicate the minimum relative abundance of an OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "mintotal" ;
                            gal:help "If abundance across all samples falls below the minimum, the OTU is removed" ;
                            gal:label "mintotal - indicate the minimum abundance required for a given OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "keepties" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "For example if you have 10 OTUs, rarepercent=20 abundances of 20, 18, 15, 15, 10, 5, 3, 3, 3, 1. keepties=t, would remove the 10th OTU,             but keep the 9th because its abundance ties the 8th OTU. keepties=f would remove OTUs 9 and 10" ;
                            gal:label "keepties - indicate you want to keep the OTUs with the same abundance as the first 'not rare' OTU" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "label" ;
                            gal:filter [ gal:key "labels" ;
                                    gal:ref "otu" ;
                                    gal:type "data_meta" ] ;
                            gal:help "If none selected, all labels will be output" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ],
                        [ gal:argument "rarepercent" ;
                            gal:help "The OTUs chosen to be removed are the rarest.  For example if you have 1000 OTUs, rarepercent=20 would remove the 200 OTUs with the lowest abundance" ;
                            gal:label "rarepercent - indicate the percentage of otus to remove" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "minabund" ;
                            gal:help "If any samples abundance falls below the minimum, the OTU is removed" ;
                            gal:label "minabund - indicate the minimum abundance required for each sample in a given OTU" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "shared - specify your shared file" ;
                            gal:type "data" ;
                            dc:title "otu" ],
                        [ gal:argument "minpercentsamples" ;
                            gal:help "For example, if the total number of samples is 10, the number present is 3, and the minpercentsamples=50. The OTU's precent of samples is 0.333,             the minimum is 0.50, so the OTU will be removed (Default=0)" ;
                            gal:label "minpercentsamples - indicate the minimum percent of sample present in an OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ] ;
                    gal:type "boolean" ;
                    dc:title "savelog" ] ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.filter\\.dat" ] ;
                            gal:label "${tool.name} on ${on_string}: filter.shared" ;
                            gal:type "list" ;
                            dc:title "filter_shared" ] ;
                    gal:filter "savelog" ;
                    gal:format "txt" ;
                    gal:from_work_dir "mothur.out.log" ;
                    gal:label "${tool.name} on ${on_string}: logfile" ;
                    dc:title "logfile" ] ;
            gal:profile "16.07" ;
            gal:regex [ gal:level "fatal" ;
                    gal:match "\\[ERROR\\]" ;
                    gal:source "stdout" ] ;
            gal:requirement [ gal:type "package" ;
                    gal:version "1.39.5" ;
                    dc:description "mothur" ] ;
            gal:version "1.39.5.0" ;
            gal:version_command " mothur \"#help()\" | sed '7q;d' | cut -d\" \" -f2 " ;
            dc:description "remove OTUs based on various critieria" ;
            dc:identifier "mothur_filter_shared" ;
            dc:title "Filter.shared",
                "filter.shared" ;
            schema:sku 75 ] ;
    dc:title "Mothur" .

