@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix gal: <http://galaxyproject.org/ontologies/shed/> .
@prefix ngsp: <http://icc.ru/ontologies/NGS/processing/> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a gal:Suite ;
    ngsp:module [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&
ln -s '$metadata' metadata.dat &&
#if $picrustc.use == "yes":
    ln -s '$picrustc.picrust' picrustc.picrust.dat &&
    ln -s '$picrustc.reftax' picrustc.reftax.dat &&
#end if

echo 'make.biom(
    shared=otu.dat,
    #if $constaxonomy:
        constaxonomy=constaxonomy.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $metadata:
        metadata=metadata.dat,
    #end if
    #if $picrustc.use == "yes":
        picrust=picrustc.picrust.dat,
        reftaxonomy=picrustc.reftax.dat,
    #end if
    matrixtype=$matrixtype
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Make biom files from a shared file" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.biom command converts a shared_ shared file to biom_ files.
The output can be filtered by groups and labels.


.. _shared: https://www.mothur.org/wiki/Shared_file
.. _biom:  http://biom-format.org/documentation/biom_format.html
.. _make.biom: https://www.mothur.org/wiki/Make.biom

    """ ;
            gal:id "mothur_make_biom" ;
            gal:inputs [ gal:conditional [ gal:name "picrustc" ;
                            gal:param [ gal:label "use picrust program" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "The picrust program requires green genes OTU IDs. The picrust parameter allows you to provide the OTU ID mapping table associated with your reference taxonomy" ;
                                            gal:label "picrust" ;
                                            gal:name "picrust" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.ref.taxonomy" ;
                                            gal:help "The referencetax parameter is used with the picrust parameter. Picrust requires the greengenes OTU IDs to be in the biom file, and the referencetax parameter allows you to provide your reference taxonomy file you used when classifying your sequences" ;
                                            gal:label "reftaxonomy" ;
                                            gal:name "reftax" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "By default all are included if no selection is made" ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "matrixtype - sparse or dense" ;
                            gal:name "matrixtype" ;
                            gal:option [ gal:value "dense" ;
                                    dc:description "dense" ],
                                [ gal:value "sparse" ;
                                    dc:description "sparse" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "By default all are included if no selection is made" ;
                            gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular,txt" ;
                            gal:help "You can add sample data support here" ;
                            gal:label "metadata" ;
                            gal:name "metadata" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:help "The contaxonomy file is the taxonomy file outputted by classify.otu" ;
                            gal:label "contaxonomy - consensus taxonomy" ;
                            gal:name "constaxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.biom" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "biom1" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.biom" ] ;
                            gal:label "${tool.name} on ${on_string}: biom files" ;
                            gal:name "biomfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " TODO: test with picrust option (need file with greengenes OTU IDs) " ;
                    gal:test [ gal: " test with subset of labels and groups" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "generated_by" ],
                                                        [ gal:text "forest" ],
                                                        [ gal:text "Biological Observation Matrix" ] ;
                                                    gal:not_has_text [ gal:text "pasture" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "0.36" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "biomfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.36,0.38,0.41" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with constaxonomy and metadata " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "1" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "galaxy rocks" ],
                                                        [ gal:text "generated_by" ],
                                                        [ gal:text "Biological Observation Matrix" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "biom1" ;
                                            gal:name "1" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "biomfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ],
                                [ gal:name "metadata" ;
                                    gal:value "metadata" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "constaxonomy" ;
                                    gal:value "final.tx.1.cons.taxonomy" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "pasture" ],
                                                        [ gal:text "generated_by" ],
                                                        [ gal:text "forest" ],
                                                        [ gal:text "Biological Observation Matrix" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "biom1" ;
                                            gal:name "0.36" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "biomfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.biom" ;
            schema:sku 70 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
#if $perotu.use == "yes":
    ln -s '$perotu.otu' perotu.otu.dat &&
#end if

echo 'consensus.seqs(
    fasta=fasta.dat
    #if $name:
        ,name=name.dat
    #end if
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
    #if $perotu.use == "yes":
        ,list=perotu.otu.dat
        #if $perotu.label:
            ,label=${ str($perotu.label).replace(",","-") }
        #end if
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find a consensus sequence for each OTU or phylotype" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The consensus.seqs_ command can be used in 2 ways: create a consensus sequence from a fastafile, or with a listfile create a consensus sequence for each otu. Sequences must be aligned.

.. _consensus.seqs: https://www.mothur.org/wiki/Consensus.seqs

    """ ;
            gal:id "mothur_consensus_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "perotu" ;
                            gal:param [ gal:label "Consensus sequence" ;
                                    gal:name "use" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "Single consensus sequence" ],
                                        [ gal:value "yes" ;
                                            dc:description "Consensus sequence for each OTU in list" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:help "By default all labels are used" ;
                                            gal:label "label - Select OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.align" ;
                            gal:help "Sequences must be aligned" ;
                            gal:label "fasta - Sequences to Bin" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:help "For example: cutoff=95 would return the base that was supported by at least 95% of sequences. Must be between 1 and 100. Optional" ;
                            gal:label "Cutoff - set a percentage of sequences that support the base" ;
                            gal:max "100" ;
                            gal:min "1" ;
                            gal:name "cutoff" ;
                            gal:optional "True" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "this file can be generated by count.seqs" ;
                            gal:label "Count - a count table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Consensus.seqs" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.summary" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus summary files per OTU" ;
                            gal:name "consensussummaries" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.names" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus names files per OTU" ;
                            gal:name "consensusnames" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.align" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.fasta" ] ;
                            gal:filter "perotu['use'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: consensus fasta files per OTU" ;
                            gal:name "consensusfastas" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "perotu['use'] == 'no'" ;
                            gal:format "mothur.align" ;
                            gal:from_work_dir "fasta*.cons.fasta" ;
                            gal:label "${tool.name} on ${on_string}: cons.fasta" ;
                            gal:name "cons_fasta" ;
                            dc:description """
            """ ],
                        [ gal:filter "perotu['use'] == 'no'" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta*.cons.summary" ;
                            gal:label "${tool.name} on ${on_string}: cons.summary" ;
                            gal:name "summary" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with default values " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "61a0e170a8b881135421afd0cea8305a" ;
                                    gal:name "summary" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "82f3475b61f240eba09597a409364c04" ;
                                    gal:name "cons_fasta" ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with list file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "d595234c6018dfcc1465e59d35d59205" ;
                                            gal:name "0.30" ] ;
                                    gal:name "consensussummaries" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:ftype "mothur.align" ;
                                            gal:md5 "a5c8c17814f02124194dba2e37f566c7" ;
                                            gal:name "0.30" ] ;
                                    gal:name "consensusfastas" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "9de4f7e774e0c16eaf7cf6ffbba9d475" ;
                                            gal:name "0.30" ] ;
                                    gal:name "consensusnames" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "labels" ;
                                    gal:value "unique,0.30,0.33" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.align_head.list" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "count" ;
                                    gal:value "amazon.align_head.count_table" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "consensus.seqs" ;
            schema:sku 112 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'degap.seqs(
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Remove gap characters from sequences" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """


@MOTHUR_OVERVIEW@

**Command Documentation**

The degap.seqs_ command reads a fasta file and outputs a fasta containing the sequences after all gap characters are removed.

.. _degap.seqs: https://www.mothur.org/wiki/Degap.seqs

v1.21.0: Updated to Mothur 1.33


    """ ;
            gal:id "mothur_degap_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Dataset" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Degap.seqs" ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.ng.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ng.fasta" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "degap.seqs" ;
            schema:sku 44 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.sfffiles(
    sff=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Merge SFF files" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.sfffiles_ command merge inputs into a single output.

.. _merge.sfffiles: https://www.mothur.org/wiki/Merge.sfffiles

    """ ;
            gal:id "mothur_merge_sfffiles" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "sff" ;
                            gal:label "input - sff files to merge" ;
                            gal:multiple "true" ;
                            gal:name "input" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Merge.sfffiles" ;
            gal:outputs [ gal:data [ gal:format "sff" ;
                            gal:label "${tool.name} on ${on_string}: merged sff" ;
                            gal:name "output" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "FLP3FBN01ELBSX" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "sff" ;
                                    gal:name "output" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "input" ;
                                    gal:value "Fasting_Example1.sff,Fasting_Example2.sff" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "merge.sfffiles" ;
            schema:sku 6 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&
ln -s '$name' name.dat &&

echo 'parsimony(
    tree=tree.dat,
    iters=$iters,
    group=group.dat,
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Describes whether two or more communities have the same structure" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "bibtex" ;
                            dc:description """
@article{slatkin1990detecting,
  title={Detecting isolation by distance using phylogenies of genes.},
  author={Slatkin, Montgomery and Maddison, Wayne P},
  journal={Genetics},
  volume={126},
  number={1},
  pages={249--260},
  year={1990},
  publisher={Genetics Soc America}
}
        """ ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.72.4.2379-2384.2006" ],
                        [ gal:type "bibtex" ;
                            dc:description """
@article{slatkin1989cladistic,
  title={A cladistic measure of gene flow inferred from the phylogenies of alleles.},
  author={Slatkin, Montgomery and Maddison, Wayne P},
  journal={Genetics},
  volume={123},
  number={3},
  pages={603--613},
  year={1989},
  publisher={Genetics Soc America}
}
        """ ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.68.8.3673-3682.2002" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The parsimony_ command implements the parsimony method (aka P-test), which was previously implemented in TreeClimber
and is also available in MacClade and on the UniFrac website. The parsimony method is a generic test that describes
whether two or more communities have the same structure. The significance of the test statistic can only indicate the
probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _parsimony: https://www.mothur.org/wiki/Parsimony

v.1.20.0: Added count parameter

    """ ;
            gal:id "mothur_parsimony" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "tree" ;
                            gal:format "mothur.tre" ;
                            gal:label "tree - Phylogenetic Tree" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file for the tree" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:type "data" ],
                        [ gal:argument "groups" ;
                            gal:help "By default all are included if no selection is made." ;
                            gal:label "groups - Groups to display" ;
                            gal:multiple "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "iters" ;
                            gal:label "iters - Number of bootstrap iterations to try (default 1000)" ;
                            gal:min "1" ;
                            gal:type "integer" ;
                            gal:value "1000" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Parsimony" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.psummary" ;
                            gal:label "${tool.name} on ${on_string}: psummary" ;
                            gal:name "psummary" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.parsimony" ;
                            gal:label "${tool.name} on ${on_string}: parsimony" ;
                            gal:name "parsimony" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^Tree#\\tGroups\\tParsScore\\tParsSig$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "psummary" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "green-orangeScore" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "parsimony" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "green,orange" ],
                                [ gal:name "name" ;
                                    gal:value "treetest.names" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "treetest.groups" ],
                                [ gal:name "iters" ;
                                    gal:value "1000" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "treetest.tre" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "parsimony" ;
            schema:sku 51 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## if accnos file is empty, just output files as-is, mothur errors if accnos empty (e.g. chimera filtering in pipeline but sample had no chimeras)
#import os
#if $os.lstat(str($accnos)).st_size == 0:
    echo "accnos file empty, nothing to remove, skipping step"
    #if $fasta_in:
        && cp $fasta_in $fasta_out
    #end if
    #if $fastq_in:
        && cp $fastq_in $fastq_out
    #end if
    #if $count_in:
        && cp $count_in $count_out
    #end if
    #if $qfile_in:
        && cp $qfile_in $qfile_out
    #end if
    #if $name_in:
        && cp $name_in $name_out
    #end if
    #if $group_in:
        && cp $group_in $group_out
    #end if
    #if $alignreport_in:
        && cp $alignreport_in $alignreport_out
    #end if
    #if $list_in:
        && cp $list_in $list_out
    #end if
    #if $taxonomy_in:
        && cp $taxonomy_in $taxonomy_out
    #end if
#else:
    ## create symlinks to input datasets
    ln -s '$accnos' accnos.dat &&
    ln -s '$fasta_in' fasta_in.dat &&
    ln -s '$fastq_in' fastq_in.dat &&
    ln -s '$count_in' count_in.dat &&
    ln -s '$qfile_in' qfile_in.dat &&
    ln -s '$name_in' name_in.dat &&
    ln -s '$group_in' group_in.dat &&
    ln -s '$alignreport_in' alignreport_in.dat &&
    ln -s '$list_in' list_in.dat &&
    ln -s '$taxonomy_in' taxonomy_in.dat &&

    echo 'remove.seqs(
        accnos=accnos.dat
        #if $fasta_in:
            ,fasta=fasta_in.dat
        #end if
        #if $fastq_in:
            ,fastq=fastq_in.dat
        #end if
        #if $count_in:
            ,count=count_in.dat
        #end if
        #if $qfile_in:
            ,qfile=qfile_in.dat
        #end if
        #if $name_in:
            ,name=name_in.dat
        #end if
        #if $group_in:
            ,group=group_in.dat
        #end if
        #if $alignreport_in:
            ,alignreport=alignreport_in.dat
        #end if
        #if $list_in:
            ,list=list_in.dat
        #end if
        #if $taxonomy_in:
            ,taxonomy=taxonomy_in.dat
        #end if
        $dups
    )'
    | sed 's/ //g'  ## mothur trips over whitespace
    | mothur
    | tee mothur.out.log
#end if
    """ ;
            gal:description "Remove sequences by name" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.seqs_ command takes a list of sequence names and either a fasta, name_, group_, list_, align.report_ or taxonomy_ file to generate a new file that does not contain the sequences in the list. This command may be used in conjunction with the list.seqs_ command to help screen a sequence collection.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs
.. _remove.seqs: https://www.mothur.org/wiki/Remove.seqs

    """ ;
            gal:id "mothur_remove_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue ",dups=false" ;
                            gal:label "dups - Apply to duplicates" ;
                            gal:name "dups" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "list_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:name "taxonomy_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Groups" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fastq" ;
                            gal:label "fastq" ;
                            gal:name "fastq_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Fasta Quality" ;
                            gal:name "qfile_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:name "alignreport_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Accession Names of sequences to be removed" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.seqs" ;
            gal:outputs [ gal:data [ gal:filter "fastq_in" ;
                            gal:format_source "fastq_in" ;
                            gal:from_work_dir "fastq_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.fastq" ;
                            gal:name "fastq_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            gal:name "alignreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "count_in" ;
                            gal:format_source "count_in" ;
                            gal:from_work_dir "count_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.count" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "list_in" ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.qfile" ;
                            gal:name "qfile_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " TODO: make test for empty accnos file " ;
                    gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "fasta_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "dups" ;
                                    gal:value "" ],
                                [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-count-format" ] ;
                                            gal:has_text [ gal:text "U68595" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "count_in" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "accnos" ;
                                    gal:value "amazon.bad.accnos" ] ;
                            dc:description """
            """ ],
                        [ gal: " test two input files " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fastq_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "fastq_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "dups" ;
                                    gal:value ",dups=false" ],
                                [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ] ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fastq_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "fastq_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.seqs" ;
            schema:sku 72 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$taxonomy' taxonomy.dat &&
ln -s '$name' name.dat &&

echo 'phylotype(
    taxonomy=taxonomy.dat
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
    #if $name:
        ,name=name.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to OTUs based on taxonomy" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The phylotype_ command assign sequences to OTUs based on their taxonomy and outputs a a list_, a sabund_ (Species Abundance), and a rabund_ (Relative Abundance) file.

.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _phylotype: https://www.mothur.org/wiki/Phylotype

    """ ;
            gal:id "mothur_phylotype" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "label - Taxonomy Levels to report (All when none are selected)" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:option [ gal:value "2" ;
                                    dc:description "2" ],
                                [ gal:value "8" ;
                                    dc:description "8" ],
                                [ gal:value "6" ;
                                    dc:description "6" ],
                                [ gal:value "3" ;
                                    dc:description "3" ],
                                [ gal:value "10" ;
                                    dc:description "10" ],
                                [ gal:value "7" ;
                                    dc:description "7" ],
                                [ gal:value "5" ;
                                    dc:description "5" ],
                                [ gal:value "9" ;
                                    dc:description "9" ],
                                [ gal:value "0" ;
                                    dc:description "0" ],
                                [ gal:value "4" ;
                                    dc:description "4" ],
                                [ gal:value "1" ;
                                    dc:description "1" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:name "taxonomy" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names reference file for the taxonomy" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "cutoff - Truncate the taxonomy at depth (Ignored if < 0)" ;
                            gal:max "50" ;
                            gal:min "0" ;
                            gal:name "cutoff" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Phylotype" ;
            gal:outputs [ gal:data [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "taxonomy*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            gal:name "sabund" ],
                        [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "taxonomy*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            gal:name "rabund" ],
                        [ gal:format "mothur.list" ;
                            gal:from_work_dir "taxonomy*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            gal:name "otulist" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "62547e84f1d051a16937715433f3d78a" ;
                                    gal:name "sabund" ],
                                [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "689fb6fd2fb4cd0740fc8b62d7e05556" ;
                                    gal:name "rabund" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:md5 "c808112d524863bbc973dd721ba18a06" ;
                                    gal:name "otulist" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "582825c475bffbf7e450156ff26c844a" ;
                                    gal:name "sabund" ],
                                [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "3d2e3821bef6ecd7eaf0ea62e8692154" ;
                                    gal:name "rabund" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:md5 "424a2c62df2e37b32542731b9631f8ed" ;
                                    gal:name "otulist" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "1,4,5" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "cutoff" ;
                                    gal:value "5" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "phylotype" ;
            schema:sku 35 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$group_in' group_in.dat &&
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$shared_in' shared_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&
ln -s '$design_in' design_in.dat &&
ln -s '$column_in' column_in.dat &&
ln -s '$phylip_in' phylip_in.dat &&
#if $groupnames.source == 'accnos':
    ln -s '$groupnames.accnos' groupnames.accnos.dat &&
#end if

echo 'get.groups(
    #if $group_in.is_of_type("mothur.groups"):
        group=group_in.dat
    #else
        count=group_in.dat
    #end if
    #if $groupnames.source == 'groups':
        #if $groupnames.groups:
            ,groups=${ str($groupnames.groups).replace(",","-") }
        #end if
    #else
        ,accnos=groupnames.accnos.dat
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $shared_in:
        ,shared=shared_in.dat
    #end if
    #if $taxonomy_in:
        ,taxonomy=taxonomy_in.dat
    #end if
    #if $design_in:
        ,design=design_in.dat
    #end if
    #if $column_in:
        ,column=column_in.dat
    #end if
    #if $phylip_in:
        ,phylip=phylip_in.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Select groups" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The get.groups_ command selects sequences from a specific group or set of groups from the following file types: fasta, fasta, name_, group_, list_, taxonomy_.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _get.groups: https://www.mothur.org/wiki/Get.groups

    """ ;
            gal:id "mothur_get_groups" ;
            gal:inputs [ gal:conditional [ gal:name "groupnames" ;
                            gal:param [ gal:label "Select Group Names from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "accnos" ;
                                            dc:description "A History Group Name Accnos Dataset" ],
                                        [ gal:value "groups" ;
                                            dc:description "A List of Group Names" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group_in" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "groups" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "accnos - Group Names from your history" ;
                                            gal:name "accnos" ;
                                            gal:type "data" ] ;
                                    gal:value "accnos" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "list_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                            gal:help "must be a phylip-formatted distance matrix" ;
                            gal:label "phylip - Distance Matrix you would like to select distances from" ;
                            gal:name "phylip_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.pair.dist" ;
                            gal:help "must be a column-formatted distance matrix" ;
                            gal:label "column - Distance Matrix you would like to select distances from" ;
                            gal:name "column_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:name "taxonomy_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "shared_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups,mothur.count_table" ;
                            gal:label "group or count_table file" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "tabular" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:name "design_in" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.groups" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern "shared_in.*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "shared_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            gal:name "sharedfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in.*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "listfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "group_in.ext == \"mothur.groups\"" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "column_in" ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "column_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.column" ;
                            gal:name "column_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "design_in" ;
                            gal:format "mothur.design" ;
                            gal:from_work_dir "design_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.design" ;
                            gal:name "design_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "group_in.ext == \"mothur.count_table\"" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "phylip_in" ;
                            gal:format_source "phylip_in" ;
                            gal:from_work_dir "phylip_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.phylip" ;
                            gal:name "phylip_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with distance matrix " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-dist-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.square.dist" ;
                                    gal:name "phylip_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-column-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "column_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "accnos" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "column_in" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "phylip_in" ;
                                    gal:value "amazon.dist" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon_withgroups.count_table" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.groupaccnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with accnos file and most extra files" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "0bc9320647234e8367c3b1b654f9302d" ;
                                    gal:name "fasta_out" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "1f0324a017e1b71e6ed0af257b0013f3" ;
                                    gal:name "name_out" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "group_out" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "3c78742e0a480ca3353f9b591fc9bf36" ;
                                            gal:name "0.38" ] ;
                                    gal:name "sharedfiles" ;
                                    dc:description """
                """ ],
                                [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "49878dfbe53d5144f3bd885c629de822" ;
                                            gal:name "0.38" ] ;
                                    gal:name "listfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "shared_in" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "amazon1.names" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "source" ;
                                    gal:value "accnos" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "list_in" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.groupaccnos" ] ],
                        [ gal: " test with accnos file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "group_out" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "accnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.groupaccnos" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ] ],
                        [ gal: " test with group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "group_out" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "source" ;
                                    gal:value "groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.groups" ;
            schema:sku 32 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.count(
    count=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Merge count tables" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.count_ command merges count files into a single count table.

.. _merge.count: https://www.mothur.org/wiki/Merge.count

    """ ;
            gal:id "mothur_merge_count" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:label "input - count tables to merge" ;
                            gal:multiple "true" ;
                            gal:name "input" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Merge.count" ;
            gal:outputs [ gal:data [ gal:format "mothur.count_table" ;
                            gal:label "${tool.name} on ${on_string}: merged count table" ;
                            gal:name "output" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-count-format" ] ;
                                            gal:has_text [ gal:text "F11Fcsw_12747" ],
                                                [ gal:text "U68630" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "output" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "input" ;
                                    gal:value "stool_small.count_table,amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "merge.count" ;
            schema:sku 117 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'chop.seqs(
    fasta=fasta.dat,
    numbases=$numbases,
    keep=$keep,
    countgaps=$countgaps,
    short=$short,
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Trim sequences to a specified length" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chop.seqs_ command reads a fasta file of sequences and outputs a .chop.fasta file containing the trimmed sequences. It works on both aligned and unaligned sequences.

.. _chop.seqs: https://www.mothur.org/wiki/Chop.seqs

v1.20.0: Updated to 1.33. Added name, group and count options for mothur version 1.31.0

    """ ;
            gal:id "mothur_chop_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "countgaps" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "countgaps - Count gaps as bases" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "numbases" ;
                            gal:label "numbases - Number of bases to keep" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Sequences to be chopped" ;
                            gal:type "data" ],
                        [ gal:argument "short" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "short - keep sequences that are too short to chop" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "keep" ;
                            gal:label "keep - Part of the sequence to keep" ;
                            gal:option [ gal:value "front" ;
                                    dc:description "front" ],
                                [ gal:value "back" ;
                                    dc:description "back" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chop.seqs" ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.chop.fasta" ;
                            gal:label "${tool.name} on ${on_string}: chop.fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:compare "contains" ;
                                    gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.chop.fasta" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.names" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chop.seqs" ;
            schema:sku 91 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#if $splitby.splitmethod == "distance":
    ln -s '$splitby.matrix.dist' splitby.matrix.dist.dat &&
    ln -s '$splitby.matrix.nameOrCount' splitby.matrix.nameOrCount.dat &&
#elif $splitby.splitmethod == "classify":
    ln -s '$splitby.dist' splitby.dist.dat &&
    ln -s '$splitby.nameOrCount' splitby.nameOrCount.dat &&
    ln -s '$splitby.taxonomy' splitby.taxonomy.dat &&
#elif $splitby.splitmethod == "fasta":
    ln -s '$splitby.fasta' splitby.fasta.dat &&
    ln -s '$splitby.nameOrCount' splitby.nameOrCount.dat &&
    ln -s '$splitby.taxonomy' splitby.taxonomy.dat &&
#end if

echo 'cluster.split(
    splitmethod=$splitby.splitmethod,
    #if $splitby.splitmethod == "distance":
        #if $splitby.matrix.format == "column":
            column=splitby.matrix.dist.dat,
            #if $splitby.matrix.nameOrCount.is_of_type("mothur.names"):
                name=splitby.matrix.nameOrCount.dat,
            #elif $splitby.matrix.nameOrCount.is_of_type("mothur.count_table"):
                count=splitby.matrix.nameOrCount.dat,
            #end if
        #elif $splitby.matrix.format == "phylip":
            phylip=splitby.matrix.dist.dat,
            #if $splitby.matrix.nameOrCount:
                #if $splitby.matrix.nameOrCount.is_of_type("mothur.names"):
                    name=splitby.matrix.nameOrCount.dat,
                #elif $splitby.matrix.nameOrCount.is_of_type("mothur.count_table"):
                    count=splitby.matrix.nameOrCount.dat,
                #end if
            #end if
        #end if
    #elif $splitby.splitmethod == "classify":
        column=splitby.dist.dat,
        taxonomy=splitby.taxonomy.dat,
        #if $splitby.nameOrCount.is_of_type("mothur.names"):
            name=splitby.nameOrCount.dat,
        #elif $splitby.nameOrCount.is_of_type("mothur.count_table"):
            count=splitby.nameOrCount.dat,
        #end if
        #if $splitby.taxlevel:
            taxlevel=$splitby.taxlevel,
        #end if
    #elif $splitby.splitmethod == "fasta":
        fasta=splitby.fasta.dat,
        taxonomy=splitby.taxonomy.dat,
        #if $splitby.nameOrCount.is_of_type("mothur.names"):
            name=splitby.nameOrCount.dat,
        #elif $splitby.nameOrCount.is_of_type("mothur.count_table"):
            count=splitby.nameOrCount.dat,
        #end if
        #if $splitby.taxlevel:
            taxlevel=$splitby.taxlevel,
        #end if
        classic=$splitby.classic,
    #end if
    method=$splitby.condmethod.method,
    #if $splitby.condmethod.method == "opti":
        metric=$splitby.condmethod.metric,
        initialize=$splitby.condmethod.initialize,
        delta=$splitby.condmethod.delta,
        iters=$splitby.condmethod.iters,
    #end if
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $precision
        precision=$precision,
    #end if
    large=$large,
    cluster=$cluster,
    runsensspec=$runsensspec,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to OTUs and split large matrices" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.02810-10" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ;
                    gal:requirement [ gal:type "package" ;
                            gal:version "2.6.0" ;
                            dc:description "vsearch" ] ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The cluster.split_ command assign sequences to OTUs (Operational Taxonomy Unit).

.. _cluster.split: https://www.mothur.org/wiki/Cluster.split

v1.28.0: Upgraded to Mothur 1.33, introduced cluster boolean.

    """ ;
            gal:id "mothur_cluster_split" ;
            gal:inputs [ gal:conditional [ gal:name "splitby" ;
                            gal:param [ gal:help "VSEARCH methods (agc and dgc) require a fasta file" ;
                                    gal:label "Split by" ;
                                    gal:name "splitmethod" ;
                                    gal:option [ gal:value "distance" ;
                                            dc:description "Distance" ],
                                        [ gal:value "classify" ;
                                            dc:description "Classification" ],
                                        [ gal:value "fasta" ;
                                            dc:description "Classification using fasta" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:conditional [ gal:expand [ gal:macro "param-clustermethods" ] ;
                                            gal:name "condmethod" ;
                                            gal:when [ gal:value "furthest" ],
                                                [ gal:expand [ gal:macro "params-opticlust" ] ;
                                                    gal:value "opti" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "nearest" ],
                                                [ gal:value "average" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:argument "taxlevel" ;
                                            gal:help "taxonomy level you want to use to split the distance file, default=1, meaning use the first taxon in each list" ;
                                            gal:label "taxlevel - taxonomy level for split (default=1)" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "1" ],
                                        [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy (from Classify.seqs)" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:name "nameOrCount" ;
                                            gal:type "data" ],
                                        [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "classify" ;
                                    dc:description """
                """ ],
                                [ gal:conditional [ gal:expand [ gal:macro "param-clustermethods" ] ;
                                            gal:name "condmethod" ;
                                            gal:when [ gal:value "nearest" ],
                                                [ gal:value "average" ],
                                                [ gal:value "furthest" ],
                                                [ gal:expand [ gal:macro "params-opticlust" ] ;
                                                    gal:value "opti" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ],
                                        [ gal:name "matrix" ;
                                            gal:param [ gal:label "Select a Distance Matrix Format" ;
                                                    gal:name "format" ;
                                                    gal:option [ gal:value "phylip" ;
                                                            dc:description "Phylip Distance Matrix" ],
                                                        [ gal:value "column" ;
                                                            dc:description "Pairwise Column Matrix" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:argument "phylip" ;
                                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                                            gal:label "phylip - Distance Matrix" ;
                                                            gal:name "dist" ;
                                                            gal:type "data" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:name "nameOrCount" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ] ;
                                                    gal:value "phylip" ;
                                                    dc:description """
                        """ ],
                                                [ gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:name "nameOrCount" ;
                                                            gal:type "data" ],
                                                        [ gal:argument "column" ;
                                                            gal:format "mothur.pair.dist" ;
                                                            gal:label "column - Distance Matrix" ;
                                                            gal:name "dist" ;
                                                            gal:type "data" ] ;
                                                    gal:value "column" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ] ;
                                    gal:value "distance" ;
                                    dc:description """
                """ ],
                                [ gal:conditional [ gal:expand [ gal:expand [ gal:macro "option-vsearch-clustermethods" ] ;
                                                    gal:macro "param-clustermethods" ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "condmethod" ;
                                            gal:when [ gal:value "dgc" ],
                                                [ gal:value "nearest" ],
                                                [ gal:value "average" ],
                                                [ gal:expand [ gal:macro "params-opticlust" ] ;
                                                    gal:value "opti" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "furthest" ],
                                                [ gal:value "agc" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:argument "classic" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "classic - Use cluster.classic" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:help "can be obtained by running classify.seqs" ;
                                            gal:label "Taxonomy" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:name "nameOrCount" ;
                                            gal:type "data" ],
                                        [ gal:argument "taxlevel" ;
                                            gal:help "taxonomy level you want to use to split the distance file, default=1, meaning use the first taxon in each list" ;
                                            gal:label "taxlevel - taxonomy level for split (default=3)" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "3" ],
                                        [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "runsensspec" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "run the sens.spec command on the completed list file" ;
                            gal:label "runsensspec" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this, a common value would be 0.25" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0.0" ;
                            gal:type "float" ;
                            gal:value "0.0" ],
                        [ gal:argument "large" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If your job fails due to not enough memory error, set this to true to rerun" ;
                            gal:label "large - distance matrix is too large to fit in RAM" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "precision" ;
                            gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:option [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ],
                                [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:value "10" ;
                                    dc:description ".1" ],
                                [ gal:value "100000" ;
                                    dc:description ".00001" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "cluster" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "indicate whether you want to run the clustering or just split the distance matrix" ;
                            gal:label "perform clustering?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Cluster.split" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.names\\.(?P<designation>.*)\\.temp" ] ;
                            gal:filter "not cluster" ;
                            gal:label "${tool.name} on ${on_string}: split names" ;
                            gal:name "splitnames" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.column\\.dist\\.(?P<designation>.*)\\.temp" ] ;
                            gal:filter "not cluster" ;
                            gal:label "${tool.name} on ${on_string}: split dist" ;
                            gal:name "splitdist" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "runsensspec and splitby['condmethod']['method'] == \"opti\"" ;
                            gal:format "txt" ;
                            gal:from_work_dir "splitby.*.sensspec" ;
                            gal:label "${tool.name} on ${on_string}: sensspec" ;
                            gal:name "sensspec" ;
                            dc:description """
            """ ],
                        [ gal:filter "not cluster" ;
                            gal:format "txt" ;
                            gal:from_work_dir "splitby.*.file" ;
                            gal:label "${tool.name} on ${on_string}: split.file" ;
                            gal:name "splitfile" ;
                            dc:description """
            """ ],
                        [ gal:filter "splitby['matrix']['nameOrCount'].ext != \"mothur.count_table\"",
                                "splitby['nameOrCount'].ext != \"mothur.count_table\"" ;
                            gal:format "mothur.sabund" ;
                            gal:from_work_dir "splitby.*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            gal:name "sabund" ;
                            dc:description """
             """ ],
                        [ gal:format "mothur.list" ;
                            gal:from_work_dir "splitby.*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            gal:name "otulist" ],
                        [ gal:filter "splitby['matrix']['nameOrCount'].ext != \"mothur.count_table\"",
                                "splitby['nameOrCount'].ext != \"mothur.count_table\"" ;
                            gal:format "mothur.rabund" ;
                            gal:from_work_dir "splitby.*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            gal:name "rabund" ;
                            dc:description """
             """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with opticlust method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-sensspec-format" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "sensspec" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-sabund-format" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-rabund-format" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "phylip" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:name "method" ;
                                    gal:value "opti" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "splitmethod" ;
                                    gal:value "distance" ] ],
                        [ gal: " test with distance method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^unique(\\t\\d+)+$" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^unique(\\t\\d+)+$" ] ;
                                            gal:has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "U68680" ],
                                                [ gal:text "unique" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "phylip" ],
                                [ gal:name "method" ;
                                    gal:value "average" ],
                                [ gal:name "splitmethod" ;
                                    gal:value "distance" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with fasta " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "65ec9f326cd92fc607679b9902ec8430" ;
                                    gal:name "rabund" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "854d3acd15f64299c5d9d9e18f2d51b4" ;
                                    gal:name "sabund" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:md5 "a1279248cf2bc1094e0046b2cff1b785" ;
                                    gal:name "otulist" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "method" ;
                                    gal:value "average" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "amazon.align_head.wang.taxonomy" ],
                                [ gal:name "cutoff" ;
                                    gal:value "9999" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon.align_head.names" ],
                                [ gal:name "splitmethod" ;
                                    gal:value "fasta" ] ],
                        [ gal: " test with vsearch executable (agc/dgc method) " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "dcccca11d9fa7a186cd93e9d4592f832" ;
                                    gal:name "rabund" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:md5 "0fbc5bf21331538dd50b6586c4005edc" ;
                                    gal:name "otulist" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "167815924b1b2b4d4e5e7468d41256cb" ;
                                    gal:name "sabund" ] ;
                            gal:param [ gal:name "splitmethod" ;
                                    gal:value "fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "amazon.align_head.wang.taxonomy" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "method" ;
                                    gal:value "agc" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon.align_head.names" ] ],
                        [ gal: " test with classify method (mothur.names input file) " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.list" ;
                                    gal:md5 "d6eba624ad79759c530b9bc3285a1361" ;
                                    gal:name "otulist" ],
                                [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "2a165e1e40644fccb8cc9f53d8915bc3" ;
                                    gal:name "rabund" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "7aad8a9ca0eade414d6eba1f8bef960f" ;
                                    gal:name "sabund" ] ;
                            gal:param [ gal:name "splitmethod" ;
                                    gal:value "classify" ],
                                [ gal:name "format" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "amazon.wang.wang.taxonomy" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "method" ;
                                    gal:value "average" ] ],
                        [ gal: " test with classify method (mothur.count_table input file) " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.list" ;
                                    gal:md5 "c5c28330434d3e773221f635d04d6af9" ;
                                    gal:name "otulist" ] ;
                            gal:param [ gal:name "method" ;
                                    gal:value "average" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "splitmethod" ;
                                    gal:value "classify" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "amazon.wang.wang.taxonomy" ],
                                [ gal:name "format" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon.count_table" ] ],
                        [ gal: " test with cluster false " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "temp" ],
                                                [ gal:text "dist" ],
                                                [ gal:text "names" ],
                                                [ gal:text "column" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "splitfile" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "14" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "U68591" ],
                                                        [ gal:text "U68600" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.names" ;
                                            gal:name "0" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "splitnames" ;
                                    dc:description """
                """ ],
                                [ gal:count "13" ;
                                    gal:element [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^U\\d+\\tU\\d+\\t\\d+\\.\\d+$" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.dist" ;
                                            gal:name "4" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "splitdist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "splitmethod" ;
                                    gal:value "distance" ],
                                [ gal:name "format" ;
                                    gal:value "phylip" ],
                                [ gal:name "method" ;
                                    gal:value "average" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:name "cluster" ;
                                    gal:value "false" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "cluster.split" ;
            schema:sku 47 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$group' group.dat &&

echo 'libshuff(
    phylip=dist.dat,
    group=group.dat,
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    sim=$sim,
    #if $form.form2 == "discrete":
        step=$form.step,
        #if $form.cutoff:
            cutoff=$form.cutoff,
        #end if
    #end if
    iters=$iters
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Cramer-von Mises tests communities for the same structure" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.70.9.5485-5492.2004" ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.67.9.4374-4376.2001" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The libshuff_ method is a generic test that describes whether two or more communities have the same structure using the Cramer-von Mises test statistic. The significance of the test statistic indicates the probability that the communities have the same structure by chance. Because each pairwise comparison requires two significance tests, a correction for multiple comparisons (e.g. Bonferroni's correction) must be applied.

.. _libshuff: https://www.mothur.org/wiki/Libshuff

    """ ;
            gal:id "mothur_libshuff" ;
            gal:inputs [ gal:conditional [ gal:name "form" ;
                            gal:param [ gal:help "" ;
                                    gal:label "form - Select a Clustering Method" ;
                                    gal:name "form2" ;
                                    gal:option [ gal:value "discrete" ;
                                            dc:description "Discrete" ],
                                        [ gal:selected "true" ;
                                            gal:value "integral" ;
                                            dc:description "Integral" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "integral" ],
                                [ gal:param [ gal:label "cutoff - Cutoff threshold - ignored if left empty" ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:name "cutoff" ;
                                            gal:optional "true" ;
                                            gal:type "float" ;
                                            gal:value "" ],
                                        [ gal:help "default value 0.10, smaller steps approach integral" ;
                                            gal:label "step - Step size - ignored if not > 0" ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:name "step" ;
                                            gal:type "float" ;
                                            gal:value "0.10" ] ;
                                    gal:value "discrete" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:name "sim" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:name "dist" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:name "group" ;
                            gal:type "data" ],
                        [ gal:label "groups - Groups to condider" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "iters - Number of iterations to try (default 10000)" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "10000" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Libshuff" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.coverage" ;
                            gal:label "${tool.name} on ${on_string}: coverage" ;
                            gal:name "coverage" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "forest-pasture" ],
                                                [ gal:text "dist" ],
                                                [ gal:text "pasture-forest" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "coverage" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "forest-pasture" ],
                                                [ gal:text "pasture-forest" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "pasture-forest" ],
                                                [ gal:text "forest-pasture" ],
                                                [ gal:text "dist" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "coverage" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "forest-pasture" ],
                                                [ gal:text "pasture-forest" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "cutoff" ;
                                    gal:value "0.25" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "step" ;
                                    gal:value "0.25" ],
                                [ gal:name "form2" ;
                                    gal:value "discrete" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "libshuff" ;
            schema:sku 102 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&

echo 'heatmap.bin(
    #if $input.otu.is_of_type("mothur.rabund"):
        rabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.sabund"):
        sabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.list"):
        list=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.relabund"):
        relabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.shared"):
        shared=input_otu.dat,
    #end if
    #if $input.has_groups == 'yes' and $input.groups:
        groups=${ str($input.groups).replace(",","-") },
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    scale=$scale,
    sorted=$sorted,
    numotu=$numotu,
    fontsize=$fontsize
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a heatmap for OTUs" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The heatmap.bin_ command generates a heat map from data provided in either a list_ or a shared_ file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _heatmap.bin: https://www.mothur.org/wiki/Heatmap.bin

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_heatmap_bin" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:name "has_groups" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "list, rabund, sabund" ],
                                        [ gal:value "yes" ;
                                            dc:description "shared, relabund" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared,mothur.relabund" ;
                                            gal:label "shared or relabund file - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund" ;
                                            gal:label "list,rabund,sabund - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "no" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "fontsize" ;
                            gal:type "integer" ;
                            gal:value "24" ],
                        [ gal:label "sorted - Sort heatmap" ;
                            gal:name "sorted" ;
                            gal:option [ gal:value "topgroup" ;
                                    dc:description "By Total Groups" ],
                                [ gal:selected "true" ;
                                    gal:value "shared" ;
                                    dc:description "By shared" ],
                                [ gal:value "topotu" ;
                                    dc:description "By Total OTUs" ],
                                [ gal:value "none" ;
                                    dc:description "Don't sort" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "numotu - Limit the number of OTUs displayed (ignored if 0)" ;
                            gal:min "0" ;
                            gal:name "numotu" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:label "scale - Scaling for heatmap" ;
                            gal:name "scale" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "log10" ;
                                    dc:description "Log10" ],
                                [ gal:value "log2" ;
                                    dc:description "Log2" ],
                                [ gal:value "linear" ;
                                    dc:description "Linear" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Heatmap.bin" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern ".*?\\.(?P<designation>.*)\\.bin\\.svg" ] ;
                            gal:label "${tool.name} on ${on_string}: Heatmaps" ;
                            gal:name "heatmaps" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "1" ;
                                    gal:element [ gal:md5 "b2b46b7e55f55e2b260cd6dc6ccb4485" ;
                                            gal:name "0.26.heatmap" ] ;
                                    gal:name "heatmaps" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.26" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ],
                                [ gal:name "has_groups" ;
                                    gal:value "yes" ],
                                [ gal:ftype "mothur.relabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.relabund" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:md5 "8f0d5cb95808115e50729e6df60629cc" ;
                                            gal:name "0.26.heatmap" ] ;
                                    gal:name "heatmaps" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "has_groups" ;
                                    gal:value "no" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:md5 "b46ed47e441a30588f60e1554ff703bb" ;
                                            gal:name "0.26.heatmap" ] ;
                                    gal:name "heatmaps" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "scale" ;
                                    gal:value "linear" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fontsize" ;
                                    gal:value "100" ],
                                [ gal:name "sorted" ;
                                    gal:value "none" ],
                                [ gal:name "has_groups" ;
                                    gal:value "yes" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.26,0.55" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "heatmap.bin" ;
            schema:sku 114 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'summary.shared(
    shared=otu.dat,
    #if $groups:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    all=$all,
    distance=$distance,
    #if $subsample.use == "yes":
        #if $subsample.subsample:
            subsample=$subsample.subsample,
        #else
            subsample=T,
        #end if
        #if $subsample.iters:
            iters=$subsample.iters,
        #end if
    #end if
    output=$output,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Summary of calculator values for OTUs" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The summary.shared_ command produce a summary file that has the calculator value for each line in the OTU data of the shared_ file and for all possible comparisons between the different groups in the group_ file.  This can be useful if you aren't interested in generating collector's or rarefaction curves for your multi-sample data analysis. It would be worth your while, however, to look at the collector's curves for the calculators you are interested in to determine how sensitive the values are to sampling. If the values are not sensitive to sampling, then you can trust the values. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _summary.shared: https://www.mothur.org/wiki/Summary.shared

    """ ;
            gal:id "mothur_summary_shared" ;
            gal:inputs [ gal:conditional [ gal:name "subsample" ;
                            gal:param [ gal:label "produce subsample distance matrices" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "Leave blank to use the size of your smallest group" ;
                                            gal:label "subsample - size pergroup of the sample" ;
                                            gal:name "subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ],
                                        [ gal:label "iters - Number of times to run the subsample" ;
                                            gal:min "1" ;
                                            gal:name "iters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal: " set default option(s) " ;
                            gal:expand [ gal:macro "calc-common" ] ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedchao" ;
                                    dc:description "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "thetan" ;
                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jest" ;
                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jabund" ;
                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sorclass" ;
                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedsobs" ;
                                    dc:description "sharedsobs - Shared community richness the observed richness shared between two or more samples" ],
                                [ gal:selected "true" ;
                                    gal:value "sorest" ;
                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedace" ;
                                    dc:description "sharedace - Shared community richness the two sample shared ACE richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "sorabund" ;
                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:name "output" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "all - Include RAM intensive sharedsobs and sharedchao calculations" ;
                            gal:name "all" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "distance - Output a distance file for each calculator at each label" ;
                            gal:name "distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Summary.shared" ;
            gal:outputs [ gal:collection [ gal: """ doesn't seem to work for collection elements yet
            <change_format>
                <when input="output" value="lt" format="mothur.lower.dist"/>
                <when input="output" value="square" format="mothur.square.dist"/>
            </change_format>
            """ ;
                            gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.dist" ] ;
                            gal:filter "distance" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:name "distfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: shared.summary" ;
                            gal:name "summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "29384359e341721b3519fba35b9301e4" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with subsample " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "pasture" ],
                                                [ gal:text "forest" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.mothur.shared" ],
                                [ gal:name "subsample" ;
                                    gal:value "10" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "iters" ;
                                    gal:value "42" ] ],
                        [ gal: " test with distance output collection " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "forest" ],
                                                [ gal:text "pasture" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "forest" ],
                                                        [ gal:text "pasture" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.dist" ;
                                            gal:name "sorclass.0.29.lt" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "distfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "distance" ;
                                    gal:value "true" ],
                                [ gal:name "calc" ;
                                    gal:value "sorclass" ] ],
                        [ gal: " test with label and groups select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "acd56d4ab09ec1c2117f5e4840a875a1" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.32" ],
                                [ gal:name "calc" ;
                                    gal:value "sharedsobs,sharedchao,sharedace,anderberg,jclass,jest,kulczynski,kulczynskicody,kstest,lennon,ochiai,sorclass,sorest,whittaker,hamming,memchi2,memchord,memeuclidean,mempearson,braycurtis,jabund,morisitahorn,sorabund,thetan,thetayc,canberra,gower,hellinger,manhattan,odum,soergel,spearman,speciesprofile,structchi2,structchord,structeuclidean,structkulczynski,structpearson,sharednseqs,sharedobserved" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "summary.shared" ;
            schema:sku 68 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&
#if $trim.method == "oligos":
    ln -s '$trim.oligos' trim.oligos.dat &&
#elif $trim.method == "reference":
    ln -s '$trim.ecoli' trim.ecoli.dat &&
#end if

echo 'pcr.seqs(
    fasta=fasta.dat,
    #if $name_in
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $taxonomy_in:
        taxonomy=taxonomy_in.dat,
    #end if
    #if $trim.method == "oligos":
        oligos=trim.oligos.dat,
        nomatch=$trim.nomatch,
        $trim.keepprimer
    #elif $trim.method == "reference":
        ecoli=trim.ecoli.dat,
    #elif $trim.method == "position":
        start=$trim.start,
        #if $trim.end and int($trim.end) > 0:
            end=$trim.end,
        #end if
    #end if
    pdiffs=$pdiffs,
    rdiffs=$rdiffs,
    $keepdots
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Trim sequences" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The pcr.seqs_ command assigns sequences to chosen taxonomy outline.

.. _pcr.seqs: https://www.mothur.org/wiki/Pcr.seqs

    """ ;
            gal:id "mothur_pcr_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "trim" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:name "method" ;
                                    gal:option [ gal:value "position" ;
                                            dc:description "start and end positions" ],
                                        [ gal:value "reference" ;
                                            dc:description "reference sequence" ],
                                        [ gal:value "oligos" ;
                                            dc:description "oligos" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "nomatch - action when no primer is found" ;
                                            gal:name "nomatch" ;
                                            gal:option [ gal:value "keep" ;
                                                    dc:description "keep" ],
                                                [ gal:selected "true" ;
                                                    gal:value "reject" ;
                                                    dc:description "reject (default)" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:name "oligos" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "" ;
                                            gal:label "keepprimer - keep the primer in the output sequence" ;
                                            gal:name "keepprimer" ;
                                            gal:truevalue "keepprimer=true," ;
                                            gal:type "boolean" ] ;
                                    gal:value "oligos" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:label "start - a starting position to trim to" ;
                                            gal:min "0" ;
                                            gal:name "start" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "end - a ending position to trim from" ;
                                            gal:min "0" ;
                                            gal:name "end" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ] ;
                                    gal:value "position" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.align" ;
                                            gal:help "The ecoli parameter is used to provide a fasta file containing a single reference sequence (e.g. for e. coli) this must be aligned. Mothur will trim to the start and end positions of the reference sequence." ;
                                            gal:label "ecoli - An aligned reference sequence for trimming" ;
                                            gal:name "ecoli" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "reference" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Sequence Taxonomy" ;
                            gal:name "taxonomy_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "rdiffs - number of differences to allow in the reverse primers (default 0)" ;
                            gal:min "0" ;
                            gal:name "rdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:help "sequences must be aligned" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:label "pdiffs - number of differences to allow in the forward primers (default 0)" ;
                            gal:min "0" ;
                            gal:name "pdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequence representative name list" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "keepdots=false," ;
                            gal:label "keepdots - keep the leading and trailing alignment dots in the output sequences" ;
                            gal:name "keepdots" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Pcr.seqs" ;
            gal:outputs [ gal:data [ gal:filter "trim['method'] =='oligos'" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta*.bad.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bad.accnos" ;
                            gal:name "accnos_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: mothur.names" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.scrap.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: pcr.scrap.fasta" ;
                            gal:name "scrap_fasta" ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: mothur.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.pcr.dat" ;
                            gal:label "${tool.name} on ${on_string}: pcr.fasta" ;
                            gal:name "pcr_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with position method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.align" ;
                                    gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "4f9c3a835bbba51c64fbf86c8a467d0e" ;
                                    gal:name "pcr_fasta" ] ;
                            gal:param [ gal:name "keepdots" ;
                                    gal:value "" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "end" ;
                                    gal:value "0" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "0" ],
                                [ gal:name "start" ;
                                    gal:value "0" ],
                                [ gal:name "method" ;
                                    gal:value "position" ] ],
                        [ gal: " test with reference method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.names" ;
                                    gal:md5 "0c58174137c2ecabf7da9ab492ea46fc" ;
                                    gal:name "name_out" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "4bef877bd45f47041f3d17dc017f21ea" ;
                                    gal:name "pcr_fasta" ] ;
                            gal:param [ gal:name "pdiffs" ;
                                    gal:value "2" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "ecoli" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "name_in" ;
                                    gal:value "amazon.align_head.names" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "method" ;
                                    gal:value "reference" ],
                                [ gal:name "keepdots" ;
                                    gal:value "keepdots=false," ] ],
                        [ gal: " test with oligos and all outputs " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.align" ;
                                    gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                    gal:name "pcr_fasta" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "48d019b92e4d303faf88a974e52f7a97" ;
                                    gal:name "accnos_out" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "0b63807f339dfd88cf958f7b069eba02" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:md5 "4d72981cefd8b45d4f2793a28dccd9e4" ;
                                    gal:name "taxonomy_out" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "301c358e61d38c83cc7382a8a210089a" ;
                                    gal:name "group_out" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "62eb1162557408509c931496071add85" ;
                                    gal:name "name_out" ] ;
                            gal:param [ gal:name "method" ;
                                    gal:value "oligos" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "amazon.names" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "end" ;
                                    gal:value "50" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_in" ;
                                    gal:value "amazon.wang.wang.taxonomy" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "start" ;
                                    gal:value "5" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "pcr.seqs" ;
            schema:sku 52 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$taxonomy' taxonomy.dat &&

echo 'classify.tree(
    tree=tree.dat,
    #if $name
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    taxonomy=taxonomy.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get a consensus taxonomy for each node on a tree" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The classify.tree_ command is used to get a consensus taxonomy for each node on a tree.
Input is a taxonomy_ and a tree_ with optional name_ or group_ reference.
The output is a tree_ and a summary..

  TreeNode  NumRep  Taxonomy
  243   2   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  244   3   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  245   4   Bacteria(100);"Firmicutes"(100);"Clostridia"(100);Clostridiales(100);"Ruminococcaceae"(100);Faecalibacterium(100);
  ...


.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _tree: http://evolution.genetics.washington.edu/phylip/newicktree.html
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _classify.tree: https://www.mothur.org/wiki/Classify.tree

v.1.25.0: Trivial upgrade to Mothur 1.33

    """ ;
            gal:id "mothur_classify_tree" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "cutoff" ;
                            gal:help "The default is 51, meaning 51%. Cutoff cannot be below 51" ;
                            gal:label "cutoff - consensus confidence threshold" ;
                            gal:max "100" ;
                            gal:min "51" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "51" ],
                        [ gal:argument "taxonomy" ;
                            gal:format "mothur.ref.taxonomy" ;
                            gal:label "taxonomy - Taxonomy to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "tree" ;
                            gal:format "txt" ;
                            gal:label "tree - Sequences to filter" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Group reference" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Classify.tree" ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "tree.*taxonomy.tre" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy.tre" ;
                            gal:name "out_tree" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree.*taxonomy.summary" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy.summary" ;
                            gal:name "summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "78dfe4198793f7ee5632c5b88b6bc295" ;
                                    gal:name "summary" ],
                                [ gal:ftype "txt" ;
                                    gal:md5 "cd2d3275d225ee8ba5df004a9885f50c" ;
                                    gal:name "out_tree" ] ;
                            gal:param [ gal:ftype "txt" ;
                                    gal:name "tree" ;
                                    gal:value "treetest.tre" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.ref.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "classify.tree" ;
            schema:sku 127 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'pca(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    metric=$metric
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Principal Coordinate Analysis for a shared file" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:expand [ gal:macro "citations-ecology" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The pca_ command generate principle components plot data for a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _pca: https://www.mothur.org/wiki/Pca

    """ ;
            gal:id "mothur_pca" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "metric - Calculate pearson correlation coefficient" ;
                            gal:name "metric" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Pca" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "txt" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pca\\.loadings" ] ;
                            gal:label "${tool.name} on ${on_string}: pca.loadings" ;
                            gal:name "pca_loadings" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.axes" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pca\\.axes" ] ;
                            gal:label "${tool.name} on ${on_string}: pca.axes" ;
                            gal:name "pca_axes" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.axes" ;
                                            gal:md5 "4e32155fcfefe7d2f45b896d26b36409" ;
                                            gal:name "0.22" ] ;
                                    gal:name "pca_axes" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "txt" ;
                                            gal:md5 "8c76b60484ffcab2ef7230e29071dd51" ;
                                            gal:name "0.55" ] ;
                                    gal:name "pca_loadings" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.22,0.55" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "pca" ;
            schema:sku 64 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$count' count.dat &&
#if $input.source == 'shared':
    ln -s '$input.otu' input_otu.dat &&
#else
    ln -s '$input.dist' input_dist.dat &&
    #if $input.source == 'column':
        ln -s '$input.name' input_name.dat &&
    #end if
#end if

echo 'heatmap.sim(
    #if $input.source == "shared":
        shared=input_otu.dat,
        #if $input.label:
            label=${ str($input.label).replace(",","-") },
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.calc:
            calc=${ str($input.calc).replace(",","-") },
        #end if
    #elif $input.source == "column":
        column=input_dist.dat,
        name=input_name.dat,
    #elif $input.source == "phylip":
        phylip=input_dist.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    fontsize=$fontsize
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a heatmap for pariwise similarity" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The heatmap.sim_ command generates a heat map from data provided in either a shared_ file, a phylip_ distance matrix, or a column_ distance matrix and a name_ file.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _phylip: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _column: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _name: https://www.mothur.org/wiki/Name_file
.. _heatmap.sim: https://www.mothur.org/wiki/Heatmap.sim

v.1.24.0: Updated to Mothur 1.33, added count parameter

    """ ;
            gal:id "mothur_heatmap_sim" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "colomn - Pairwise Column Distance Matrix" ],
                                        [ gal:value "shared" ;
                                            dc:description "shared - Sample Similarity - OTU Shared" ],
                                        [ gal:value "phylip" ;
                                            dc:description "phylip - Phylip Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:name "name" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:name "calc" ;
                                            gal:option [ gal:value "sorest" ;
                                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                                [ gal:value "morisitahorn" ;
                                                    dc:description "morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient" ],
                                                [ gal:value "jabund" ;
                                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ],
                                                [ gal:value "sorabund" ;
                                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ],
                                                [ gal:value "jclass" ;
                                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ],
                                                [ gal:value "thetan" ;
                                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                                [ gal:selected "true" ;
                                                    gal:value "jest" ;
                                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                                [ gal:value "sorclass" ;
                                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                                [ gal:value "braycurtis" ;
                                                    dc:description "braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient" ],
                                                [ gal:selected "true" ;
                                                    gal:value "thetayc" ;
                                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "fontsize" ;
                            gal:type "integer" ;
                            gal:value "24" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Heatmap.sim" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern ".*?\\.(?P<designation>.*)\\.sim\\.svg" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: Heatmaps" ;
                            gal:name "heatmaps" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format "svg" ;
                            gal:from_work_dir "input_dist*.heatmap.sim.svg" ;
                            gal:label "${tool.name} on ${on_string}: heatmap.sim.svg" ;
                            gal:name "heatmap" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "30" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "svg xmlns:svg=" ],
                                                        [ gal:text "Heatmap at distance 0.03" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "0.03.braycurtis.heatmap" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "heatmaps" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03,0.26,0.55" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "calc" ;
                                    gal:value "jclass,jest,sorclass,sorest,braycurtis,jabund,morisitahorn,sorabund,thetan,thetayc" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "72" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "svg xmlns:svg=" ],
                                                        [ gal:text "Heatmap at distance 0.55" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "0.55.jest.heatmap" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "heatmaps" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "Heatmap for" ],
                                                [ gal:text "svg xmlns:svg=" ],
                                                [ gal:text "U68640" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "heatmap" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "heatmap.sim" ;
            schema:sku 8 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$matrix.dist' matrix.dist.dat &&
ln -s '$matrix.name' matrix.name.dat &&
ln -s '$count' count.dat &&

echo 'cluster(
    #if $matrix.format == "phylip":
        phylip=matrix.dist.dat,
    #else
        column=matrix.dist.dat,
    #end if
    #if $matrix.name:
        name=matrix.name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $select_method.method =="opti":
        metric=$select_method.metric,
        initialize=$select_method.initialize,
        delta=$select_method.delta,
        iters=$select_method.iters,
    #end if
    precision=$precision,
    sim=$sim,
    method=$select_method.method
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to OTUs (Operational Taxonomic Unit)" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.02810-10" ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.71.3.1501-1506.2005" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ;
                    gal:requirement [ gal:type "package" ;
                            gal:version "2.6.0" ;
                            dc:description "vsearch" ] ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The cluster_ command assign sequences to OTUs (Operational Taxonomy Unit).  The assignment is based on a phylip-formatted_distance_matrix_ or a  column-formatted_distance_matrix_ and name_ file.  It generates a list_, a sabund_ (Species Abundance), and a rabund_ (Relative Abundance) file.

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _name: https://www.mothur.org/wiki/Name_file
.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _cluster: https://www.mothur.org/wiki/Cluster

    """ ;
            gal:id "mothur_cluster" ;
            gal:inputs [ gal:conditional [ gal:name "matrix" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Cluster based on" ;
                                    gal:name "format" ;
                                    gal:option [ gal:value "fasta" ;
                                            dc:description "Fasta (VSEARCH)" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Matrix" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ],
                                        [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:expand [ gal:macro "option-vsearch-clustermethods" ] ;
                                    gal:macro "param-clustermethods" ;
                                    dc:description """
                """ ] ;
                            gal:name "select_method" ;
                            gal:when [ gal:value "nearest" ],
                                [ gal:value "average" ],
                                [ gal:expand [ gal:macro "params-opticlust" ] ;
                                    gal:value "opti" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "agc" ;
                                    dc:description """
                """ ],
                                [ gal:value "furthest" ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align,fasta" ;
                                            gal:label "Fasta file" ;
                                            gal:type "data" ] ;
                                    gal:value "dgc" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0.0" ;
                            gal:type "float" ;
                            gal:value "0.0" ],
                        [ gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:name "precision" ;
                            gal:option [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:value "100000" ;
                                    dc:description ".00001" ],
                                [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "10" ;
                                    dc:description ".1" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "sim" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Cluster" ;
            gal:outputs [ gal:data [ gal:format "mothur.list" ;
                            gal:from_work_dir "matrix.dist*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            gal:name "otulist" ],
                        [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "matrix.dist*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            gal:name "rabund" ],
                        [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "matrix.dist*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            gal:name "sabund" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with column input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.03" ],
                                                [ gal:text "U68688" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "format" ;
                                    gal:value "column" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ] ],
                        [ gal: " test with phylip input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.03" ],
                                                [ gal:text "U68688" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "format" ;
                                    gal:value "phylip" ] ],
                        [ gal: " test with column input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^0\\.03(\\t\\d+)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.03" ],
                                                [ gal:text "U68688" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "name" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "format" ;
                                    gal:value "column" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "cluster" ;
            schema:sku 22 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## Symlinks creation or On the fly creation of a combo file
#if $input_type.type == 'list_collection'
    #for $pair in $input_type.list_paired_collection:
        ln -s ${pair.forward} `basename ${pair.forward}` &&
        ln -s ${pair.reverse} `basename ${pair.reverse}` &&
        echo -e "${pair.name}\\t`basename ${pair.forward}`\\t`basename ${pair.reverse}`" >> combo_fastq.dat &&
    #end for
#elif $input_type.type == 'simple_collection'
    ln -s '$input_type.paired_collection.forward' ffastq.dat &&
    ln -s '$input_type.paired_collection.reverse' rfastq.dat &&
#else
    ln -s '$input_type.forward_fastq' ffastq.dat &&
    ln -s '$input_type.reverse_fastq' rfastq.dat &&
#end if

#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
    ln -s '$oligo.findex' oligo.findex.dat &&
    ln -s '$oligo.rindex' oligo.rindex.dat &&
#end if

echo 'make.contigs(
    #if $input_type.type == 'list_collection':
        file=combo_fastq.dat,
    #else:
        ffastq=ffastq.dat,
        rfastq=rfastq.dat,
    #end if
    align=$align,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        #if $oligo.findex:
            findex=oligo.findex.dat,
        #end if
        #if $oligo.rindex:
            rindex=oligo.rindex.dat,
        #end if
    #end if
    match=$match,
    mismatch=$mismatch,
    gapopen=$gapopen,
    gapextend=$gapextend,
    rename=$rename
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Aligns paired forward and reverse fastq files to contigs as fasta and quality" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.contigs_ command reads a forward fastq file and a reverse fastq file and outputs new fasta and quality files.

.. _make.contigs: https://www.mothur.org/wiki/Make.contigs

v.1.27.0: Updated to use Mothur 1.33. Added findex and rindex parmaeters, optionally used with the oligos file.

    """ ;
            gal:id "mothur_make_contigs" ;
            gal:inputs [ gal:conditional [ gal:name "oligo" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:name "add" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "pdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\" and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:name "oligos" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "tdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "fastq" ;
                                            gal:label "forward index file (fastq)" ;
                                            gal:name "findex" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "bdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "fastq" ;
                                            gal:label "revese index file (fastq)" ;
                                            gal:name "rindex" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "input_type" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select a way to provide forward and reverse fastq files ?" ;
                                    gal:name "type" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "regular" ;
                                            dc:description "Two simple fastq files (forward and reverse)" ],
                                        [ gal:value "list_collection" ;
                                            dc:description "Multiple pairs - Combo mode (list:paired collection)" ],
                                        [ gal:value "simple_collection" ;
                                            dc:description "One pair (paired collection)" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "fastq" ;
                                            gal:label "Reverse reads" ;
                                            gal:name "reverse_fastq" ;
                                            gal:type "data" ],
                                        [ gal:format "fastq" ;
                                            gal:label "Forward reads" ;
                                            gal:name "forward_fastq" ;
                                            gal:type "data" ] ;
                                    gal:value "regular" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:collection_type "paired" ;
                                            gal:format "fastq" ;
                                            gal:help "Dataset collection made from a single pair of fastq files (forward + reverse)" ;
                                            gal:label "Fastq pair (collection)" ;
                                            gal:name "paired_collection" ;
                                            gal:type "data_collection" ] ;
                                    gal:value "simple_collection" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:collection_type "list:paired" ;
                                            gal:format "fastq" ;
                                            gal:help "Dataset collection made from multiple pairs of fastq files" ;
                                            gal:label "Fastq pairs (collection)" ;
                                            gal:name "list_paired_collection" ;
                                            gal:type "data_collection" ] ;
                                    gal:value "list_collection" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "match - Pairwise alignment reward for a match" ;
                            gal:name "match" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                            gal:name "gapopen" ;
                            gal:type "integer" ;
                            gal:value "-2" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:help "reduce file sizes and greatly reduce the size of the column formatted distance matrix downstream.             Uses the rename.seqs command to rename which creates a map file so you can revert to original names at any time" ;
                            gal:label "Renames sequences" ;
                            gal:name "rename" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                            gal:name "mismatch" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:help "" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:name "align" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default) " ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ],
                                [ gal:value "kmer" ;
                                    dc:description "kmer" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                            gal:name "gapextend" ;
                            gal:type "integer" ;
                            gal:value "-1" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.contigs" ;
            gal:outputs [ gal:data [ gal:format "fasta" ;
                            gal:from_work_dir "*fastq.trim.*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: trim.contigs.fasta" ;
                            gal:name "fasta" ],
                        [ gal:filter "input_type['type'] == 'list_collection'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "*fastq*.groups" ;
                            gal:label "${tool.name} on ${on_string}: group file" ;
                            gal:name "group" ;
                            dc:description """
            """ ],
                        [ gal:format "qual" ;
                            gal:from_work_dir "*fastq*.scrap.*.qual" ;
                            gal:label "${tool.name} on ${on_string}: scrap.contigs.qual" ;
                            gal:name "scrapqual" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "*fastq*.scrap.*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: scrap.contigs.fasta" ;
                            gal:name "scrapfasta" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "*fastq*.contigs.report" ;
                            gal:label "${tool.name} on ${on_string}: report" ;
                            gal:name "report" ],
                        [ gal:format "qual" ;
                            gal:from_work_dir "*fastq*.trim.*.qual" ;
                            gal:label "${tool.name} on ${on_string}: trim.contigs.qual" ;
                            gal:name "qual" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " Test with a list:paired collection as input ",
                        " Test with a simple paired collection as input ",
                        " Test with a simple paired collection as input + extra parameters specified ",
                        " Test with two regular files as input " ;
                    gal:test [ gal:conditional [ gal:name "input_type" ;
                                    gal:param [ gal:ftype "fastq" ;
                                            gal:name "reverse_fastq" ;
                                            gal:value "Mock_S280_L001_R2_001_small.fastq" ],
                                        [ gal:name "type" ;
                                            gal:value "regular" ],
                                        [ gal:ftype "fastq" ;
                                            gal:name "forward_fastq" ;
                                            gal:value "Mock_S280_L001_R1_001_small.fastq" ] ;
                                    dc:description """
                """ ] ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.qual" ;
                                    gal:ftype "qual" ;
                                    gal:name "qual" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.contigs.report" ;
                                    gal:ftype "txt" ;
                                    gal:name "report" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:conditional [ gal:name "input_type" ;
                                    gal:param [ gal:name "type" ;
                                            gal:value "simple_collection" ],
                                        [ gal:collection [ gal:element [ gal:name "reverse" ;
                                                            gal:value "Mock_S280_L001_R2_001_small.fastq" ],
                                                        [ gal:name "forward" ;
                                                            gal:value "Mock_S280_L001_R1_001_small.fastq" ] ;
                                                    gal:type "paired" ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "paired_collection" ;
                                            dc:description """
                    """ ] ;
                                    dc:description """
                """ ] ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.qual" ;
                                    gal:ftype "qual" ;
                                    gal:name "qual" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.contigs.report" ;
                                    gal:ftype "txt" ;
                                    gal:name "report" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:conditional [ gal:name "input_type" ;
                                    gal:param [ gal:collection [ gal:element [ gal:collection [ gal:element [ gal:name "forward" ;
                                                                            gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                                                        [ gal:name "reverse" ;
                                                                            gal:value "Mock_S280_L001_R2_001_small.fastq" ] ;
                                                                    gal:type "paired" ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:name "Pair1" ;
                                                            dc:description """
                            """ ],
                                                        [ gal:collection [ gal:element [ gal:name "reverse" ;
                                                                            gal:value "test_reverse.fastq" ],
                                                                        [ gal:name "forward" ;
                                                                            gal:value "test_forward.fastq" ] ;
                                                                    gal:type "paired" ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:name "Pair2" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:type "list:paired" ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "list_paired_collection" ;
                                            dc:description """
                    """ ],
                                        [ gal:name "type" ;
                                            gal:value "list_collection" ] ;
                                    dc:description """
                """ ] ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "qual" ;
                                    gal:md5 "7094d1ac82a40e9f89cc6cdf5e214da7" ;
                                    gal:name "qual" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "ef83b393be4103f0b61a021234905210" ;
                                    gal:name "group" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "91bd3b91adc6559182ad118b767f0a07" ;
                                    gal:name "fasta" ],
                                [ gal:ftype "txt" ;
                                    gal:md5 "96a07f664105e4ddcb645c7cd9f5d692" ;
                                    gal:name "report" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:conditional [ gal:name "input_type" ;
                                    gal:param [ gal:name "type" ;
                                            gal:value "simple_collection" ],
                                        [ gal:collection [ gal:element [ gal:name "reverse" ;
                                                            gal:value "Mock_S280_L001_R2_001_small.fastq" ],
                                                        [ gal:name "forward" ;
                                                            gal:value "Mock_S280_L001_R1_001_small.fastq" ] ;
                                                    gal:type "paired" ;
                                                    dc:description """
                        """ ] ;
                                            gal:name "paired_collection" ;
                                            dc:description """
                    """ ] ;
                                    dc:description """
                """ ] ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "48e32c65bd9f064c5c0b4ea7695cabe9" ;
                                    gal:name "fasta" ],
                                [ gal:ftype "txt" ;
                                    gal:md5 "5274725ef45890fd6da4650d5d536173" ;
                                    gal:name "report" ],
                                [ gal:ftype "qual" ;
                                    gal:md5 "1e7778cee0d86bfa2759a07bb4356165" ;
                                    gal:name "qual" ] ;
                            gal:param [ gal:name "match" ;
                                    gal:value "2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "mismatch" ;
                                    gal:value "-2" ],
                                [ gal:name "gapopen" ;
                                    gal:value "-3" ],
                                [ gal:name "gapextend" ;
                                    gal:value "-2" ],
                                [ gal:name "align" ;
                                    gal:value "gotoh" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.contigs" ;
            schema:sku 1 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&
#if $input.source == 'list':
    ln -s '$input.group' input.group.dat &&
    ln -s '$input.count' input.count.dat &&
#end if

echo 'remove.rare(
    #if $input.otu.is_of_type("mothur.rabund"):
        rabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.sabund"):
        sabund=input_otu.dat,
    #elif $input.otu.is_of_type("mothur.list"):
        list=input_otu.dat,
        #if $input.group:
            group=input.group.dat,
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.count:
            count=input.count.dat,
        #end if
    #elif $input.otu.is_of_type("mothur.shared"):
        shared=input_otu.dat,
        bygroup=$input.bygroup,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    nseqs=$nseqs
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Remove rare OTUs" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.rare_ command reads one of the following file types: list_, rabund_, sabund_ or shared_ file. It outputs a new file after removing the rare otus.

.. _list: https://www.mothur.org/wiki/List_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _remove.rare: https://www.mothur.org/wiki/Remove.rare

    """ ;
            gal:id "mothur_remove_rare" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Select Input Format" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "shared" ],
                                        [ gal:value "default" ;
                                            dc:description "rabund or sabund" ],
                                        [ gal:value "list" ;
                                            dc:description "list" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:help "If you clustered with a count file, can only supply one of group or count table, not both" ;
                                            gal:label "count - Count Table" ;
                                            gal:name "count" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Pick groups to analyze" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - Otu dataset" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - Groups" ;
                                            gal:name "group" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "false" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "list" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "bygroup - Remove any OTU that has nseqs or fewer sequences across all groups" ;
                                            gal:name "bygroup" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - Otu dataset" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Pick groups to analyze" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.list,mothur.rabund,mothur.sabund" ;
                                            gal:label "list,rabund,sabund - Otu dataset" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "default" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "nseqs - Number of sequences cutoff for an otu to be deemed rare" ;
                            gal:min "0" ;
                            gal:name "nseqs" ;
                            gal:type "integer" ;
                            gal:value "1" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.rare" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared per label" ;
                            gal:name "pick_shared" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format_source "otu" ;
                            gal:from_work_dir "input_otu*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.${input.otu.ext}" ;
                            gal:name "pick_otu" ;
                            dc:description """
            """ ],
                        [ gal:filter "input['source'] == 'list'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "input.group*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            gal:name "pick_group" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "e58da633dd16f0cb6472d6c6b3318c9f" ;
                                            gal:name "0.38" ] ;
                                    gal:name "pick_shared" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with list and group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.list" ;
                                    gal:md5 "4779791c9b0ef95a54083ee1a6ad6c8d" ;
                                    gal:name "pick_otu" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "9561ba470c769670ab6d92563a44027f" ;
                                    gal:name "pick_group" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ] ],
                        [ gal: " test with shared file and label/group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "46d97e6f97e7909d72d09a1726655539" ;
                                            gal:name "0.22" ] ;
                                    gal:name "pick_shared" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.41" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "bygroup" ;
                                    gal:value "true" ] ],
                        [ gal: " test with rabund/sabund file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "ca842ed3ef543d3dd76fd9089cd87c46" ;
                                    gal:name "pick_otu" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.sabund" ],
                                [ gal:name "source" ;
                                    gal:value "default" ] ],
                        [ gal: " test with list " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.list" ;
                                    gal:md5 "4779791c9b0ef95a54083ee1a6ad6c8d" ;
                                    gal:name "pick_otu" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.rare" ;
            schema:sku 76 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $template.source == "self":
    ln -s '$template.count' template.count.dat &&
    ln -s '$template.group' template.group.dat &&
#elif $template.source == "names":
    ln -s '$template.name' template.name.dat &&
#else:
    ln -s '$template.reference' template.reference.dat &&
#end if

echo 'chimera.vsearch(
    fasta=fasta.dat,
    #if $template.source == "self":
        reference=self,
        #if float($template.abskew) > 0:
            abskew=$template.abskew,
        #end if
        #if $template.group:
            group=template.group.dat,
        #end if
        #if $template.count:
            count=template.count.dat,
        #end if
    #elif $template.source == "names":
        name=template.name.dat,
    #else:
        reference=template.reference.dat,
    #end if
    minh=$minh,
    mindiv=$mindiv,
    xn=$xn,
    dn=$dn,
    dereplicate=$dereplicate,
    mindiffs=$mindiffs,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
2>&1  ## uchime component writes output to stderr
&& cat *accnos
    """ ;
            gal:description "find potential chimeric sequences using vsearch" ;
            gal:expand [ gal:macro "requirements" ;
                    gal:requirement [ gal:type "package" ;
                            gal:version "2.6.0" ;
                            dc:description "vsearch" ] ;
                    dc:description """
        """ ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.vsearch_ command reads a fasta file and reference file and outputs potentially chimeric sequences.

.. _chimera.vsearch: https://www.mothur.org/wiki/Chimera.vsearch

    """ ;
            gal:id "mothur_chimera_vsearch" ;
            gal:inputs [ gal:conditional [ gal:name "template" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "names" ;
                                            dc:description "Use a names file" ],
                                        [ gal:value "self" ;
                                            dc:description "Self" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "abskew" ;
                                            gal:help "Abundance skew is: min [ abund(parent1), abund(parent2) ] / abund(query). Default 1.9" ;
                                            gal:label "abskew - Abundance skew" ;
                                            gal:type "float" ;
                                            gal:value "1.9" ],
                                        [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:help "Generated by count.seqs. When you use a count file with group info and dereplicate=T, mothur will create a count table containing seqeunces after chimeras are removed." ;
                                            gal:label "count - a count_table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "self" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequence names" ;
                                            gal:type "data" ] ;
                                    gal:value "names" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "xn" ;
                            gal:help "Decreasing this weight to around 3 or 4 may give better performance on denoised data" ;
                            gal:label "xn - weight of a no vote. Default 8.0" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "8.0" ],
                        [ gal:argument "minh" ;
                            gal:help "Values from 0.1 to 5 might be reasonable. Lower values increase sensitivity but may report more false positives." ;
                            gal:label "minh - mininum score to report chimera. Default 0.3" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.3" ],
                        [ gal:argument "mindiv" ;
                            gal:help "to ignore very close chimeras, increase mindiv to 1.0 or 2.0, to increase sensitivity decrease minh to 0.1. Default 0.5" ;
                            gal:label "mindiv - minimum divergence ratio" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.5" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "mindiffs" ;
                            gal:label "minimum number of differences in segment" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "3" ],
                        [ gal:argument "dn" ;
                            gal:help "Reasonable values are probably in the range from 0.2 to 2.0. Default 1.4" ;
                            gal:label "dn - pseudo-count prior on number of no votes" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.4" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.vsearch" ;
            gal:outputs [ gal:data [ gal:filter "template['source'] == 'self' and template['count']" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "template.*vsearch.pick.count_table" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.count_table" ;
                            gal:name "out_count" ;
                            dc:description """
            """ ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*vsearch.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.chimeras" ;
                            gal:name "vsearch.chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*vsearch.accnos" ;
                            gal:label "${tool.name} on ${on_string}: vsearch.accnos" ;
                            gal:name "out_accnos" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with reference file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-chimera-format" ] ;
                                            gal:has_text [ gal:text "F11Fcsw_12747" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "vsearch.chimeras" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-accnos-format" ] ;
                                            gal:has_text [ gal:text "F11Fcsw_23322" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "fasta" ;
                                    gal:value "stool_small.unique.fasta" ],
                                [ gal:name "reference" ;
                                    gal:value "stool_small.unique.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " de novo test with count table" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "chimera.vsearch.count_table" ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "out_count" ],
                                [ gal:file "chimera.vsearch.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ],
                                [ gal:file "chimera.vsearch.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "vsearch.chimeras" ] ;
                            gal:param [ gal:name "dereplicate" ;
                                    gal:value "true" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "count" ;
                                    gal:value "chimera.count_table" ],
                                [ gal:name "source" ;
                                    gal:value "self" ],
                                [ gal:name "fasta" ;
                                    gal:value "chimera.fasta" ] ],
                        [ gal: " de novo test with name file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "stool_small.vsearch.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "vsearch.chimeras" ],
                                [ gal:file "stool_small.denovo.vsearch.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "stool_small.names" ],
                                [ gal:name "source" ;
                                    gal:value "names" ],
                                [ gal:name "fasta" ;
                                    gal:value "stool_small.unique.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.1" ;
            dc:description """
    """ ;
            dc:title "chimera.vsearch" ;
            schema:sku 63 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'get.otulabels(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=$infile.label,
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Selects OTU labels" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The get.otulabels command selects otu labels from the output from classify.otu_, corr.axes_ and otu.association_. This can be useful especially with subsampled datasets or when groups have been selected.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _otu.association: https://www.mothur.org/wiki/Otu.association

v.1.27.0: Added list and shared parameters, updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_otulabels" ;
            gal:inputs [ gal:conditional [ gal:name "infile" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ],
                                        [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from. " ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_other" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.otulabels" ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            gal:name "pick_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.axes" ;
                                    gal:md5 "c5f9d1a80b85cce640f25eb89cb67509" ;
                                    gal:name "pick_out" ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ],
                                [ gal:ftype "mothur.axes" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.pcoa.axes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "intype" ;
                                    gal:value "in_other" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.shared" ;
                                    gal:md5 "1868b58c69f48fe0ae14113d1fc50b33" ;
                                    gal:name "pick_out" ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.22" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.otulabels" ;
            schema:sku 98 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'normalize.shared(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
        makerelabund=$makerelabund
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $method:
        ,method=${ str($method).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Normalize the number of sequences per group to a specified level" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The normalize.shared_ command normalizes the number of sequences per group to a specified level.  The input is a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _normalize.shared: https://www.mothur.org/wiki/Normalize.shared

    """ ;
            gal:id "mothur_normalize_shared" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "makerelabund - convert a shared file to a relabund file before you normalize" ;
                            gal:name "makerelabund" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "method - Normalization method" ;
                            gal:name "method" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "Total Group" ],
                                [ gal:value "zscore" ;
                                    dc:description "Z Score" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Normalize.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared" ] ;
                            gal:label "${tool.name} on ${on_string}: norm.shared files collection" ;
                            gal:name "sharedfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "73ad51ce74e5b3efbc1d9ec8ed6e1c07" ;
                                            gal:name "0.26.norm" ] ;
                                    gal:name "sharedfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "1204d65c732fd880585180e956610026" ;
                                            gal:name "0.26.norm" ] ;
                                    gal:name "sharedfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "method" ;
                                    gal:value "zscore" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.relabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.relabund" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22,0.26" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "normalize.shared" ;
            schema:sku 33 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$axes' axes.dat &&

echo 'nmds(
    phylip=dist.dat
    #if $axes:
        ,axes=axes.dat
    #end if
    ,mindim=$mindim
    #if $maxdim >= $mindim:
        ,maxdim=$maxdim
    #end if
    ,iters=$iters
    ,maxiters=$maxiters

    ## Mothur can't cope with scientific notation
    #set epsilon_decimal = "{:.12f}".format(float($epsilon))
    ,epsilon=$epsilon_decimal
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "generate non-metric multidimensional scaling data" ;
            gal:expand [ gal:citation [ gal:type "bibtex" ;
                            dc:description """
@book{cox2000multidimensional,
  title={Multidimensional scaling},
  author={Cox, Trevor F and Cox, Michael AA},
  year={2000},
  publisher={Chapman and hall/CRC}
}
        """ ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The nmds_ command generates non-metric multidimensional scaling data from a phylip_distance_matrix_.

.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _nmds: https://www.mothur.org/wiki/Nmds

v1.20.0: Updated to mothur 1.33

    """ ;
            gal:id "mothur_nmds" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "maxdim - maximum dimensions (default 2)" ;
                            gal:name "maxdim" ;
                            gal:type "integer" ;
                            gal:value "2" ],
                        [ gal:label "maxiters - Number of iterations to try with each random configuration (default 500)" ;
                            gal:min "1" ;
                            gal:name "maxiters" ;
                            gal:type "integer" ;
                            gal:value "500" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:name "dist" ;
                            gal:type "data" ],
                        [ gal:format "mothur.axes" ;
                            gal:label "axes - a starting configuration" ;
                            gal:name "axes" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of random configuration to try (default 10)" ;
                            gal:min "1" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:label "epsilon - acceptable stopping precision (default 1e-12)" ;
                            gal:min "0" ;
                            gal:name "epsilon" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "1e-12" ],
                        [ gal:label "mindim - minimum dimensions (default 2)" ;
                            gal:min "1" ;
                            gal:name "mindim" ;
                            gal:type "integer" ;
                            gal:value "2" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Nmds" ;
            gal:outputs [ gal:data [ gal:format "mothur.axes" ;
                            gal:from_work_dir "dist*.axes" ;
                            gal:label "${tool.name} on ${on_string}: nmds.axes" ;
                            gal:name "nmds_axes" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.stress" ;
                            gal:label "${tool.name} on ${on_string}: nmds.stress" ;
                            gal:name "nmds_stress" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.iters" ;
                            gal:label "${tool.name} on ${on_string}: nmds.iters" ;
                            gal:name "nmds_iters" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "979702f1c719dac6a7276adf8363a688" ;
                                    gal:name "nmds_iters" ],
                                [ gal:md5 "9a8a5605d9a619ae1c4973a45e963032" ;
                                    gal:name "nmds_axes" ],
                                [ gal:md5 "0b46f64bea0294f2c966d7dc890e9aea" ;
                                    gal:name "nmds_stress" ] ;
                            gal:param [ gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "epsilon" ;
                                    gal:value "1e-12" ],
                                [ gal:name "mindim" ;
                                    gal:value "1" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "maxdim" ;
                                    gal:value "2" ],
                                [ gal:name "axes" ;
                                    gal:value "amazon.pcoa.axes" ],
                                [ gal:name "iters" ;
                                    gal:value "10" ],
                                [ gal:name "maxiters" ;
                                    gal:value "500" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "nmds" ;
            schema:sku 36 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'summary.tax(
    taxonomy=tax.taxonomy.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    relabund=$relabund,
    threshold=$threshold,
    output=$output,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to taxonomy" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The summary.tax_ command reads a taxonomy file and an optional name and or group file, and summarizes the taxonomy information.

.. _summary.tax: https://www.mothur.org/wiki/Summary.tax

    """ ;
            gal:id "mothur_summary_tax" ;
            gal:inputs [ gal:conditional [ gal:name "tax" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:name "taxonomy" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:name "taxonomy" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ],
                        [ gal:macro "param-printlevel" ],
                        [ gal:macro "param-output" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - taxonomy sequence names" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "relabund - allows you to indicate that you want the summary files to be relative abundances rather than raw abundances. default=f" ;
                            gal:name "relabund" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:help "Once the classification falls below the threshold the mothur will refer to it as unclassified when calculating the concensus.             This feature is similar to adjusting the cutoff in classify.seqs" ;
                            gal:label "threshold- specify a cutoff for the taxonomy file" ;
                            gal:min "0" ;
                            gal:name "threshold" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:name "group" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Summary.tax" ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "tax.taxonomy*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "taxsummary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Root" ],
                                                [ gal:text "Bifidobacterium" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "taxsummary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Root" ],
                                                [ gal:text "Bifidobacterium" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "taxsummary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "summary.tax" ;
            schema:sku 99 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.label(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat
    #else
        list=otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant output from logfile to file
cat mothur.*.logfile
| head -n-3
| sed '1,30d'
> '$labels_list'
    """ ;
            gal:description "label names from list, sabund, or rabund file" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.label_ command generate principle components plot data.

.. _get.label: https://www.mothur.org/wiki/Get.label

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_label" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.list,mothur.sabund,mothur.rabund" ;
                            gal:label "Input file. May be shared, sabund or rabund file" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.label" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:label "${tool.name} on ${on_string}: labels" ;
                            gal:name "labels_list" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with sabund " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "ded659c0af6b78f710f53f45ea99b9bb" ;
                                    gal:name "labels_list" ] ;
                            gal:param [ gal:ftype "mothur.sabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.sabund" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with rabund " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "0c3fab5bdfa8588c7244048ddd4eac3c" ;
                                    gal:name "labels_list" ] ;
                            gal:param [ gal:ftype "mothur.rabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.rabund2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with list " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "ded659c0af6b78f710f53f45ea99b9bb" ;
                                    gal:name "labels_list" ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.label" ;
            schema:sku 9 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$otu' otu.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'primer.design(
    fasta=fasta.dat,
    list=otu.dat,
    #if $label:
        label=$label,
    #end if
        otulabel=$otulabel,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    #if $mintm:
        mintm=$mintm,
    #end if
    #if $maxtm:
        maxtm=$maxtm,
    #end if
    pdiffs=$pdiffs,
    length=$length,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "identify sequence fragments that are specific to particular OTUs" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The primer.design_ allows you to identify sequence fragments that are specific to particular OTUs.

.. _primer.design: https://www.mothur.org/wiki/Primer.design

    """ ;
            gal:id "mothur_primer_design" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "" ;
                            gal:label "length - indicate the length of the primer" ;
                            gal:min "0" ;
                            gal:name "length" ;
                            gal:type "integer" ;
                            gal:value "18" ],
                        [ gal:help "" ;
                            gal:label "pdiffs - specify the number of differences allowed in the primer" ;
                            gal:min "0" ;
                            gal:name "pdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.count_table" ;
                            gal:label "count - a count table associated with your fasta file" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - names file associated with your fasta file" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:help "" ;
                            gal:label "maxtm - indicate maximum melting temperature" ;
                            gal:name "maxtm" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:help "" ;
                            gal:label "mintm - indicate minimum melting temperature" ;
                            gal:name "mintm" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:format "mothur.align" ;
                            gal:label "fasta - provide aligned fasta file" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU list file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "otulabel - choose an OTU name" ;
                            gal:multiple "false" ;
                            gal:name "otulabel" ;
                            gal:optional "false" ;
                            gal:options [ gal:filter [ gal:key "otulabels" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "If none selected, the first label in your file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "false" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "For example: cutoff=97 would only return a sequence that only showed ambiguities for bases that were not supported by at least 97% of sequences." ;
                            gal:label "cutoff - set a percentage of sequences that support the base" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "cutoff" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Primer.design" ;
            gal:outputs [ gal:data [ gal:format "mothur.list" ;
                            gal:from_work_dir "otu*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.primer.summary" ;
                            gal:label "${tool.name} on ${on_string}: primer.summary" ;
                            gal:name "summary_out" ],
                        [ gal:format "mothur.align" ;
                            gal:from_work_dir "otu*.cons.fasta" ;
                            gal:label "${tool.name} on ${on_string}: cons.fasta" ;
                            gal:name "fasta_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.align" ;
                                    gal:md5 "a5c8c17814f02124194dba2e37f566c7" ;
                                    gal:name "fasta_out" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "8dd341c49c26c6d0f8026b34cb7bc925" ;
                                    gal:name "summary_out" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:md5 "0a73804f3d48c668b4dab85c76d2c767" ;
                                    gal:name "list_out" ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otulabel" ;
                                    gal:value "Otu1" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.align_head.list" ],
                                [ gal:name "label" ;
                                    gal:value "0.30" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "primer.design" ;
            schema:sku 56 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$group' group.dat &&

echo 'classify.otu(
    list=otu.dat,
    taxonomy=tax.taxonomy.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $group:
        group=group.dat,
    #end if
    basis=$basis,
    probs=$probs,
    persample=$persample,
    cutoff=$cutoff,
    relabund=$relabund,
    output=$output,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to taxonomy" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.02810-10" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The classify.otu_ command assigns sequences to chosen taxonomy outline.

The basis parameter allows you indicate what you want the summary file to represent, options are otu and sequence. Default is otu. For example consider the following basis=sequence could give Clostridiales 3 105 16 43 46, where 105 is the total number of sequences whose otu classified to Clostridiales. 16 is the number of sequences in the otus from groupA, 43 is the number of sequences in the otus from groupB, and 46 is the number of sequences in the otus from groupC. Now for basis=otu could give Clostridiales 3 7 6 1 2, where 7 is the number of otus that classified to Clostridiales. 6 is the number of otus containing sequences from groupA, 1 is the number of otus containing sequences from groupB, and 2 is the number of otus containing sequences from groupC.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu

v1.21.0: Updated to use Mothur 1.33. Added count parameter (1.28.0) and persample parameter (1.29.0)

    """ ;
            gal:id "mothur_classify_otu" ;
            gal:inputs [ gal:conditional [ gal:name "tax" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy Reference" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-output" ],
                        [ gal:macro "param-savelog" ],
                        [ gal:macro "param-printlevel" ] ;
                    gal:param [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count - used to represent the number of duplicate sequences for a given representative sequence" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "probs" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "probs - Show probabilities" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "list - OTU List " ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "relabund" ;
                            gal:checked "false" ;
                            gal:falsevalue "F" ;
                            gal:help "use relative abundances rather than raw abundances for the tax.summary file" ;
                            gal:label "Relative abundance values?" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:argument "persample" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "default false" ;
                            gal:label "persample - allows you to find a consensus taxonomy for each group" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "label" ;
                            gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "basis" ;
                            gal:help "" ;
                            gal:label "basis - Summary file gives numbers of" ;
                            gal:option [ gal:value "otu" ;
                                    dc:description "OTU" ],
                                [ gal:value "sequence" ;
                                    dc:description "sequence" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "cutoff" ;
                            gal:label "cutoff - Confindence percentage cutoff between 1 and 100" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "60" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - taxonomy sequence names" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Classify.otu" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.tax.summary" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.tax\\.summary" ] ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            gal:name "taxsummaries" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.cons.taxonomy" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.cons\\.taxonomy" ] ;
                            gal:label "${tool.name} on ${on_string}: taxonomy" ;
                            gal:name "taxonomies" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                                    gal:has_text [ gal:text "Root" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.tax.summary" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxsummaries" ;
                                    dc:description """
                """ ],
                                [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                                    gal:has_text [ gal:text "Otu01" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.cons.taxonomy" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxonomies" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ],
                        [ gal: " test with names file and label select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                                    gal:has_text [ gal:text "Root" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.tax.summary" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxsummaries" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                                    gal:has_text [ gal:text "Otu01" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.cons.taxonomy" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxonomies" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "unique,0.05,0.18" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "sum" ;
                                    gal:value "abrecovery.pds.wang.tree.sum" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ],
                        [ gal: " test with count table " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                                    gal:has_text [ gal:text "Root" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.tax.summary" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxsummaries" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                                    gal:has_text [ gal:text "Otu01" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.cons.taxonomy" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxonomies" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.05,0.18" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "count" ;
                                    gal:value "amazon1.count_table" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                                    gal:has_text [ gal:text "Otu01" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.cons.taxonomy" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxonomies" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                                    gal:has_text [ gal:text "Root" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.tax.summary" ;
                                            gal:name "0.18" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "taxsummaries" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.05,0.18" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "classify.otu" ;
            schema:sku 25 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$biosample_in' biosample_in.dat &&

echo 'mimarks.attributes(
    xml=biosample_in.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Reads bioSample Attributes xml and generates source for get.mimarkspackage command" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The mimarks.attributes_ command reads `BioSample Attributes`_ xml and generates source for get.mimarkspackage_ command.

.. _BioSample Attributes: https://www.ncbi.nlm.nih.gov/biosample/docs/attributes/
.. _get.mimarkspackage: https://www.mothur.org/wiki/Get.mimarkspackage

    """ ;
            gal:id "mothur_mimarks_attributes" ;
            gal:inputs [ gal: """ TODO: add package type options (currently none described in documentation apart from default)
        <param name="package" type="select" label="package - select the mimarks package you would like to use">
            <option value="MIMARKS.survey" selected="true">MIMARKS.survey</option>
        </param>""" ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "xml" ;
                            gal:label "BioSample attributes xml file" ;
                            gal:name "biosample_in" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Mimarks.attributes" ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "biosample_in*.source" ;
                            gal:label "${tool.name} on ${on_string}: source" ;
                            gal:name "source_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "txt" ;
                                    gal:md5 "682288477dd8866465ba475bd0825517" ;
                                    gal:name "source_out" ] ;
                            gal:param [ gal:ftype "xml" ;
                                    gal:name "biosample_in" ;
                                    gal:value "biosample.xml" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "mimarks.attributes" ;
            schema:sku 26 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$flow' flow.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'trim.flows(
    flow=flow.dat,
    minflows=$minflows,
    maxflows=$maxflows,
    #if $maxhomop:
        maxhomop=$maxhomop,
    #end if
    order=$order,
    signal=$signal,
    noise=$noise,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        ldiffs=$oligo.ldiffs,
        sdiffs=$oligo.sdiffs,
    #end if
    fasta=$fasta,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## prevent these two files from being gathered into collection
&& mv flow.trim.flow flow.trim
&& mv flow.scrap.flow flow.scrap
    """ ;
            gal:description "partition by barcode, trim to length, cull by length and mismatches" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The trim.flows_ command is analogous to the trim.seqs command, except that it uses the flowgram data that comes bundled in the sff file that is generated by 454 sequencing. It's primary usage is as a preliminary step to running shhh.seqs. Chris Quince has a series of perl scripts that fulfill a similar role [1]. This command will allow you to partition your flowgram data by sample based on the barcode, trim the flows to a specified length range, and cull sequences that are too short or have too many mismatches to barcodes and primers.

.. _trim.flows: https://www.mothur.org/wiki/Trim.flows

    """ ;
            gal:id "mothur_trim_flows" ;
            gal:inputs [ gal:conditional [ gal:name "oligo" ;
                            gal:param [ gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:name "add" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:name "oligos" ;
                                            gal:type "data" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "pdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "sdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "tdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "ldiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "bdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "(Quince uses 360 for GSFLX and 720 for Titanium)" ;
                            gal:label "maxflows - Maximum number of flows after which all other flows should be ignored (default 450)" ;
                            gal:min "0" ;
                            gal:name "maxflows" ;
                            gal:type "integer" ;
                            gal:value "450" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "Use sffinfo to generate flow data from an sff file" ;
                            gal:label "flow - flowgram data" ;
                            gal:name "flow" ;
                            gal:type "data" ],
                        [ gal:help "Optional. Between 0 an 1. Default .5" ;
                            gal:label "signal - treat any intensity signal greater than this threshold as a real signal" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:name "signal" ;
                            gal:type "float" ;
                            gal:value "0.5" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "fasta - translate the flowgram data to fasta sequence format" ;
                            gal:name "fasta" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:help "Optional. Between 0 and 1. Default .7" ;
                            gal:label "noise - treat any intensity signal less than this threshold as noise" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:name "noise" ;
                            gal:type "float" ;
                            gal:value "0.7" ],
                        [ gal:help "" ;
                            gal:label "maxhomop - Maximum homopolymers" ;
                            gal:name "maxhomop" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:name "order" ;
                            gal:option [ gal:value "I" ;
                                    dc:description " I " ],
                                [ gal:selected "true" ;
                                    gal:value "A" ;
                                    dc:description " A (TACG) " ],
                                [ gal:value "B" ;
                                    dc:description " B " ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "(Quince uses 360)" ;
                            gal:label "minflows - Minimum number of flows that each sequence must contain to make it in to a \"trim\" file. (default 450)" ;
                            gal:min "0" ;
                            gal:name "minflows" ;
                            gal:type "integer" ;
                            gal:value "450" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Trim.flows" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.sff.flow" ;
                                    gal:pattern "flow\\.(?P<designation>.*)\\.flow" ] ;
                            gal:filter "oligo['add'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: oligos.flow" ;
                            gal:name "flow_oligos" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "flow.scrap" ;
                            gal:label "${tool.name} on ${on_string}: scrap.flow" ;
                            gal:name "scrap_flow" ],
                        [ gal:filter "fasta" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "flow.flow.fasta" ;
                            gal:label "${tool.name} on ${on_string}: flow.fasta" ;
                            gal:name "flow_fasta" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "flow.flow.files" ;
                            gal:label "${tool.name} on ${on_string}: flow.files" ;
                            gal:name "flow_files" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "flow.trim" ;
                            gal:label "${tool.name} on ${on_string}: trim.flow" ;
                            gal:name "trim_flow" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with oligos file and fasta output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "0725967a9ed731c049d48ea876b0e308" ;
                                    gal:name "flow_fasta" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "fdb1634899e8a6f8490ace953382591e" ;
                                    gal:name "trim_flow" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "dd2497eb1e3da8d513d2b0bc111cdf11" ;
                                    gal:name "scrap_flow" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "flow" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "flow_files" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.sff.flow" ;
                                            gal:md5 "5ea6613d7aa26f87ca9b983152e14a4b" ;
                                            gal:name "F003D006" ] ;
                                    gal:name "flow_oligos" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "add" ;
                                    gal:value "yes" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "10" ],
                                [ gal:name "order" ;
                                    gal:value "I" ],
                                [ gal:name "bdiffs" ;
                                    gal:value "10" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:name "fasta" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:name "flow" ;
                                    gal:value "testflow.flow" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "6850bb59570822aec6cd7aa7ce4675c4" ;
                                    gal:name "trim_flow" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "flow" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "flow_files" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "e5d39459c28f5e7245bae7c509f05cba" ;
                                    gal:name "scrap_flow" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:name "flow" ;
                                    gal:value "mock.flow" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "trim.flows" ;
            schema:sku 66 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'chimera.perseus(
    fasta=fasta.dat,
    #if $name.is_of_type("mothur.names"):
        name=name.dat,
    #elif $name.is_of_type("mothur.count_table"):
        count=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    alpha=$alpha,
    beta=$beta,
    cutoff=$cutoff,
    dereplicate=$dereplicate,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using chimeraCheck" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1186/1471-2105-12-38" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.perseus_ command reads a fasta and name file, and outputs potentially chimeric sequences.

.. _chimera.perseus: https://www.mothur.org/wiki/Chimera.perseus

    """ ;
            gal:id "mothur_chimera_perseus" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "name" ;
                            gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name - Names or count_table" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "beta" ;
                            gal:help "The default is 0.33" ;
                            gal:label "beta" ;
                            gal:type "float" ;
                            gal:value "0.33" ],
                        [ gal:argument "alpha" ;
                            gal:help "The default is -5.54" ;
                            gal:label "alpha" ;
                            gal:type "float" ;
                            gal:value "-5.54" ],
                        [ gal:argument "cutoff" ;
                            gal:help "The default is 0.50" ;
                            gal:label "cutoff" ;
                            gal:type "float" ;
                            gal:value "0.50" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric. default=false" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.perseus" ;
            gal:outputs [ gal:data [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.perseus.accnos" ;
                            gal:label "${tool.name} on ${on_string}: perseus.accnos" ;
                            gal:name "out_accnos" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "fasta.perseus.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: perseus.chimeras" ;
                            gal:name "out_chimeras" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " TODO: find/create test dataset with chimera present " ;
                    gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "bcd513127321a32035764a2087c23528" ;
                                    gal:name "out_chimeras" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.perseus" ;
            schema:sku 110 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

#for $grouping in $groupings:
    #set grp_str = $grouping.groups.__str__
    #if grp_str:
        #for $grp in grp_str.split(','):
            echo -e "$grp\\t$grouping.name" >> $design;
        #end for
    #end if
#end for
    """ ;
            gal:description "Assign groups to Sets" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

Make Design creates a design file for use in mothur commands: merge.groups_, indicator_, and metastats_.
A design file looks like the group file. It is a 2 column tab delimited file, where the first column is the group name and the second column is the set the group belongs to.

.. _merge.groups: https://www.mothur.org/wiki/Merge.groups
.. _indicator: https://www.mothur.org/wiki/Indicator
.. _metastats: https://www.mothur.org/wiki/Metastats

    """ ;
            gal:id "mothur_make_design" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.shared,mothur.groups" ;
                            gal:label "Source containing groups" ;
                            gal:name "source" ;
                            gal:type "data" ] ;
                    gal:repeat [ gal:name "groupings" ;
                            gal:param [ gal:label "Name for a new combined grouping" ;
                                    gal:name "name" ;
                                    gal:type "text" ],
                                [ gal:label "Select groups for to include in this grouping" ;
                                    gal:multiple "true" ;
                                    gal:name "groups" ;
                                    gal:options [ gal:filter [ gal:key "groups" ;
                                                    gal:ref "source" ;
                                                    gal:type "data_meta" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:title "Grouping" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make Design" ;
            gal:outputs [ gal:data [ gal:format "mothur.design" ;
                            gal:label "${tool.name} on ${on_string}: design" ;
                            gal:name "design" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:output [ gal:file "toymothur.design" ;
                                    gal:ftype "mothur.design" ;
                                    gal:name "design" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "source" ;
                                    gal:value "amazon.mothur.shared" ] ;
                            gal:repeat [ gal:name "groupings" ;
                                    gal:param [ gal:name "name" ;
                                            gal:value "dalek" ],
                                        [ gal:name "groups" ;
                                            gal:value "pasture" ] ;
                                    dc:description """
                """ ],
                                [ gal:name "groupings" ;
                                    gal:param [ gal:name "groups" ;
                                            gal:value "forest,pasture" ],
                                        [ gal:name "name" ;
                                            gal:value "tardis" ] ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.design" ;
            schema:sku 94 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
#if $list:
    ln -s '$list' list.dat &&
#end if
#if $shared:
    ln -s '$shared' shared.dat &&
#end if
#if $constaxonomy:
    ln -s '$constaxonomy' constaxonomy.dat &&
#end if
#if $corraxes:
    ln -s '$corraxes' corraxes.dat &&
#end if
#if $otucorr:
    ln -s '$otucorr' otucorr.dat &&
#end if

echo 'get.otus(
    #if $list
        list=list.dat,
    #end if
    #if $shared
        shared=shared.dat,
    #end if
    #if $corraxes:
        corraxes=corraxes.dat,
    #end if
    #if $otucorr:
        otucorr=otucorr.dat,
    #end if
    #if $constaxonomy
        constaxonomy=constaxonomy.dat,
    #end if
    accnos=accnos.dat
    #if $labelsource.label:
        ,label=${ str($labelsource.label).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get otus containing sequences from specified groups" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.otus command selects otus from a given list.

.. _list: https://www.mothur.org/wiki/List_file
.. _get.otus: https://www.mothur.org/wiki/Get.otus

    """ ;
            gal:id "mothur_get_otus" ;
            gal:inputs [ gal:conditional [ gal:name "labelsource" ;
                            gal:param [ gal:label "Select a label from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description " OTU shared file " ],
                                        [ gal:value "list" ;
                                            dc:description " OTU list file " ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "label" ;
                                            gal:help "select exactly one label. If none selected, the first label in your file will be used" ;
                                            gal:label "label - OTU Label" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "shared" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "label" ;
                                            gal:help "select exactly one label. If none selected, the first label in your file will be used" ;
                                            gal:label "label - OTU Label" ;
                                            gal:multiple "false" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "list" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "list" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "otucorr" ;
                            gal:format "mothur.otu.corr" ;
                            gal:help "otu correlation coefficients are output by the otu.association command" ;
                            gal:label "OTU correlation file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "OTU List" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:label "accnos - Group Names from your history" ;
                            gal:type "data" ],
                        [ gal:argument "constaxonomy" ;
                            gal:format "mothur.cons.taxonomy" ;
                            gal:help "The contaxonomy file is the taxonomy file outputted by classify.otu" ;
                            gal:label "contaxonomy - consensus taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "corraxes" ;
                            gal:format "mothur.axes" ;
                            gal:help "correlation axes file is output by the corr.axes command" ;
                            gal:label "Correlation axes file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "OTU List OTU Shared file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.otus" ;
            gal:outputs [ gal:data [ gal:filter " $constaxonomy " ;
                            gal:format "mothur.cons.taxonomy" ;
                            gal:from_work_dir "constaxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.cons.taxonomy" ;
                            gal:name "constaxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter " $otucorr " ;
                            gal:format "mothur.otu.corr" ;
                            gal:from_work_dir "otucorr*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.otu.corr" ;
                            gal:name "otucorr_out" ;
                            dc:description """
            """ ],
                        [ gal:filter " $shared " ;
                            gal:format "mothur.shared" ;
                            gal:from_work_dir "shared*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            gal:name "shared_out" ;
                            dc:description """
            """ ],
                        [ gal:filter " $list " ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            dc:description """
            """ ],
                        [ gal:filter " $corraxes " ;
                            gal:format "mothur.axes" ;
                            gal:from_work_dir "corraxes*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.axes" ;
                            gal:name "corraxes_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with list file input and default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "Otu17" ],
                                                [ gal:text "Otu42" ],
                                                [ gal:text "unique" ],
                                                [ gal:text "Otu01" ] ;
                                            gal:not_has_text [ gal:text "Otu43" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.otus.accnos" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "list" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with shared and otu.corr file and label select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                            gal:has_text [ gal:text "Otu17" ],
                                                [ gal:text "Otu42" ],
                                                [ gal:text "Otu01" ],
                                                [ gal:text "0.03" ] ;
                                            gal:not_has_text [ gal:text "Otu43" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.shared" ;
                                    gal:name "shared_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "otucorr" ;
                                    gal:value "amazon.an.0.03.pearson.otu.corr" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.otus.accnos" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "shared" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.otus" ;
            schema:sku 92 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

#import re
## create symlinks to input datasets
ln -s '$reference.template' reference.template.dat &&
ln -s '$flow' flow.dat &&
ln -s '$error' error.dat &&

echo 'make.lookup(
    reference=reference.template.dat,
    flow=flow.dat,
    error=error.dat,
    order=$order,
    barcode=$re.sub("[^ACTG]","",str($barcode)),
    key=$re.sub("[^ACTG]","",str($key)),
    threshold=$threshold
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "allows you to create custom lookup files for use with shhh.flows" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1038/nmeth.1361" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.lookup_ allows you to create custom lookup files for use with shhh.flows.

.. _make.lookup: https://www.mothur.org/wiki/Make.lookup

    """ ;
            gal:id "mothur_make_lookup" ;
            gal:inputs [ gal:conditional [ gal:name "reference" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:help "" ;
                                            gal:label "reference - Select an alignment database " ;
                                            gal:name "template" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:name "template" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.sff.flow" ;
                            gal:label "flow - provide file with flow data" ;
                            gal:name "flow" ;
                            gal:type "data" ],
                        [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:name "order" ;
                            gal:option [ gal:value "I" ;
                                    dc:description "I" ],
                                [ gal:selected "true" ;
                                    gal:value "A" ;
                                    dc:description "A (TACG)" ],
                                [ gal:value "B" ;
                                    dc:description "B" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "barcode - provide the barcode sequence" ;
                            gal:name "barcode" ;
                            gal:type "text" ;
                            gal:value "AACCGTGTC" ],
                        [ gal:format "tabular" ;
                            gal:help "this file is an output of seq.error tool" ;
                            gal:label "error - provide the error summary" ;
                            gal:name "error" ;
                            gal:type "data" ],
                        [ gal:help "" ;
                            gal:label "threshold - " ;
                            gal:min "0" ;
                            gal:name "threshold" ;
                            gal:type "integer" ;
                            gal:value "10000" ],
                        [ gal:label "key - provide the key sequence" ;
                            gal:name "key" ;
                            gal:type "text" ;
                            gal:value "TCAG" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.lookup" ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "flow*.lookup" ;
                            gal:label "${tool.name} on ${on_string}: lookup" ;
                            gal:name "lookup_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^(-?[(\\d\\.|nan)]+\\t?)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "lookup_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.sff.flow" ;
                                    gal:name "flow" ;
                                    gal:value "testflow.flow" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "template" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "tabular" ;
                                    gal:name "error" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.error.summary" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ],
                        [ gal: " should be converted to default value ",
                                " test sanitizers " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^(-?[(\\d\\.|nan)]+\\t?)+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "lookup_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "template" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "key" ;
                                    gal:value "XTXCXAXGX" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:name "flow" ;
                                    gal:value "testflow.flow" ],
                                [ gal:ftype "tabular" ;
                                    gal:name "error" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.error.summary" ],
                                [ gal:name "barcode" ;
                                    gal:value "XAXAXCXCXGXTXGXTXC" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.lookup" ;
            schema:sku 100 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' shared.dat &&
ln -s '$design' design.dat &&

echo 'lefse(
    shared=shared.dat,
    design=design.dat,
    #if $class:
        class=$class,
    #end if
    #if $sclass:
        subclass=$sclass,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    aalpha=$aalpha,
    walpha=$walpha,
    lda=$lda,
    iters=$iters,
    fboots=$fboots,
    strict=$strict,
    minc=$minc,
    wilc=$wilc,
    curv=$curv,
    norm=$norm
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "description" ;
            gal:expand [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1186/gb-2011-12-6-r60" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """
@MOTHUR_OVERVIEW@


**Command Documentation**


.. _lefse: https://www.mothur.org/wiki/Lefse
    """ ;
            gal:id "mothur_lefse" ;
            gal:inputs [ gal: """ TODO: update galaxy datatypes to set metadata for design files, then can switch to a select box
        <param argument="sets" type="select" multiple="true" label="sets - Which of the sets in your design file you would like to analyze."
            help="The set names are separated by dashes. The defualt is all sets in designfile">
            <options>
                <filter type="data_meta" ref="design" key="sets"/>
            </options>
         </param>
         """ ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help " 0 no correction (more strict, default), 1 correction for independent comparisons, 2 correction for independent comparison" ;
                            gal:label "strict - set the multiple testing correction options" ;
                            gal:max "2" ;
                            gal:min "0" ;
                            gal:name "strict" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "F" ;
                            gal:help "" ;
                            gal:label "curv - whether perform the wilcoxon testing the Curtis's approach (beta)" ;
                            gal:name "curv" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "F" ;
                            gal:help "Recommended when very low values are present" ;
                            gal:label "norm - multiply relative abundances by 1000000" ;
                            gal:name "norm" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:help "" ;
                            gal:label "minc - minimum number of samples per subclass for performing wilcoxon test" ;
                            gal:min "0" ;
                            gal:name "minc" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:help "" ;
                            gal:label "fboots - set the subsampling fraction value for each bootstrap iteration" ;
                            gal:name "fboots" ;
                            gal:type "float" ;
                            gal:value "0.67" ],
                        [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assigns groups to sets" ;
                            gal:name "design" ;
                            gal:type "data" ],
                        [ gal:help "" ;
                            gal:label "lda - threshold on the absolute value of the logarithmic LDA score" ;
                            gal:name "lda" ;
                            gal:type "float" ;
                            gal:value "2.0" ],
                        [ gal:help "" ;
                            gal:label "iters - number of bootstrap iteration for LDA" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "30" ],
                        [ gal:help "If none is provided first category is used" ;
                            gal:label "class -indicate the which category you would like used for the Kruskal Wallis analysis" ;
                            gal:name "class" ;
                            gal:optional "true" ;
                            gal:type "text" ;
                            gal:value "" ],
                        [ gal:help "" ;
                            gal:label "walpha - alpha value for the Wilcoxon test" ;
                            gal:name "walpha" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:help "" ;
                            gal:label "aalpha - alpha value for the Krukal Wallis Anova test" ;
                            gal:name "aalpha" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:help "separate sets by dashes or commas, e.g. set1,set2 or set1-set2-set3" ;
                            gal:label "sets - Which of the sets in your design file you would like to analyze?" ;
                            gal:name "sets" ;
                            gal:type "text" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "F" ;
                            gal:help "" ;
                            gal:label "wilc - indicate whether to perform the Wilcoxon test" ;
                            gal:name "wilc" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ],
                        [ gal:help "If none is provided second category is used" ;
                            gal:label "subclass - indicate the which category you would like used for the Kruskal Wallis analysis" ;
                            gal:name "sclass" ;
                            gal:optional "true" ;
                            gal:type "text" ;
                            gal:value "" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Label filter" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Lefse" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "shared.*lefse_summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with label and class select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "d2c3d2e813607aef0844ec2fb53a5955" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ],
                                [ gal:name "class" ;
                                    gal:value "dpw" ],
                                [ gal:name "label" ;
                                    gal:value "1" ],
                                [ gal:name "design" ;
                                    gal:value "mouse.design" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "d2c3d2e813607aef0844ec2fb53a5955" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "design" ;
                                    gal:value "mouse.design" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with sets " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "64ebfb48d8c3e0bcd993a7ea8aa60e62" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "design" ;
                                    gal:value "mouse.design" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ],
                                [ gal:name "label" ;
                                    gal:value "1" ],
                                [ gal:name "sets" ;
                                    gal:value "8,142" ],
                                [ gal:name "class" ;
                                    gal:value "dpw" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "lefse" ;
            schema:sku 86 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$search.input' search_input.dat &&
#if $split.dosplit == "yes":
    ln -s '$split.group' split_group.dat &&
#end if

echo 'split.abund(
    fasta=fasta.dat,
    #if $search.type == "list":
        list=search_input.dat,
        #if $search.label:
            label=${ str($search.label).replace(",","-") },
        #end if
    #elif $search.type == "name":
        name=search_input.dat,
    #else
        count=search_input.dat,
    #end if
    #if $split.dosplit == "yes":
        #if $split.group:
            group=split_group.dat,
        #end if
        #if $split.groups:
            groups=${ str($split.groups).replace(",","-") },
        #end if
    #end if
    accnos=$accnos,
    cutoff=$cutoff
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Separate sequences into rare and abundant groups" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The split.abund_ command reads a fasta file and a list_ or a name_ file and splits the sequences into rare and abundant groups.

.. _list: https://www.mothur.org/wiki/List_file
.. _name: https://www.mothur.org/wiki/Name_file
.. _split.abund: https://www.mothur.org/wiki/Split.abund

    """ ;
            gal:id "mothur_split_abund" ;
            gal:inputs [ gal:conditional [ gal:name "search" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Type to screen" ;
                                    gal:name "type" ;
                                    gal:option [ gal:value "count" ;
                                            dc:description "Count file" ],
                                        [ gal:value "name" ;
                                            dc:description "Name reference" ],
                                        [ gal:value "list" ;
                                            dc:description "OTU List" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:label "count - count_table file" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "count" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "input" ;
                                            gal:type "data" ],
                                        [ gal:help "Select OTU Labels to filter out all but selected labels" ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "input" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "list" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Name reference" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "name" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "split" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Parse a group file into abundant and rare groups? (only possible if name or list file supplied)" ;
                                    gal:name "dosplit" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Group dataset" ;
                                            gal:name "group" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Group Selection" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "cutoff - Cutoff parameter is used to qualify what is abundant and rare." ;
                            gal:min "0" ;
                            gal:name "cutoff" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "accnos - Produce rare and abundant Accession outputs" ;
                            gal:name "accnos" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Split.abund" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.names" ] ;
                            gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.names" ;
                            gal:name "abund_names_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.list" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.list" ;
                            gal:name "rare_list_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.fasta" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            gal:name "rare_fasta_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.accnos" ] ;
                            gal:filter "(search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')) and accnos" ;
                            gal:label "${tool.name} on ${on_string}: abund.accnos" ;
                            gal:name "abund_accnos_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.accnos" ] ;
                            gal:filter "(search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes')) and accnos" ;
                            gal:label "${tool.name} on ${on_string}: rare.accnos" ;
                            gal:name "rare_accnos_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.groups" ] ;
                            gal:filter "search['type'] != 'count' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.groups" ;
                            gal:name "abund_groups_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.fasta" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.fasta" ;
                            gal:name "abund_fasta_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.names" ] ;
                            gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.names" ;
                            gal:name "rare_names_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.abund\\.list" ] ;
                            gal:filter "search['type'] == 'list' or (search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: abund.list" ;
                            gal:name "abund_list_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rare\\.groups" ] ;
                            gal:filter "search['type'] != 'count' and split['dosplit'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: rare.groups" ;
                            gal:name "rare_groups_coll" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "search['type'] != 'list' and accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "*rare.accnos" ;
                            gal:label "${tool.name} on ${on_string}: rare.accnos" ;
                            gal:name "rare_accnos" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'count'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "*.rare.count_table" ;
                            gal:label "${tool.name} on ${on_string}: rare.count_table" ;
                            gal:name "rare_count" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] != 'list'" ;
                            gal:format_source "fasta" ;
                            gal:from_work_dir "*abund.fasta" ;
                            gal:label "${tool.name} on ${on_string}: abund.fasta" ;
                            gal:name "abund_fasta" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] != 'list'" ;
                            gal:format_source "fasta" ;
                            gal:from_work_dir "*rare.fasta" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            gal:name "rare_fasta" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'name'" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "search_input*.abund.names" ;
                            gal:label "${tool.name} on ${on_string}: abund.names" ;
                            gal:name "abund_names" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] != 'list' and accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "*abund.accnos" ;
                            gal:label "${tool.name} on ${on_string}: abund.accnos" ;
                            gal:name "abund_accnos" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'count'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "*.abund.count_table" ;
                            gal:label "${tool.name} on ${on_string}: abund.count_table" ;
                            gal:name "abund_count" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: abund.groups" ;
                            gal:name "abund_groups" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'name' and split['dosplit'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: rare.groups" ;
                            gal:name "rare_groups" ;
                            dc:description """
            """ ],
                        [ gal:filter "search['type'] == 'name'" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "search_input*.rare.names" ;
                            gal:label "${tool.name} on ${on_string}: rare.fasta" ;
                            gal:name "rare_names" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with name file and accnos output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "3c147ce7224bc8c8602d2ccfe4b6eae7" ;
                                    gal:name "abund_fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "bff57d4585fe4e6d8b86c949f3e17e1a" ;
                                    gal:name "rare_fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "41560e422d53c83cb482ef868409136c" ;
                                    gal:name "abund_names" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "3537f34f96d276e72e03f6d6a4994fd9" ;
                                    gal:name "rare_accnos" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "47c918c965d41fea12bad748afe60833" ;
                                    gal:name "abund_accnos" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "12527477b2c1891c9278f417a5ece45d" ;
                                    gal:name "rare_names" ] ;
                            gal:param [ gal:name "cutoff" ;
                                    gal:value "1" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "input" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "type" ;
                                    gal:value "name" ],
                                [ gal:name "accnos" ;
                                    gal:value "true" ] ],
                        [ gal: " test with count table " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "47c918c965d41fea12bad748afe60833" ;
                                    gal:name "abund_accnos" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "bff57d4585fe4e6d8b86c949f3e17e1a" ;
                                    gal:name "rare_fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "288e5222f3d454b67761fca3c8c944b1" ;
                                    gal:name "abund_count" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "dc7be856861ef53faa73a5312b0661c3" ;
                                    gal:name "rare_count" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "3c147ce7224bc8c8602d2ccfe4b6eae7" ;
                                    gal:name "abund_fasta" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "3537f34f96d276e72e03f6d6a4994fd9" ;
                                    gal:name "rare_accnos" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "accnos" ;
                                    gal:value "true" ],
                                [ gal:name "type" ;
                                    gal:value "count" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "input" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "cutoff" ;
                                    gal:value "1" ] ],
                        [ gal: " test with list and label and group select" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "51327cbf0c66c9c3074ca3456b021ead" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "abund_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "fd404451b15195cadb637751a463a077" ;
                                            gal:name "0.05.forest" ] ;
                                    gal:name "abund_groups_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "7c9ca6c2f3e2eb5c3d38c30963b3d976" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "rare_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "3a875836ffebfeb037cd761ea1d0607e" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "abund_accnos_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "f79b02e37dbd7a7f76a60c269571396f" ;
                                            gal:name "forest.0.05" ] ;
                                    gal:name "rare_list_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "8a0843911399171a73afbc0374065fd0" ;
                                            gal:name "forest.0.05" ] ;
                                    gal:name "abund_list_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "53a2f24a4d69f92661b94bc4b813ce69" ;
                                            gal:name "0.05.forest" ] ;
                                    gal:name "rare_groups_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "e866c488171950bb38e7ba4c8f2982c1" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "rare_accnos_coll" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "type" ;
                                    gal:value "list" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "cutoff" ;
                                    gal:value "2" ],
                                [ gal:name "dosplit" ;
                                    gal:value "yes" ],
                                [ gal:name "accnos" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.22" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "input" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ] ],
                        [ gal: " test with name file and accnos output with groups" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "fc5d939ceca270be00b39d5323c1a79f" ;
                                            gal:name "pasture" ] ;
                                    gal:name "rare_names_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "d45b69987a0294c87fab358bbb71cd29" ;
                                            gal:name "pasture" ] ;
                                    gal:name "abund_names_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "597a2cc6d2da897434ec9d2c11489d0a" ;
                                            gal:name "forest" ] ;
                                    gal:name "abund_accnos_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "8d90da3c099450e31de006548e8f458c" ;
                                            gal:name "forest" ] ;
                                    gal:name "abund_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "46ac8394df6b3376b41619b07720ee18" ;
                                            gal:name "pasture" ] ;
                                    gal:name "abund_groups_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "4459f7ee4c46ccf0ce33f5694ac1ca49" ;
                                            gal:name "forest" ] ;
                                    gal:name "rare_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "20f8e54d68bf225f405258942e0cb5ac" ;
                                            gal:name "forest" ] ;
                                    gal:name "rare_accnos_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "5907bd7fe874a29fcc57930ecb0f65d1" ;
                                            gal:name "pasture" ] ;
                                    gal:name "rare_groups_coll" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "type" ;
                                    gal:value "name" ],
                                [ gal:name "dosplit" ;
                                    gal:value "yes" ],
                                [ gal:name "cutoff" ;
                                    gal:value "1" ],
                                [ gal:name "accnos" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "input" ;
                                    gal:value "amazon.names" ] ],
                        [ gal: " test with list " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "fd404451b15195cadb637751a463a077" ;
                                            gal:name "0.05.forest" ] ;
                                    gal:name "abund_groups_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "8a0843911399171a73afbc0374065fd0" ;
                                            gal:name "forest.0.05" ] ;
                                    gal:name "abund_list_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "e9f9b640ca00c11cba5420069c916b12" ;
                                            gal:name "0.05.forest" ] ;
                                    gal:name "abund_accnos_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "1860c0cf143a2b7adc93c88418ed3559" ;
                                            gal:name "0.05.forest" ] ;
                                    gal:name "abund_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "7c9ca6c2f3e2eb5c3d38c30963b3d976" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "rare_fasta_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "ddcf8bc26a0815fd366deceec64133ee" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "rare_groups_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "e866c488171950bb38e7ba4c8f2982c1" ;
                                            gal:name "0.05.pasture" ] ;
                                    gal:name "rare_accnos_coll" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "b7dc64a835d318852dbadc0c3379d0bb" ;
                                            gal:name "pasture.0.05" ] ;
                                    gal:name "rare_list_coll" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "true" ],
                                [ gal:name "dosplit" ;
                                    gal:value "yes" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "input" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "type" ;
                                    gal:value "list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "cutoff" ;
                                    gal:value "2" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "split.abund" ;
            schema:sku 77 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$names' names.dat &&
ln -s '$fasta' fasta.dat &&

echo 'unique.seqs(
    #if $names.is_of_type('mothur.names'):
        name=names.dat,
    #elif $names.is_of_type('mothur.count_table'):
        count=names.dat,
    #end if
    fasta=fasta.dat,
    format=$format
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Return unique sequences" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The unique.seqs_ command returns only the unique sequences found in a fasta-formatted sequence file and a name_ file that indicates those sequences that are identical to the reference sequence.

.. _name: https://www.mothur.org/wiki/Name_file
.. _unique.seqs: https://www.mothur.org/wiki/Unique.seqs

    """ ;
            gal:id "mothur_unique_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "output format" ;
                            gal:name "format" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "count" ;
                                    dc:description " Count table " ],
                                [ gal:value "name" ;
                                    dc:description " Name file " ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name file or count table - Sequences Names" ;
                            gal:name "names" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Unique.seqs" ;
            gal:outputs [ gal:data [ gal:filter " format == \"name\" " ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.names" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            gal:name "out_names" ;
                            dc:description """
            """ ],
                        [ gal:filter " format == \"count\" " ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "fasta*.count_table" ;
                            gal:label "${tool.name} on ${on_string}: count_table" ;
                            gal:name "out_count" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.unique.*" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with count file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.unique.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "out_fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "2024cbb895f79346606ab196dd130639" ;
                                    gal:name "out_count" ] ;
                            gal:param [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "names" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with names file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.unique.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "out_fasta" ],
                                [ gal:file "amazon.unique.names" ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "out_names" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "format" ;
                                    gal:value "name" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "names" ;
                                    gal:value "amazon1.names" ] ],
                        [ gal: " test wth fasta only " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.unique.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "out_fasta" ],
                                [ gal:file "amazon.unique.names" ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "out_names" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "format" ;
                                    gal:value "name" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "unique.seqs" ;
            schema:sku 38 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'remove.otulabels(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.data,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=${ str($infile.label).replace(",","-") },
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Removes OTU labels" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.otulabels_ command removes otu labels from the output from classify.otu_, corr.axes_ and otu.association_. This can be useful especially with subsampled datasets or when groups have been selected.

.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _otu.association: https://www.mothur.org/wiki/Otu.association
.. _remove.otulabels: https://www.mothur.org/wiki/Remove.otus

    """ ;
            gal:id "mothur_remove_otulabels" ;
            gal:inputs [ gal:conditional [ gal:name "infile" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ],
                                        [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from. " ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_other" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.otulabels" ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            gal:name "pick_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with constaxonomy/otucorr/corraxes file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-axes-format" ] ;
                                            gal:has_text [ gal:text "U68686" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.axes" ;
                                    gal:name "pick_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.axes" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.pcoa.axes" ],
                                [ gal:name "intype" ;
                                    gal:value "in_other" ] ],
                        [ gal: " test with shared/list input and label selection " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.22" ],
                                                [ gal:text "U68686" ] ;
                                            gal:not_has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "pick_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.22" ],
                                [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.otulabels" ;
            schema:sku 61 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$group' group.dat &&
#if $groupnames.source == "accnos":
    ln -s '$groupnames.accnos' groupnames.accnos.dat &&
#end if

echo 'count.groups(
    #if $group.is_of_type("mothur.shared"):
        shared=group.dat
    #elif $group.is_of_type("mothur.count_table"):
        count=group.dat
    #else:
        group=group.dat
    #end if
    #if $groupnames.source == "groups":
        #if $groupnames.groups:
            ,groups=${ str($groupnames.groups).replace(",","-") }
        #end if
    #elif $groupnames.source == "accnos":
        #if $groupnames.accnos:
            ,accnos=groupnames.accnos.dat
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant tool output from logfile to file
cat mothur.*.logfile
| head -n-7
| sed '1,30d'
> '$grp_count'
    """ ;
            gal:description "counts the number of sequences represented by a specific group or set of groups" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The count.groups_ command counts sequences from a specific group or set of groups from a group_ or shared_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _count.groups: https://www.mothur.org/wiki/Count.groups

    """ ;
            gal:id "mothur_count_groups" ;
            gal:inputs [ gal:conditional [ gal:name "groupnames" ;
                            gal:param [ gal:label "Filter group names" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "groups" ;
                                            dc:description "A List of Group Names" ],
                                        [ gal:value "accnos" ;
                                            dc:description "A History Group Name Accnos Dataset" ],
                                        [ gal:value "none" ;
                                            dc:description "Report on All Groups" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "accnos - Group Names from your history" ;
                                            gal:name "accnos" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "accnos" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "groups" ;
                                    dc:description """
                """ ],
                                [ gal:value "none" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.groups,mothur.shared,mothur.count_table" ;
                            gal:label "group, shared, or count_table - Group file for sequence count" ;
                            gal:name "group" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Count.groups" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:label "${tool.name} on ${on_string}: group.count" ;
                            gal:name "grp_count" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "group*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "58508af98ed02e00a707f0f7812c2359" ;
                                    gal:name "summary" ],
                                [ gal:md5 "34ea2b8be163cf6c9c68d624d92fc73d" ;
                                    gal:name "grp_count" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "group" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "source" ;
                                    gal:value "groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "34ea2b8be163cf6c9c68d624d92fc73d" ;
                                    gal:name "grp_count" ],
                                [ gal:md5 "58508af98ed02e00a707f0f7812c2359" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "group" ;
                                    gal:value "amazon.an.shared" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "count.groups" ;
            schema:sku 16 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$metadata' metadata.dat &&

echo 'otu.association(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $method:
        ,method=$method
    #end if
    #if $metadata:
        ,metadata=metadata.dat
    #end if
    #if $cutoff:
        ,cutoff=$cutoff
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Calculate the correlation coefficient for the otus" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The otu.association_ command calculates the correlation coefficient for the otus in a shared_ or relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _otu.association: https://www.mothur.org/wiki/Otu.association

v.1.25.0: Updated to mothur 1.33, added cutoff option

    """ ;
            gal:id "mothur_otu_association" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "By default all labels are used" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared,relabund - OTU Shared or Relabund file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "cutoff - set a pvalue at which the otu will be reported" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:name "cutoff" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ],
                        [ gal:format "tabular" ;
                            gal:label "metadata - find the association between the otus and the metadata." ;
                            gal:name "metadata" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "method - Normalization method" ;
                            gal:name "method" ;
                            gal:option [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ],
                                [ gal:value "spearman" ;
                                    dc:description "spearman" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Otu.association" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.otu.corr" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otu\\.corr" ] ;
                            gal:label "${tool.name} on ${on_string}: correlation coefficient files per OTU label" ;
                            gal:name "correlations" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with relabund file and label and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "5" ;
                                    gal:element [ gal:ftype "mothur.otu.corr" ;
                                            gal:md5 "f01da5dc45d0bae35b692a7306bdc581" ;
                                            gal:name "0.41.kendall" ] ;
                                    gal:name "correlations" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.relabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.relabund" ],
                                [ gal:name "method" ;
                                    gal:value "kendall" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.36,0.41,0.55" ] ],
                        [ gal: " test with shared file and default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.otu.corr" ;
                                            gal:md5 "ba93b529a7b0e5ca3baa8fe9a41b4107" ;
                                            gal:name "0.41.pearson" ] ;
                                    gal:name "correlations" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "otu.association" ;
            schema:sku 113 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&
ln -s '$count' count.dat &&
ln -s '$taxonomy' taxonomy.dat &&
#if $input.format == "fasta":
    ln -s '$input.name_in' input_name_in.dat &&
#end if
#if ($input.format == "fasta" or $input.format == "list") and $input.use_group.to_filter == "yes":
    ln -s '$input.use_group.group_in' input_use_group_group_in.dat &&
#end if

echo 'sub.sample(
    #if $input.format == "fasta":
        fasta=input_otu.dat
        #if $input.name_in:
            ,name=input_name_in.dat
        #end if
    #else
        #if $input.format == "list":
            list=input_otu.dat
        #elif $input.format == "sabund":
            sabund=input_otu.dat
        #elif $input.format == "rabund":
            rabund=input_otu.dat
        #elif $input.format == "shared":
            shared=input_otu.dat
            #if $input.groups:
                ,groups=${ str($input.groups).replace(",","-") }
            #end if
        #end if
        #if $input.label:
            ,label=${ str($input.label).replace(",","-") }
        #end if
    #end if
    #if $input.format == "fasta" or $input.format == "list":
        #if $input.use_group.to_filter == "yes":
            ,group=input_use_group_group_in.dat
            #if $input.use_group.groups:
                ,groups=${ str($input.use_group.groups).replace(",","-") }
            #end if
            ,persample=$input.use_group.persample
        #end if
    #end if
    #if $count:
        ,count=count.dat
    #end if
    #if $taxonomy:
        ,taxonomy=taxonomy.dat
    #end if
    #if $size:
        ,size=$size
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Create a sub sample" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The sub.sample_ command can be used as a way to normalize your data, or to create a smaller set from your original set. It takes as an input the following file types: fasta, list_, shared_, rabund_ and sabund_ to generate a new file that contains a sampling of your original file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _sub.sample: https://www.mothur.org/wiki/Sub.sample

    """ ;
            gal:id "mothur_sub_sample" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Select type of data to sub sample" ;
                                    gal:name "format" ;
                                    gal:option [ gal:value "list" ;
                                            dc:description "OTU List" ],
                                        [ gal:value "fasta" ;
                                            dc:description "FASTA" ],
                                        [ gal:value "shared" ;
                                            dc:description "OTU Shared" ],
                                        [ gal:value "sabund" ;
                                            dc:description "OTU Shared Abundance (sabund)" ],
                                        [ gal:value "rabund" ;
                                            dc:description "OTU Relative Abundance (rabund)" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:conditional [ gal:name "use_group" ;
                                            gal:param [ gal:label "Use groups?" ;
                                                    gal:name "to_filter" ;
                                                    gal:option [ gal:value "yes" ;
                                                            dc:description "Yes" ],
                                                        [ gal:value "no" ;
                                                            dc:description "No" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:checked "false" ;
                                                            gal:falsevalue "false" ;
                                                            gal:label "persample - select subsample of the same size from each of the groups" ;
                                                            gal:name "persample" ;
                                                            gal:truevalue "true" ;
                                                            gal:type "boolean" ],
                                                        [ gal:label "groups - Pick groups to include" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:optional "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group_in" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ],
                                                        [ gal:format "mothur.groups" ;
                                                            gal:label "group - Groups" ;
                                                            gal:name "group_in" ;
                                                            gal:type "data" ] ;
                                                    gal:value "yes" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "no" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Group Names from your history" ;
                                            gal:name "name_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "fasta" ;
                                            gal:label "fasta - " ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:label "groups - Pick groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.sabund" ;
                                            gal:label "sabund - OTU Species Abundance" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "sabund" ;
                                    dc:description """
                """ ],
                                [ gal:conditional [ gal:name "use_group" ;
                                            gal:param [ gal:label "Use groups" ;
                                                    gal:name "to_filter" ;
                                                    gal:option [ gal:value "no" ;
                                                            dc:description "No" ],
                                                        [ gal:value "yes" ;
                                                            dc:description "Yes" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:format "mothur.groups" ;
                                                            gal:label "group - Groups" ;
                                                            gal:name "group_in" ;
                                                            gal:type "data" ],
                                                        [ gal:checked "false" ;
                                                            gal:falsevalue "false" ;
                                                            gal:label "persample - select subsample of the same size from each of the groups" ;
                                                            gal:name "persample" ;
                                                            gal:truevalue "true" ;
                                                            gal:type "boolean" ],
                                                        [ gal:label "groups - Pick groups to include" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:optional "true" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group_in" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:value "yes" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "no" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "list" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.rabund" ;
                                            gal:label "rabund - OTU Relative Abundance" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "rabund" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "size - If set, the number of samples to pick" ;
                            gal:min "1" ;
                            gal:name "size" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.seq.taxonomy,mothur.ref.taxonomy" ;
                            gal:label "taxonomy - allows a taxonomy file" ;
                            gal:name "taxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Sub.sample" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.subsample\\.dat" ] ;
                            gal:filter "input['format'] == 'list'" ;
                            gal:label "${tool.name} on ${on_string}: subsample.list" ;
                            gal:name "list_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.subsample\\.dat" ] ;
                            gal:filter "input['format'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: subsample.shared" ;
                            gal:name "shared_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "input['format'] == 'rabund'" ;
                            gal:format "mothur.rabund" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.rabund" ;
                            gal:name "rabund_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "taxonomy" ;
                            gal:format_source "taxonomy" ;
                            gal:from_work_dir "taxonomy.subsample.dat" ;
                            gal:label "${tool.name} on ${on_string}: subsample.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "input['format'] == 'sabund'" ;
                            gal:format "mothur.sabund" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.sabund" ;
                            gal:name "sabund_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "input['format'] == 'fasta' and input['name_in']" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "input_name_in*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.names" ;
                            gal:name "names_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "input['format'] == 'fasta'" ;
                            gal:format_source "otu" ;
                            gal:from_work_dir "input_otu*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "(input['format'] == 'fasta' or input['format'] == 'list') and input['use_group']['to_filter'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "input_use_group_group_in*.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count.subsample.*" ;
                            gal:label "${tool.name} on ${on_string}: subsample.count" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with list " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "label" ],
                                                        [ gal:text "numOtus" ] ;
                                                    dc:description """
                       """ ] ;
                                            gal:ftype "mothur.list" ;
                                            gal:name "0.20" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "format" ;
                                    gal:value "list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with sabund " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "0.55" ],
                                                [ gal:text "unique" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "sabund" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.sabund" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with shared " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "forest" ],
                                                        [ gal:text "numOtus" ],
                                                        [ gal:text "label" ] ;
                                                    gal:not_has_text [ gal:text "pasture" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.shared" ;
                                            gal:name "0.20" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "shared_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "shared" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.20" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with count file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-count-format" ] ;
                                            gal:has_line_matching [ gal:expression "^U\\d+\\t\\d$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "count" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with list and group file and label select" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "numOtus" ],
                                                        [ gal:text "label" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.list" ;
                                            gal:name "0.20" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "label" ;
                                    gal:value "0.20,0.45,0.55" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "to_filter" ;
                                    gal:value "yes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "format" ;
                                    gal:value "list" ] ],
                        [ gal: " test with rabund " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "unique" ],
                                                [ gal:text "0.55" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "format" ;
                                    gal:value "rabund" ],
                                [ gal:ftype "mothur.rabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.rabund" ] ],
                        [ gal: " test with fasta and group file and name file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text_matching [ gal:expression ">U[0-9]+" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^U[0-9]+\\t(forest|pasture)$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.groups" ;
                                    gal:name "group_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^U[0-9]+\\tU[0-9]+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "format" ;
                                    gal:value "fasta" ],
                                [ gal:name "to_filter" ;
                                    gal:value "yes" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with fasta and taxonomy " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^U[0-9]+\\tBacteria.*$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text ">U" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "format" ;
                                    gal:value "fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "amazon.wang.wang.taxonomy" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "sub.sample" ;
            schema:sku 17 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$matrix.dist' matrix.dist.dat &&
#if str($matrix.method_name.method) == "count" :
        ln -s '$matrix.method_name.count' matrix.method_name.count.dat &&
#else
       ln -s '$matrix.method_name.names' matrix.method_name.names.dat &&
#end if


echo 'sens.spec(
    list=otu.dat,
    #if str($matrix.format) == "phylip":
        phylip=matrix.dist.dat,
    #else
        column=matrix.dist.dat,
    #end if
    #if str($matrix.method_name.method) == "count" :
       count=matrix.method_name.count.dat,
    #else
       names=matrix.method_name.names.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    precision=$precision,
    cutoff=$cutoff
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Determine the quality of OTU assignment" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.02810-10" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The sens.spec_ command takes a list_ and either a column_  or phylip_ distance matrix to determine the quality of OTU assignment.


.. _list: https://www.mothur.org/wiki/List_file
.. _column: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _sens.spec: https://www.mothur.org/wiki/Sens.spec

    """ ;
            gal:id "mothur_sens_spec" ;
            gal:inputs [ gal:conditional [ gal:name "matrix" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select a Distance Matrix Format" ;
                                    gal:name "format" ;
                                    gal:option [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Matrix " ] ;
                                    gal:type "select" ;
                                    dc:description """
                        """ ] ;
                            gal:when [ gal:conditional [ gal:name "method_name" ;
                                            gal:param [ gal:help "" ;
                                                    gal:label "Select a Method" ;
                                                    gal:name "method" ;
                                                    gal:option [ gal:value "name" ;
                                                            dc:description "name file associated with your distance matrix. " ],
                                                        [ gal:value "count" ;
                                                            dc:description "count file associated with your distance matrix." ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                                        """ ] ;
                                            gal:when [ gal:param [ gal:format "mothur.count_table" ;
                                                            gal:help "generated by count.seqs" ;
                                                            gal:label "count - a count_table" ;
                                                            gal:name "count" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ] ;
                                                    gal:value "count" ;
                                                    dc:description """
                                        """ ],
                                                [ gal:param [ gal:format "mothur.names" ;
                                                            gal:label "name - Sequences Name reference" ;
                                                            gal:name "names" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ] ;
                                                    gal:value "name" ;
                                                    dc:description """
                                        """ ] ;
                                            dc:description """
                                """ ] ;
                                    gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                        """ ],
                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                        """ ] ;
                            dc:description """
                """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "Ignore pairwise distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:name "cutoff" ;
                            gal:type "float" ;
                            gal:value "-1" ],
                        [ gal:label "precision - Precision for rounding distance values" ;
                            gal:min "0" ;
                            gal:name "precision" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "100" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "By default all are included if no selection is made." ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "labels" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.dist,phylip,tabular" ;
                            gal:label "phylip,column - Distance Matrix" ;
                            gal:name "dist" ;
                            gal:type "data" ] ;
                    dc:description """
	""" ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Sens.spec" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.sensspec" ;
                            gal:label "${tool.name} on ${on_string}: sensspec" ;
                            gal:name "sensspec" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "720789a7ef4da26928a61161279d7344" ;
                                    gal:name "sensspec" ] ;
                            gal:param [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "count" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ;
                            dc:description """
	""" ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "3992dec1d799ec3a061b3ef713a58382" ;
                                    gal:name "sensspec" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "count" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "names" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "cutoff" ;
                                    gal:value "0.10" ] ;
                            dc:description """
	    """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "sens.spec" ;
            schema:sku 2 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$group' group.dat &&
ln -s '$count' count.dat &&

echo 'parse.list(
    list=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    group=group.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a List file for each group" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The parse.list_ command reads a list_ file and group_ file and generates a list_ file for each group_ in the groupfile.

.. _list: https://www.mothur.org/wiki/List_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _parse.list: https://www.mothur.org/wiki/Parse.list

v.1.19.0: Updated to mothur 1.33, added count parameter

    """ ;
            gal:id "mothur_parse_list" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - To filter: Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:name "group" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Parse.list" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.list" ] ;
                            gal:label "${tool.name} on ${on_string}: listfiles per group and label" ;
                            gal:name "listfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:name "listfiles" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "5c803fd0f0e1de69c51048e02bc02e65" ;
                                            gal:name "pasture.0.21" ] ;
                                    gal:name "listfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "parse.list" ;
            schema:sku 103 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$dist2' dist2.dat &&

echo 'mantel(
    phylip1=dist.dat,
    phylip2=dist2.dat,
    method=$method,
    iters=$iters
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Mantel correlation coefficient between two matrices." ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:expand [ gal:macro "citations-ecology" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The mantel_ command calculates the Mantel correlation coefficient between two matrices_.

.. _matrices: //www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _mantel: https://www.mothur.org/wiki/Mantel

    """ ;
            gal:id "mothur_mantel" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "method - pearson, spearman, or kendall. Default: pearson" ;
                            gal:name "method" ;
                            gal:option [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:value "spearman" ;
                                    dc:description "spearman" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
                """ ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:name "dist" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of random configuration to try (default 1000)" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip2 - Distance Matrix" ;
                            gal:name "dist2" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Mantel" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.mantel" ;
                            gal:label "${tool.name} on ${on_string}: mantel" ;
                            gal:name "mantel" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^Mantel\\tpValue$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "mantel" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "dist" ;
                                    gal:value "veg.dist" ],
                                [ gal:name "dist2" ;
                                    gal:value "env.dist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "mantel" ;
            schema:sku 34 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

 echo 'get.relabund(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    scale=$scale
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Calculate the relative abundance of each otu" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.relabund_ command calculates the relative abundance of each otu in a sample from a shared_ file. It outputs a .relabund_ file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _get.relabund: https://www.mothur.org/wiki/Get.relabund

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_relabund" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.shared" ;
                            gal:help "Use Make.shared to create a shared file from a list and a group file" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "scale - Scale by" ;
                            gal:name "scale" ;
                            gal:option [ gal:value "totalotu" ;
                                    dc:description "Total OTUs" ],
                                [ gal:value "averagegroup" ;
                                    dc:description "Average Groups" ],
                                [ gal:value "averageotu" ;
                                    dc:description "Average OTUs" ],
                                [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "Total Groups" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.relabund" ;
            gal:outputs [ gal:data [ gal:format "mothur.relabund" ;
                            gal:from_work_dir "otu*.relabund" ;
                            gal:label "${tool.name} on ${on_string}: relabund" ;
                            gal:name "relabund" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.relabund" ;
                                    gal:ftype "mothur.relabund" ;
                                    gal:name "relabund" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.relabund" ;
                                    gal:md5 "3f91820ebdf2d4c640b7d1489fd67936" ;
                                    gal:name "relabund" ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.relabund" ;
            schema:sku 53 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$design' design.dat &&

echo 'metastats(
    shared=otu.dat,
    design=design.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    iters=$iters,
    threshold=$threshold,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "generate principle components plot data" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1371/journal.pcbi.1000352" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The metastats_ command generate principle components plot data.

.. _metastats: https://www.mothur.org/wiki/Metastats

v.1.21.0: Updated to mothur 1.33

    """ ;
            gal:id "mothur_metastats" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "threshold - significance level to reject null hypotheses" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:name "threshold" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:label "sets - group sets to analyze" ;
                            gal:multiple "true" ;
                            gal:name "sets" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "design" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:name "design" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of randomizations (default 1000)" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Metastats" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "txt" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.metastats" ] ;
                            gal:label "${tool.name} on ${on_string}: metastats" ;
                            gal:name "metastats" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "1000 permutations" ],
                                                        [ gal:text "variance" ],
                                                        [ gal:text "OTU" ],
                                                        [ gal:text "group2" ],
                                                        [ gal:text "group1" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "txt" ;
                                            gal:name "0.23.tardis_dalek" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "metastats" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "42 permutations" ],
                                                        [ gal:text "group1" ],
                                                        [ gal:text "group2" ],
                                                        [ gal:text "variance" ],
                                                        [ gal:text "OTU" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "txt" ;
                                            gal:name "0.23.tardis_dalek" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "metastats" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "threshold" ;
                                    gal:value "0.1" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "iters" ;
                                    gal:value "42" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.23" ],
                                [ gal:name "sets" ;
                                    gal:value "tardis,dalek" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "metastats" ;
            schema:sku 69 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'summary.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
        groupmode=$groupmode
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $calc:
        ,calc=${ str($calc).replace(",","-") }
    #end if
    #if $abund:
        ,abund=$abund
    #end if
    #if $size:
        ,size=$size
    #end if
    #if $subsample.use == 'yes':
        #if $subsample.subsample:
            ,subsample=$subsample.subsample
        #else
            ,subsample=T
        #end if
        #if $subsample.iters:
            ,iters=$subsample.iters
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
#if $subsample.use == 'yes' and not ($otu.extension == 'mothur.shared' and not $groupmode):
    && mv otu.*ave[_-]std.summary otu.ave-std
#end if
    """ ;
            gal:description "Summary of calculator values for OTUs" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The summary.single_ command produce a summary file that has the calculator value for each line in the OTU data and for all possible comparisons between the different groups in the group_ file.  This can be useful if you aren't interested in generating collector's or rarefaction curves for your multi-sample data analysis. It would be worth your while, however, to look at the collector's curves for the calculators you are interested in to determine how sensitive the values are to sampling. If the values are not sensitive to sampling, then you can trust the values. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _group: https://www.mothur.org/wiki/Group_file
.. _summary.single: https://www.mothur.org/wiki/Summary.single

    """ ;
            gal:id "mothur_summary_single" ;
            gal:inputs [ gal:conditional [ gal:name "subsample" ;
                            gal:param [ gal:label "produce subsample distance matrices" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:help "If using shared input: may be left blank to use the size of your smallest group" ;
                                            gal:label "subsample - size of the sample" ;
                                            gal:name "subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ],
                                        [ gal:label "iters - Number of times to run the subsample" ;
                                            gal:name "iters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "size - enter the size of the sample, if not set mothur will use the size of your smallest group" ;
                            gal:min "1" ;
                            gal:name "size" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "If false, create a summary file per group." ;
                            gal:label "groupmode - Collate shared summary results in one file" ;
                            gal:name "groupmode" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:value "qstat" ;
                                    dc:description "qstat - Community diversity the Q statistic" ],
                                [ gal:selected "true" ;
                                    gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:value "bstick" ;
                                    dc:description "bstick - Statistical distribution tests whether observed data follow the broken stick distribution" ],
                                [ gal:selected "true" ;
                                    gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:selected "true" ;
                                    gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ],
                                [ gal:value "bergerparker" ;
                                    dc:description "bergerparker - Community diversity the Berger-Parker index" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ],
                                [ gal:value "solow" ;
                                    dc:description "solow - Estimator Solow's estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "geometric" ;
                                    dc:description "geometric - Statistical distribution tests whether observed data follow the geometric series distribution" ],
                                [ gal:selected "true" ;
                                    gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "shen" ;
                                    dc:description "shen - Estimator Shen's estimator" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:value "logseries" ;
                                    dc:description "logseries - Statistical distribution tests whether observed data follow the log series distribution" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:value "boneh" ;
                                    dc:description "boneh - Estimator Boneh's estimator" ],
                                [ gal:value "goodscoverage" ;
                                    dc:description "goodscoverage - Community diversity the Good's estimate of sampling coverage " ],
                                [ gal:selected "true" ;
                                    gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ],
                                [ gal:value "efron" ;
                                    dc:description "efron - Estimator Efron's estimator" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs" ;
                            gal:min "0" ;
                            gal:name "abund" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Summary.single" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.summary" ] ;
                            gal:filter "otu.extension == 'mothur.shared' and not groupmode" ;
                            gal:label "${tool.name} on ${on_string}: summaries per group" ;
                            gal:name "summaryfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "groupmode" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ;
                            dc:description """
            """ ],
                        [ gal:filter "subsample['use'] and not (otu.extension == 'mothur.shared' and not groupmode)" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.ave-std" ;
                            gal:label "${tool.name} on ${on_string}: ave-std.summary" ;
                            gal:name "subsample_summary" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with shared and default params " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "eaf5304b383c3c5764193ac7f49589db" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with label select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "06039951e867e7d397db08aeb668f94f" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "calc" ;
                                    gal:value "ace,bootstrap,chao,jack,sobs,simpsoneven,shannoneven,heip,smithwilson,bergerparker,coverage,goodscoverage,simpson,invsimpson,qstat,shannon,npshannon,boneh,efron,shen,solow,logseries,geometric,bstick,nseqs" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.32" ] ],
                        [ gal: " test with shared and not groupmode " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "96e2c1213f25d6c342ba87ab3d2de6bf" ;
                                            gal:name "forest" ] ;
                                    gal:name "summaryfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "groupmode" ;
                                    gal:value "false" ] ],
                        [ gal: " test with rabund and subsample " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "shannon" ],
                                                [ gal:text "unique" ],
                                                [ gal:text "0.05" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "unique" ],
                                                [ gal:text "0.05" ],
                                                [ gal:text "shannon" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "subsample_summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.rabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.rabund" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "iters" ;
                                    gal:value "42" ],
                                [ gal:name "subsample" ;
                                    gal:value "10" ] ],
                        [ gal: " test with shared and subsampling " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "eaf5304b383c3c5764193ac7f49589db" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.2" ;
            dc:description """
    """ ;
            dc:title "summary.single" ;
            schema:sku 82 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&
#if $svg_cond.svg == "yes":
    ln -s '$svg_cond.name' svg.name.dat &&
#end if

echo 'chimera.check(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    #if $svg_cond.svg == "yes":
        svg=yes,
        name=svg.name.dat,
    #end if
    increment=$increment,
    ksize=$ksize,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using chimeraCheck" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.check_ command identifies putative chimeras using the chimeraCheck approach. It looks at distance of left side of query to it's closest match + distance of right side of query to it's closest match - distance of whole query and its closest match over several windows.

Note: following the RDP model this method does not determine whether or not a sequence is chimeric, but allows you to determine that based on the IS values produced.

.. _chimera.check: https://www.mothur.org/wiki/Chimera.check

    """ ;
            gal:id "mothur_chimera_check" ;
            gal:inputs [ gal:conditional [ gal:name "alignment" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "svg_cond" ;
                            gal:param [ gal:argument "svg" ;
                                    gal:label "svg - Generate a SVG plot for each query sequence" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Names of queries for which to generate SVG plot" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "increment" ;
                            gal:help "Default is 10, but you may set it up to sequence length minus twice the window." ;
                            gal:label "increment - Increment for window slide on each iteration" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "ksize" ;
                            gal:help "uses default if < 1" ;
                            gal:label "ksize - kmer length to determine differences between sequence fragments" ;
                            gal:type "integer" ;
                            gal:value "7" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.check" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:pattern "(?P<designation>.*)\\.chimeracheck\\.svg" ] ;
                            gal:filter "svg['gen'] == 'yes'" ;
                            gal:label "${tool.name} on ${on_string}: SVG images" ;
                            gal:name "images" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.chimeracheck.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: chimeracheck.chimeras" ;
                            gal:name "chimeracheck.chimeras" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.chimeracheck.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "chimeracheck.chimeras" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.chimeracheck.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "chimeracheck.chimeras" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:file "M00967_43_000000000-A3JHG_1_1101_14010_4122.chimeracheck.svg" ;
                                            gal:name "M00967_43_000000000-A3JHG_1_1101_14010_4122" ],
                                        [ gal:md5 "0d99dc17c183dab4efc75c697060a9a5" ;
                                            gal:name "M00967_43_000000000-A3JHG_1_1101_13293_4703" ] ;
                                    gal:name "images" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "svg" ;
                                    gal:value "yes" ],
                                [ gal:name "name" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.names_tiny" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.check" ;
            schema:sku 80 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'pre.cluster(
    fasta=fasta.dat,
    #if $name.is_of_type("mothur.names"):
        name=name.dat,
    #elif $name.is_of_type("mothur.count_table"):
        count=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    diffs=$diffs,
    match=$match,
    mismatch=$mismatch,
    gapopen=$gapopen,
    gapextend=$gapextend,
    topdown=$topdown,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

cat fasta* &&

if [ -f fasta.precluster.map ]; then mv fasta.precluster.map fasta.precluster.fasta.map; fi
    """ ;
            gal:description "Remove sequences due to pyrosequencing errors" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1098/rstb.1994.0085" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The pre.cluster_ command implements a pseudo-single linkage algorithm with the goal of removing sequences that
are likely due to pyrosequencing errors. The basic idea is that abundant sequences are more likely to generate
erroneous sequences than rare sequences. With that in mind, the algorithm proceeds by ranking sequences in order
of their abundance. Then we walk through the list of sequences looking for rarer sequences that are within some
threshold of the original sequence. Those that are within the threshold are merged with the larger sequence.
The original Huse method performs this task on a distance matrix, whereas we do it based on the original sequences.
The advantage of our approach is that the algorithm works on aligned sequences instead of a distance matrix.
This is advantageous because by pre-clustering you remove a large number of sequences making the distance
calculation much faster.

.. _pre.cluster: https://www.mothur.org/wiki/Pre.cluster

v1.24.0: Updated to mothur 1.33, added count and topdown parameter

    """ ;
            gal:id "mothur_pre_cluster" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "gapopen" ;
                            gal:label "gapopen - penalty for opening a gap (default -2)" ;
                            gal:type "integer" ;
                            gal:value "-2" ],
                        [ gal:argument "diffs" ;
                            gal:label "diffs - Number of mismatched bases to allow between sequences in a group (default 1)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "match" ;
                            gal:label "match - reward for a match (default 1)" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "topdown" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "cluster from largest abundance to smallest or vice versa. Default=Yes, meaning largest to smallest" ;
                            gal:label "topdown" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "gapextend" ;
                            gal:label "gapextend - penalty for extending a gap (default -1)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names,mothur.count_table" ;
                            gal:label "name file or count table - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequence Fasta" ;
                            gal:type "data" ],
                        [ gal:argument "mismatch" ;
                            gal:label "mismatch - penalty for a mismatch (default -1)" ;
                            gal:type "integer" ;
                            gal:value "-1" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Pre.cluster" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "fasta\\.precluster\\.(?P<designation>.*)\\.map" ] ;
                            gal:label "${tool.name} on ${on_string}: precluster.map" ;
                            gal:name "map_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "name.ext != \"mothur.count_table\"" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.precluster.names" ;
                            gal:label "${tool.name} on ${on_string}: precluster.names" ;
                            gal:name "names_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name.ext == \"mothur.count_table\"" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "fasta*.precluster.count_table" ;
                            gal:label "${tool.name} on ${on_string}: precluster.count_table" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.precluster.dat" ;
                            gal:label "${tool.name} on ${on_string}: precluster.fasta" ;
                            gal:name "fasta_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with fasta and count table " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-count-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "1" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "U68589" ],
                                                        [ gal:text "ideal_seq_1" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "tabular" ;
                                            gal:name "fasta" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "map_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.count_table" ;
                                    gal:name "name" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta_head" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with fasta and names file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-names-format" ] ;
                                            gal:has_line_matching [ gal:expression "^U68589\\tU68589$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "1" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "ideal_seq_1" ],
                                                        [ gal:text "U68589" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "tabular" ;
                                            gal:name "fasta" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "map_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name" ;
                                    gal:value "amazon.head.names" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta_head" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "pre.cluster" ;
            schema:sku 23 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$qfile' qfile.dat &&
ln -s '$contigsreport' contigsreport.dat &&

echo 'rename.seqs(
    fasta=fasta.dat,
    group=group.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $qfile:
        qfile=qfile.dat,
    #end if
    #if $contigsreport:
        contigsreport=contigsreport.dat,
    #end if
    placement=$placement
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Rename sequences by concatenating the group name" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The rename.seqs_ command takes fasta-formatted sequence file and group file, and renames
the sequences by appending the group name to the sequence number.

.. _rename.seqs: https://www.mothur.org/wiki/Rename.seqs

    """ ;
            gal:id "mothur_rename_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "qfile" ;
                            gal:format "qual454" ;
                            gal:label "quality file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "placement" ;
                            gal:label "Placement of group name" ;
                            gal:option [ gal:value "front" ;
                                    dc:description "front" ],
                                [ gal:selected "true" ;
                                    gal:value "back" ;
                                    dc:description "back" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "contigsreport" ;
                            gal:format "tabular" ;
                            gal:label "Contigsreport file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "Names file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "Fasta file" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "Group file" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Rename.seqs" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "fasta.renamed_map" ;
                            gal:label "${tool.name} on ${on_string}: renaming map" ;
                            gal:name "map" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: fasta_renamed" ;
                            gal:name "fasta_renamed" ],
                        [ gal:format "mothur.groups" ;
                            gal:from_work_dir "group.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: group_renamed" ;
                            gal:name "group_renamed" ],
                        [ gal:filter "qfile" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "qfile.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: qfile_renamed" ;
                            gal:name "qfile_renamed" ;
                            dc:description """
            """ ],
                        [ gal:filter "name" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: name_renamed" ;
                            gal:name "name_renamed" ;
                            dc:description """
            """ ],
                        [ gal:filter "contigsreport" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "contigsreport.renamed.dat" ;
                            gal:label "${tool.name} on ${on_string}: contigsreport_renamed" ;
                            gal:name "contigsreport_renamed" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with required params " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "42_forest" ],
                                                [ gal:text "42_pasture" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_renamed" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^42_forest\\tU68631$" ] ;
                                            gal:has_n_columns [ gal:n "2" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "map" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^42_forest\\t42_forest$" ] ;
                                            gal:has_n_columns [ gal:n "2" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "name_renamed" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^42_forest\\tforest$" ] ;
                                            gal:has_n_columns [ gal:n "2" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.groups" ;
                                    gal:name "group_renamed" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "group" ;
                                    gal:value "amazon.groups" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "rename.seqs" ;
            schema:sku 28 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$sff' sff.dat &&
ln -s '$accnos' accnos.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'sffinfo(
    sff=sff.dat,
    fasta=$fasta,
    qfile=$qfile,
    $sfftxt
    flow=$flow,
    trim=$trim
    #if $accnos:
        ,accnos=accnos.dat
    #end if
    #if $oligo.add == "yes":
        ,oligos=oligo.oligos.dat
        ,bdiffs=$oligo.bdiffs
        ,pdiffs=$oligo.pdiffs
        ,tdiffs=$oligo.tdiffs
        ,ldiffs=$oligo.ldiffs
        ,sdiffs=$oligo.sdiffs
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Summarize the quality of sequences" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The sffinfo_ command will summarize the quality of sequences in an unaligned or aligned fasta-formatted sequence file.


.. _sffinfo: https://www.mothur.org/wiki/Sffinfo

    """ ;
            gal:id "mothur_sffinfo" ;
            gal:inputs [ gal:conditional [ gal:name "oligo" ;
                            gal:param [ gal:help "a file that can contain the sequences of the forward and reverse primers and barcodes and their sample identifier. Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\" or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:name "add" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "bdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "sdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:name "oligos" ;
                                            gal:type "data" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "pdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "ldiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "tdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "sff" ;
                            gal:label "sff - Sff data" ;
                            gal:name "sff" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "qfile - Add qfile to your history" ;
                            gal:name "qfile" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "fasta - Add fasta to your history" ;
                            gal:name "fasta" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "trim - Trim sequences and quality scores" ;
                            gal:name "trim" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "flow - Add flow to your history" ;
                            gal:name "flow" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "" ;
                            gal:label "sfftxt - Add sfftxt to your history" ;
                            gal:name "sfftxt" ;
                            gal:truevalue "sfftxt=true," ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Limit output to named Accessions" ;
                            gal:name "accnos" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Sffinfo" ;
            gal:outputs [ gal:data [ gal:filter "qfile" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "sff*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            gal:name "out_qfile" ;
                            dc:description """
            """ ],
                        [ gal:filter "flow" ;
                            gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "sff*.flow" ;
                            gal:label "${tool.name} on ${on_string}: flowgram" ;
                            gal:name "out_flow" ;
                            dc:description """
            """ ],
                        [ gal:filter "sfftxt" ;
                            gal:format "txt" ;
                            gal:from_work_dir "sff*.sff.txt" ;
                            gal:label "${tool.name} on ${on_string}: sff.txt" ;
                            gal:name "out_sfftxt" ;
                            dc:description """
            """ ],
                        [ gal:filter "fasta" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "sff*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "out_fasta" ;
                            dc:description """
            """ ],
                        [ gal:filter "oligo['add'] == 'yes'" ;
                            gal:format "sff" ;
                            gal:from_work_dir "sff*.scrap.sff" ;
                            gal:label "${tool.name} on ${on_string}: scrap.sff" ;
                            gal:name "out_scrap" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test without oligos " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "34b17477f98ab19c1ff755a61848d968" ;
                                    gal:name "out_flow" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "fbe6f4d51959d4723a8417636476d0e0" ;
                                    gal:name "out_fasta" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "ffcc4831369139055e1b8e9add9a59c0" ;
                                    gal:name "out_qfile" ],
                                [ gal:ftype "txt" ;
                                    gal:md5 "fdc80c8e476016632d317cfd7893713c" ;
                                    gal:name "out_sfftxt" ] ;
                            gal:param [ gal:name "sff" ;
                                    gal:value "Fasting_Example1.sff" ],
                                [ gal:name "sfftxt" ;
                                    gal:value "true" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with oligos file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "34b17477f98ab19c1ff755a61848d968" ;
                                    gal:name "out_flow" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "212fa15e1ed077cecb65ee87f17ef2e1" ;
                                    gal:name "out_fasta" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "ffcc4831369139055e1b8e9add9a59c0" ;
                                    gal:name "out_qfile" ],
                                [ gal:compare "sim_size" ;
                                    gal:file "Fasting_Example1.scrap.sff" ;
                                    gal:ftype "sff" ;
                                    gal:name "out_scrap" ] ;
                            gal:param [ gal:name "add" ;
                                    gal:value "yes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:name "sff" ;
                                    gal:value "Fasting_Example1.sff" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "sffinfo" ;
            schema:sku 41 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'collect.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    freq=$freq,
    all=true
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& rm otu.dat  ## don't want this collected into datacollection
    """ ;
            gal:description "Generate collector's curves for calculators on OTUs" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.00474-06" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The collect.shared_ command generates collector's curves for calculators_, which describe the similarity between communities or their shared richness. Collector's curves describe how richness or diversity change as you sample additional individuals. If a collector's curve becomes parallel to the x-axis, you can be reasonably confident that you have done a good job of sampling and can trust the last value in the curve.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _calculators: https://www.mothur.org/wiki/Calculators
.. _collect.shared: https://www.mothur.org/wiki/Collect.shared

    """ ;
            gal:id "mothur_collect_shared" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "To filter: select select at least 2 groups" ;
                            gal:label "groups - Groups filter (uses all groups if none are selected)" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "by default it is set to 100. But you can set it to a percentage of the number of sequence. For example freq=0.10, means 10%" ;
                            gal:label "freq - indicates when to output your data" ;
                            gal:max "100.0" ;
                            gal:min "0.0" ;
                            gal:name "freq" ;
                            gal:type "float" ;
                            gal:value "100" ],
                        [ gal: " set default option(s) " ;
                            gal:expand [ gal:macro "calc-common" ] ;
                            gal:label "calc - Calculators (Uses defaults if none are selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jabund" ;
                                    dc:description "jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jest" ;
                                    dc:description "jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedace" ;
                                    dc:description "sharedace - Shared community richness the two sample shared ACE richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "sorabund" ;
                                    dc:description "sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "thetan" ;
                                    dc:description "thetan - Community Structure Similarity the Smith theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedsobs" ;
                                    dc:description "sharedsobs - Shared community richness the observed richness shared between two or more samples" ],
                                [ gal:selected "true" ;
                                    gal:value "sorclass" ;
                                    dc:description "sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness" ],
                                [ gal:selected "true" ;
                                    gal:value "sorest" ;
                                    dc:description "sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses" ],
                                [ gal:selected "true" ;
                                    gal:value "sharedchao" ;
                                    dc:description "sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Label filter" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Collect.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "otu\\.(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: calculators" ;
                            gal:name "calcfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with group and label select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "39" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "1289eac7fdcfb42eaf4ee35deb6fb0a4" ;
                                            gal:name "jest" ] ;
                                    gal:name "calcfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "calc" ;
                                    gal:value "sharedsobs,sharedchao,sharedace,anderberg,jclass,jest,kulczynski,kulczynskicody,kstest,lennon,ochiai,sorclass,sorest,whittaker,hamming,memchi2,memchord,memeuclidean,mempearson,braycurtis,jabund,morisitahorn,sorabund,thetan,thetayc,canberra,gower,hellinger,manhattan,odum,soergel,spearman,speciesprofile,structchi2,structchord,structeuclidean,structkulczynski,structpearson,sharednseqs" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "11" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "22e97fbdbdadf3c4748d0f7c4d526855" ;
                                            gal:name "jest" ] ;
                                    gal:name "calcfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "collect.shared" ;
            schema:sku 27 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#for $i in $merge.inputs:
    ln -s '$i' input${merge.inputs.index($i)}.dat &&
#end for

echo 'merge.files(
    input=#for $i in $merge.inputs#input${merge.inputs.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Merge data" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """
@MOTHUR_OVERVIEW@

**Command Documentation**

The merge.files_ command merge inputs into a single output.

.. _merge.files: https://www.mothur.org/wiki/Merge.files


    """ ;
            gal:id "mothur_merge_files" ;
            gal:inputs [ gal: " merge " ;
                    gal:conditional [ gal: " fasta ",
                                " groups ",
                                " names ",
                                " qual " ;
                            gal:name "merge" ;
                            gal:param [ gal:format "fasta,qual,mothur.groups,mothur.names,mothur.accnos" ;
                                    gal:label "Merge" ;
                                    gal:name "type" ;
                                    gal:option [ gal:value "names" ;
                                            dc:description "name files" ],
                                        [ gal:value "groups" ;
                                            dc:description "group files" ],
                                        [ gal:value "qual" ;
                                            dc:description "qual files" ],
                                        [ gal:value "fasta" ;
                                            dc:description "fasta files" ],
                                        [ gal:value "accnos" ;
                                            dc:description "accnos files" ] ;
                                    gal:type "select" ;
                                    dc:description """
            """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.accnos" ;
                                            gal:label "inputs - accnos" ;
                                            gal:multiple "true" ;
                                            gal:name "inputs" ;
                                            gal:type "data" ] ;
                                    gal:value "accnos" ;
                                    dc:description """
            """ ],
                                [ gal:param [ gal:format "fasta" ;
                                            gal:label "inputs - fasta" ;
                                            gal:multiple "true" ;
                                            gal:name "inputs" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ;
                                    dc:description """
            """ ],
                                [ gal:param [ gal:format "qual" ;
                                            gal:label "inputs - qual" ;
                                            gal:multiple "true" ;
                                            gal:name "inputs" ;
                                            gal:type "data" ] ;
                                    gal:value "qual" ;
                                    dc:description """
            """ ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "inputs - names" ;
                                            gal:multiple "true" ;
                                            gal:name "inputs" ;
                                            gal:type "data" ] ;
                                    gal:value "names" ;
                                    dc:description """
            """ ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "inputs - groups" ;
                                            gal:multiple "true" ;
                                            gal:name "inputs" ;
                                            gal:type "data" ] ;
                                    gal:value "groups" ;
                                    dc:description """
            """ ] ;
                            dc:description """
        """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    dc:description """
    """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Merge.files" ;
            gal:outputs [ gal:data [ gal:format_source "inputs" ;
                            gal:label "${tool.name} on ${on_string}: ${merge.type}" ;
                            gal:name "output" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "output.fa" ;
                                    gal:ftype "fasta" ;
                                    gal:name "output" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "type" ;
                                    gal:value "fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "inputs" ;
                                    gal:value "sample1.fa,sample2.fa,sample3.fa" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "merge.files" ;
            schema:sku 65 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$infile.otu' infile.otu.dat &&
ln -s '$accnos' accnos.dat &&

echo 'remove.otus(
    #if $infile.otu.is_of_type("mothur.cons.taxonomy"):
        constaxonomy=infile.otu.data,
    #end if
    #if $infile.otu.is_of_type("mothur.otu.corr"):
        otucorr=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.axes"):
        corraxes=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.list"):
        list=infile.otu.dat,
    #end if
    #if $infile.otu.is_of_type("mothur.shared"):
        shared=infile.otu.dat,
    #end if
    #if $infile.intype == "in_shared" and $infile.label:
        label=${ str($infile.label).replace(",","-") },
    #end if
    accnos=accnos.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Removes OTUs from various file formats" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.otus command removes otu labels from cons.taxonomy, corr.axes, otu.corr, shared and list files. This can be useful especially with subsampled datasets or when groups have been selected.

.. _remove.otus: https://www.mothur.org/wiki/Remove.otus

    """ ;
            gal:id "mothur_remove_otus" ;
            gal:inputs [ gal:conditional [ gal:name "infile" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Which type of files will you be supplying?" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "in_shared" ;
                                            dc:description "Shared or List file" ],
                                        [ gal:value "in_other" ;
                                            dc:description "Constaxonomy / OtuCorr / CorrAxes file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.cons.taxonomy,mothur.otu.corr,mothur.axes" ;
                                            gal:help "constaxonomy file can be obtained by the running classify.otu tool, otucorr from otu.association tool, and corraxes from corr.axes command" ;
                                            gal:label "cons.taxonomy/otu.corr/axes file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_other" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:help "By default first label in your file is used" ;
                                            gal:label "label - pick (one) OTU Label" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.list,mothur.shared" ;
                                            gal:label "shared/list - allows you to input a list file you wish to select OTUs from. " ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_shared" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.otulabels" ;
                            gal:help "Required" ;
                            gal:label "accnos - otulabels" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.otus" ;
            gal:outputs [ gal:data [ gal:format_source "otu" ;
                            gal:from_work_dir "infile.otu*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick" ;
                            gal:name "pick_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with constaxonomy/otucorr/corraxes file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-axes-format" ] ;
                                            gal:has_text [ gal:text "U68686" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.axes" ;
                                    gal:name "pick_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ],
                                [ gal:name "intype" ;
                                    gal:value "in_other" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.axes" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.pcoa.axes" ] ],
                        [ gal: " test with shared/list input and label selection " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-list-format" ] ;
                                            gal:has_text [ gal:text "0.22" ],
                                                [ gal:text "U68686" ] ;
                                            gal:not_has_text [ gal:text "0.03" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "pick_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.22" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "accnos" ;
                                    gal:value "amazon.accnos.otulabels" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.otus" ;
            schema:sku 14 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'pairwise.seqs(
    fasta=fasta.dat,
    align=$align,
    #if $calc:
        calc=$calc,
    #end if
    $countends
    #if float($cutoff) > 0.0:
        cutoff=$cutoff,
    #end if
    #if $scoring.setby == "user":
        match=$scoring.match,
        mismatch=$scoring.mismatch,
        gapopen=$scoring.gapopen,
        gapextend=$scoring.gapextend,
    #end if
    #if $output:
        output=$output,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "calculate uncorrected pairwise distances between sequences" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1016/0022-2836(82)90398-9" ],
                        [ gal:type "doi" ;
                            dc:description "10.1016/0022-2836(70)90057-4" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The pairwise.seqs_ command will calculate uncorrected pairwise distances between sequencesi as a column-formatted_distance_matrix_ or  phylip-formatted_distance_matrix_.

.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _pairwise.seqs: https://www.mothur.org/wiki/Pairwise.seqs

    """ ;
            gal:id "mothur_pairwise_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "scoring" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Scoring match, mismatch, gapopen, and gapextend" ;
                                    gal:name "setby" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "default" ;
                                            dc:description "Use default settings" ],
                                        [ gal:value "user" ;
                                            dc:description "Manually set scoring values" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "match - Pairwise alignment reward for a match" ;
                                            gal:name "match" ;
                                            gal:type "integer" ;
                                            gal:value "1" ],
                                        [ gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                            gal:name "gapextend" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                            gal:name "mismatch" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                            gal:name "gapopen" ;
                                            gal:type "integer" ;
                                            gal:value "-2" ] ;
                                    gal:value "user" ;
                                    dc:description """
                """ ],
                                [ gal:value "default" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "countends=false," ;
                            gal:help "Penalize terminal gaps" ;
                            gal:label "countends - Countends" ;
                            gal:name "countends" ;
                            gal:truevalue "" ;
                            gal:type "boolean" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:help "" ;
                            gal:label "calc - Calc Method - Gap Penality" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "use default" ],
                                [ gal:value "nogaps" ;
                                    dc:description "nogaps - ignores gaps" ],
                                [ gal:value "onegap" ;
                                    dc:description "onegap - counts a string of gaps as a single gap" ],
                                [ gal:value "eachgap" ;
                                    dc:description "eachgap - penalize each gap" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:name "output" ;
                            gal:option [ gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "Column-Formatted Matrix (Default)" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:name "align" ;
                            gal:option [ gal:value "blast" ;
                                    dc:description "blast" ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ],
                                [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default)" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "Do not save any distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0" ;
                            gal:name "cutoff" ;
                            gal:type "float" ;
                            gal:value "0.0" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Pairwise.seqs" ;
            gal:outputs [ gal:data [ gal:change_format [ gal:when [ gal:format "mothur.square.dist" ;
                                            gal:input "output" ;
                                            gal:value "square" ],
                                        [ gal:format "mothur.lower.dist" ;
                                            gal:input "output" ;
                                            gal:value "lt" ] ;
                                    dc:description """
                """ ] ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "fasta*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:name "out_dist" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "945c494bee1700c7f9a4ce5d87355190" ;
                                    gal:name "out_dist" ] ;
                            gal:param [ gal:name "output" ;
                                    gal:value "lt" ],
                                [ gal:name "gapextend" ;
                                    gal:value "-1" ],
                                [ gal:name "countends" ;
                                    gal:value "countends=false," ],
                                [ gal:name "mismatch" ;
                                    gal:value "-1" ],
                                [ gal:name "calc" ;
                                    gal:value "onegap" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:name "cutoff" ;
                                    gal:value "0.01" ],
                                [ gal:name "align" ;
                                    gal:value "gotoh" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "match" ;
                                    gal:value "2" ],
                                [ gal:name "gapopen" ;
                                    gal:value "-2" ],
                                [ gal:name "setby" ;
                                    gal:value "user" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "bb2fefcda217604cd0e985f676168379" ;
                                    gal:name "out_dist" ] ;
                            gal:param [ gal:name "setby" ;
                                    gal:value "default" ],
                                [ gal:name "countends" ;
                                    gal:value "" ],
                                [ gal:name "calc" ;
                                    gal:value "" ],
                                [ gal:name "align" ;
                                    gal:value "needleman" ],
                                [ gal:name "output" ;
                                    gal:value "" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:name "cutoff" ;
                                    gal:value "0.0" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "pairwise.seqs" ;
            schema:sku 115 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$repfasta' repfasta.dat &&
ln -s '$nameOrCount' nameOrCount.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&
ln -s '$group' group.dat &&

echo 'create.database(
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    ,repfasta=repfasta.dat
    #if $nameOrCount.is_of_type("mothur.names"):
        ,repname=nameOrCount.dat
    #elif $nameOrCount.is_of_type("mothur.count_table"):
        ,count=nameOrCount.dat
    #end if
    ,constaxonomy=constaxonomy.dat
    #if $group:
        ,group=group.dat
    #end if
    #if $label:
        ,label=$label
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "creates a database file from a list, repnames, repfasta and contaxonomy file" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The create.database_ command reads a list_ or shared_ file, .cons.taxonomy, .rep.fasta, .rep.names and optional group file, and creates a database file.

.. _list: https://www.mothur.org/wiki/List_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _create.database: https://www.mothur.org/wiki/Create.database

v.1.28.0: Updated to Mothur 1.33, added count paramter.

    """ ;
            gal:id "mothur_create_database" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.cons.taxonomy" ;
                            gal:help "consensus taxonomy file output by classify.otu" ;
                            gal:label "constaxonomy - Consensus Taxonomy" ;
                            gal:name "constaxonomy" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "Select exactly one label. If none selected, first label in your list or shared file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups for summary file" ;
                            gal:name "group" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:help "rep.fasta file generated by get.oturep" ;
                            gal:label "repfasta - rep.fasta" ;
                            gal:name "repfasta" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names,mothur.count_table" ;
                            gal:help "rep.name file or rep.count_table file generated by get.oturep" ;
                            gal:label "repname/count - Representative sequences" ;
                            gal:name "nameOrCount" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list,mothur.shared" ;
                            gal:label "list or shared - OTU List of Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Create.database" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.database" ;
                            gal:label "${tool.name} on ${on_string}: database" ;
                            gal:name "database" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " Test with a mothur.count_table file ",
                        " Test with a mothur.names file " ;
                    gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "cd-test.database" ;
                                    gal:ftype "tabular" ;
                                    gal:name "database" ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "cd-test.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "repfasta" ;
                                    gal:value "cd-test.repfasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "cd-test.count_table" ],
                                [ gal:name "label" ;
                                    gal:value "unique" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "constaxonomy" ;
                                    gal:value "cd-test.constaxonomy" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "cd-test.database" ;
                                    gal:ftype "tabular" ;
                                    gal:name "database" ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "cd-test.list" ],
                                [ gal:name "label" ;
                                    gal:value "unique" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "repfasta" ;
                                    gal:value "cd-test.repfasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "cd-test.repname" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "constaxonomy" ;
                                    gal:value "cd-test.constaxonomy" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "create.database" ;
            schema:sku 128 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'cluster.classic(
    phylip=dist.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    method=$method,
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    precision=$precision,
    sim=$sim
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to OTUs (Dotur implementation)" ;
            gal:expand [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.71.3.1501-1506.2005" ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.02810-10" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The cluster.classic_ command assign sequences to OTUs (Operational Taxonomy Unit).

.. _cluster.classic: https://www.mothur.org/wiki/Cluster.classic

    """ ;
            gal:id "mothur_cluster_classic" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "sim" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "sim - Matrix values are Similary instead of Distance" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "cutoff" ;
                            gal:help "Ignore pairwise distances larger than this. Default for methods opti,agc,dgc is 0.03, default for the other methods is 0.15" ;
                            gal:label "cutoff - Distance Cutoff threshold" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ],
                        [ gal:argument "precision" ;
                            gal:help "Set higher precision for longer genome scale sequence lengths" ;
                            gal:label "precision - Precision for rounding distance values" ;
                            gal:option [ gal:value "1000000" ;
                                    dc:description ".000001" ],
                                [ gal:value "1000" ;
                                    dc:description ".001" ],
                                [ gal:value "10000" ;
                                    dc:description ".0001" ],
                                [ gal:value "100000" ;
                                    dc:description ".00001" ],
                                [ gal:value "10" ;
                                    dc:description ".1" ],
                                [ gal:selected "true" ;
                                    gal:value "100" ;
                                    dc:description ".01" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "method" ;
                            gal:help "" ;
                            gal:label "method - Select a Clustering Method" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "average" ;
                                    dc:description "Average neighbor" ],
                                [ gal:value "nearest" ;
                                    dc:description "Nearest neighbor" ],
                                [ gal:value "weighted" ;
                                    dc:description "Weighted" ],
                                [ gal:value "furthest" ;
                                    dc:description "Furthest neighbor" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "dist" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:help "format must be mothur.lower.dist or mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Cluster.classic" ;
            gal:outputs [ gal:data [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "dist*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            gal:name "sabund" ],
                        [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "dist*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            gal:name "rabund" ],
                        [ gal:format "mothur.list" ;
                            gal:from_work_dir "dist*.list" ;
                            gal:label "${tool.name} on ${on_string}: list (OTU List)" ;
                            gal:name "otulist" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with phylip and default params" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.sabund" ;
                                    gal:md5 "ac2df77e39a106fa65fae3d2132bc4ea" ;
                                    gal:name "sabund" ],
                                [ gal:ftype "mothur.rabund" ;
                                    gal:md5 "b7f4b5ee46b2c4f5221d487e24dca9db" ;
                                    gal:name "rabund" ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^label\\tnumOtus\\tOtu01\\tOtu02\\tOtu03\\tOtu04\\tOtu05\\tOtu06\\tOtu07\\tOtu08\\tOtu09\\tOtu10\\tOtu11\\tOtu12\\tOtu13\\tOtu14\\tOtu15\\tOtu16\\tOtu17\\tOtu18\\tOtu19\\tOtu20\\tOtu21\\tOtu22\\tOtu23\\tOtu24$" ] ;
                                            gal:has_text [ gal:text "unique" ],
                                                [ gal:text "group" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.list" ;
                                    gal:name "otulist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "dist" ;
                                    gal:value "env.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "cluster.classic" ;
            schema:sku 105 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#if $input.source == "shared":
    ln -s '$input.otu' input.otu.dat &&
#else
    ln -s '$input.metadata' input.metadata.dat &&
#end if

echo 'corr.axes(
    #if $input.source == "shared":
        #if $input.otu.is_of_type("mothur.relabund"):
            relabund=input.otu.dat,
        #elif $input.otu.is_of_type("mothur.shared"):
            shared=input.otu.dat,
        #end if
        #if $input.label:
            label=$input.label,
        #end if
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #else:
        metadata=input.metadata.dat,
    #end if
    method=$method,
    axes=$axes,
    numaxes=$numaxes
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "correlation of data to axes" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:expand [ gal:macro "citations-ecology" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The corr.axes_ command calculates the correlation of data to axes.

.. _corr.axes: https://www.mothur.org/wiki/Corr.axes

v.1.21.0: Updated to mothur 1.33

    """ ;
            gal:id "mothur_corr_axes" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Generate Collector Curvers for" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "metadata" ;
                                            dc:description "Metadata table" ],
                                        [ gal:value "shared" ;
                                            dc:description "OTU Shared or Relabund" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "metadata has the same number of rows as the samples, but the column(s) are floats that describe the samples (e.g. temperature, weight, etc.)" ;
                                            gal:label "metadata - Table of floating point values" ;
                                            gal:name "metadata" ;
                                            gal:type "data" ] ;
                                    gal:value "metadata" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:label "groups - Pairwise comparision groups" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "false" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared,mothur.relabund" ;
                                            gal:label "shared or relabund - OTU Shared or Relabund" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "numaxes - Number of axes to use (default 3)" ;
                            gal:min "0" ;
                            gal:name "numaxes" ;
                            gal:type "integer" ;
                            gal:value "3" ],
                        [ gal:label "method - pearson, spearman, or kendall. Default: pearson" ;
                            gal:name "method" ;
                            gal:option [ gal:value "kendall" ;
                                    dc:description "kendall" ],
                                [ gal:selected "true" ;
                                    gal:value "pearson" ;
                                    dc:description "pearson" ],
                                [ gal:value "spearman" ;
                                    dc:description "spearman" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
                """ ],
                        [ gal:format "mothur.axes" ;
                            gal:label "axes - a pcoa axes dataset" ;
                            gal:name "axes" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Corr.axes" ;
            gal:outputs [ gal:data [ gal:format "mothur.axes" ;
                            gal:from_work_dir "input.*.axes" ;
                            gal:label "${tool.name} on ${on_string}: corr.axes" ;
                            gal:name "corr_axes" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.axes" ;
                                    gal:md5 "34ff44b9a58780bc558afd1d22d96bb1" ;
                                    gal:name "corr_axes" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:ftype "mothur.axes" ;
                                    gal:name "axes" ;
                                    gal:value "amazon.square.pcoa.axes" ] ],
                        [ gal: " test with relabund file and label and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.axes" ;
                                    gal:md5 "014f23f191ec6a9abbb82d51b3d5e24c" ;
                                    gal:name "corr_axes" ] ;
                            gal:param [ gal:ftype "mothur.axes" ;
                                    gal:name "axes" ;
                                    gal:value "amazon.square.pcoa.axes" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.05" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.relabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.relabund" ] ],
                        [ gal: " test with metadata file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.axes" ;
                                    gal:md5 "f62a3b7ed2b75312454a03ebbabe1edc" ;
                                    gal:name "corr_axes" ] ;
                            gal:param [ gal:ftype "tabular" ;
                                    gal:name "metadata" ;
                                    gal:value "amazon.metadata" ],
                                [ gal:name "source" ;
                                    gal:value "metadata" ],
                                [ gal:ftype "mothur.axes" ;
                                    gal:name "axes" ;
                                    gal:value "amazon.square.pcoa.axes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "corr.axes" ;
            schema:sku 87 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $template.source == "self":
    ln -s '$template.count' template.count.dat &&
    ln -s '$template.group' template.group.dat &&
#elif $template.source == "names":
    ln -s '$template.name' template.name.dat &&
#else:
    ln -s '$template.reference' template.reference.dat &&
#end if

echo 'chimera.uchime(
    fasta=fasta.dat,
    #if $template.source == "self":
        reference=self,
        #if float($template.abskew) > 0:
            abskew=$template.abskew,
        #end if
        #if $template.group:
            group=template.group.dat,
        #end if
        #if $template.count:
            count=template.count.dat,
        #end if
    #elif $template.source == "names":
        name=template.name.dat,
    #else:
        reference=template.reference.dat,
    #end if
    minh=$minh,
    mindiv=$mindiv,
    xn=$xn,
    dn=$dn,
    xa=$xa,
    chunks=$chunks,
    minchunk=$minchunk,
    #if $idsmoothwindow:
        idsmoothwindow=$idsmoothwindow,
    #end if
    maxp=$maxp,
    minlen=$minlen,
    maxlen=$maxlen,
    skipgaps=$skipgaps,
    skipgaps2=$skipgaps2,
    #if $alignment.ucl == "local":
        ucl=true,
        #if $alignment.queryfract:
            queryfract=$alignment.queryfract,
        #end if
    #end if
    dereplicate=$dereplicate,
    chimealns=$chimealns,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
2>&1  ## uchime component writes output to stderr
    """ ;
            gal:description "Find putative chimeras using uchime" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1093/bioinformatics/btr381" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.uchime_ command reads a fasta file and reference file and outputs potentially chimeric sequences. The original uchime program was written by Robert C. Edgar and donated to the public domain, http://drive5.com/uchime

.. _chimera.uchime: https://www.mothur.org/wiki/Chimera.uchime

Version 1.23.0: Upgrades tool dependency to mothur 1.33 and adds support for count (mothur 1.28) and dereplicate (mothur 1.29) options.

    """ ;
            gal:id "mothur_chimera_uchime" ;
            gal:inputs [ gal:conditional [ gal:name "template" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "self" ;
                                            dc:description "Self" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "names" ;
                                            dc:description "Use a names file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "abskew" ;
                                            gal:help "Abundance skew is: min [ abund(parent1), abund(parent2) ] / abund(query). Default 1.9" ;
                                            gal:label "abskew - Abundance skew" ;
                                            gal:type "float" ;
                                            gal:value "1.9" ],
                                        [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:help "Generated by count.seqs. When you use a count file with group info and dereplicate=T, mothur will create a count table containing seqeunces after chimeras are removed." ;
                                            gal:label "count - a count_table" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "self" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "name - Sequence names" ;
                                            gal:type "data" ] ;
                                    gal:value "names" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignment" ;
                            gal:param [ gal:argument "ucl" ;
                                    gal:help "global-X is the default" ;
                                    gal:label "ucl - Use local-X alignments" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "global" ;
                                            dc:description "global" ],
                                        [ gal:value "local" ;
                                            dc:description "local" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "global" ],
                                [ gal:param [ gal:argument "queryfract" ;
                                            gal:help "Default 0.5" ;
                                            gal:label "queryfract - minimum fraction of the query sequence that must be covered by a local-X alignment" ;
                                            gal:max "1" ;
                                            gal:min "0" ;
                                            gal:type "float" ;
                                            gal:value "0.5" ] ;
                                    gal:value "local" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "chunks" ;
                            gal:help "number of chunks to extract from the query sequence when searching for parents.  Default 4." ;
                            gal:label "chunks - number of chunks" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "4" ],
                        [ gal:argument "minh" ;
                            gal:help "Values from 0.1 to 5 might be reasonable. Lower values increase sensitivity but may report more false positives." ;
                            gal:label "minh - mininum score to report chimera. Default 0.3" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.3" ],
                        [ gal:argument "maxp" ;
                            gal:help "increasing maxp gives only a very small improvement in sensivity but tends to increase the error rate quite a bit. Default 2" ;
                            gal:label "maxp - maximum number of candidate parents to consider" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "2" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "skipgaps" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "controls how gapped columns affect counting of diffs" ;
                            gal:label "skipgaps - columns containing gaps do not count as diffs" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "mindiv" ;
                            gal:help "to ignore very close chimeras, increase mindiv to 1.0 or 2.0, to increase sensitivity decrease minh to 0.1. Default 0.5" ;
                            gal:label "mindiv - minimum divergence ratio" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "0.5" ],
                        [ gal:argument "xa" ;
                            gal:help "Reasonable values might range from 0.1 to 2.0. Default 1.0" ;
                            gal:label "xa - eight of an abstain vote" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.0" ],
                        [ gal:argument "dn" ;
                            gal:help "Reasonable values are probably in the range from 0.2 to 2.0. Default 1.4" ;
                            gal:label "dn - pseudo-count prior on number of no votes" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "1.4" ],
                        [ gal:argument "chimealns" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "Alignments show columns with differences that support or contradict a chimeric model." ;
                            gal:label "chimealns - Produce a file containing multiple alignments of query sequences to parents in human readable format" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "skipgaps2" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "controls how gapped columns affect counting of diffs" ;
                            gal:label "skipgaps2 - column is immediately adjacent to a column containing a gap, it is not counted as a diff" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "minchunk" ;
                            gal:help "Default 64" ;
                            gal:label "minchunk - minimum length of a chunk" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "64" ],
                        [ gal:argument "idsmoothwindow" ;
                            gal:help "Default 32" ;
                            gal:label "idsmoothwindow - the length of id smoothing window" ;
                            gal:min "0" ;
                            gal:optional "True" ;
                            gal:type "integer" ;
                            gal:value "32" ],
                        [ gal:argument "maxlen" ;
                            gal:help "Applies to both query and reference sequences. Default 10000" ;
                            gal:label "maxlen - maximum unaligned sequence length" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10000" ],
                        [ gal:argument "minlen" ;
                            gal:help "Applies to both query and reference sequences. Default 10" ;
                            gal:label "minlen - minimum unaligned sequence length" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "dereplicate" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups?" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "xn" ;
                            gal:help "Decreasing this weight to around 3 or 4 may give better performance on denoised data" ;
                            gal:label "xn - weight of a no vote. Default 8.0" ;
                            gal:min "0" ;
                            gal:type "float" ;
                            gal:value "8.0" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.uchime" ;
            gal:outputs [ gal:data [ gal:filter "chimealns" ;
                            gal:format "txt" ;
                            gal:from_work_dir "fasta.*uchime.alns" ;
                            gal:label "${tool.name} on ${on_string}: uchime.alns" ;
                            gal:name "out_alns" ;
                            dc:description """
            """ ],
                        [ gal:filter "template['source'] == 'self' and template['count']" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "template.*uchime.pick.count_table" ;
                            gal:label "${tool.name} on ${on_string}: uchime.count_table" ;
                            gal:name "out_count" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*uchime.accnos" ;
                            gal:label "${tool.name} on ${on_string}: uchime.accnos" ;
                            gal:name "out_accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*uchime.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: uchime.chimeras" ;
                            gal:name "uchime.chimeras" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " default params test " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ref.uchime.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "uchime.chimeras" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ref.uchime.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head_withchimera" ] ],
                        [ gal: " de novo test " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                    gal:name "out_accnos" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.denovo.uchime.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "uchime.chimeras" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "source" ;
                                    gal:value "self" ] ],
                        [ gal: " with chimealns output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ref.uchime.alns" ;
                                    gal:ftype "txt" ;
                                    gal:name "out_alns" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ref.uchime.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "uchime.chimeras" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ref.uchime.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head_withchimera" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "chimealns" ;
                                    gal:value "true" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.uchime" ;
            schema:sku 58 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

ln -s '$biom' input.biom &&

echo 'biom.info(
    biom=input.biom,
    #if str($label) != '':
        label=$label,
    #end if
    basis=$basis,
    output=$output,
    relabund=$relabund,
    printlevel=$printlevel
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "create shared and taxonomy files from biom" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The biom.info command reads a biom file creates a shared file. If your biom file contains metadata mothur will also
create taxonomy or constaxonomy along with tax.summary files.

    """ ;
            gal:id "mothur_biom_info" ;
            gal:inputs [ gal: " TODO: read label options from biom file " ;
                    gal:expand [ gal:macro "param-output" ],
                        [ gal:macro "param-printlevel" ],
                        [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "basis" ;
                            gal:help "indicate what you want the summary file to represent, options are otu and sequence. Default is otu.             For example consider the following basis=sequence could give Clostridiales 3 105, where 105 is the total             number of sequences whose otu classified to Clostridiales. Now for basis=otu could give Clostridiales 3 7,             where 7 is the number of otus that classified to Clostridiales. " ;
                            gal:label "Summary type" ;
                            gal:option [ gal:value "sequence" ;
                                    dc:description "Sequence" ],
                                [ gal:selected "true" ;
                                    gal:value "otu" ;
                                    dc:description "OTU" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "label" ;
                            gal:help "Enter a distance label to be used in the shared file created from your biom file (e.g. 0.03)" ;
                            gal:label "label - OTU Labels" ;
                            gal:type "text" ;
                            gal:value "userLabel" ],
                        [ gal:argument "biom" ;
                            gal:format "biom1" ;
                            gal:label "Biom input dataset" ;
                            gal:type "data" ],
                        [ gal:argument "relabund" ;
                            gal:falsevalue "F" ;
                            gal:help "use relative abundances rather than raw abundances for the tax.summary file" ;
                            gal:label "Relative abundance values" ;
                            gal:truevalue "T" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Biom.info" ;
            gal:outputs [ gal:data [ gal:format "mothur.shared" ;
                            gal:from_work_dir "input*.shared" ;
                            gal:label "${tool.name} on ${on_string}: shared" ;
                            gal:name "shared" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:from_work_dir "input*.cons.taxonomy" ;
                            gal:label "${tool.name} on ${on_string}: cons.taxonomy" ;
                            gal:name "taxonomy" ],
                        [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "input*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            gal:name "tax.summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with biom without metadata " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.shared" ;
                                    gal:name "shared" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "biom" ;
                                    gal:value "samplebiom.biom1" ] ],
                        [ gal: " test with some more parameters " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                            gal:has_text [ gal:text "GG_OTU_1" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.shared" ;
                                    gal:name "shared" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Euryarchaeota" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "tax.summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "biom" ;
                                    gal:value "example.biom" ],
                                [ gal:name "output" ;
                                    gal:value "detail" ],
                                [ gal:name "label" ;
                                    gal:value "0.03" ],
                                [ gal:name "printlevel" ;
                                    gal:value "4" ],
                                [ gal:name "basis" ;
                                    gal:value "sequence" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with biom file with metadata " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.shared" ;
                                    gal:name "shared" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-taxonomy-format" ] ;
                                            gal:has_text [ gal:text "GG_OTU_1" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "tax.summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "biom" ;
                                    gal:value "example.biom" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "biom.info" ;
            schema:sku 108 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.coremicrobiome(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $abundance:
        ,abundance=$abundance
    #end if
    #if $samples:
        ,samples=$samples
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "fraction of OTUs for samples or abundances" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.coremicrobiome_ command determines the fraction of OTUs that are found in varying numbers of samples for different minimum relative abundances.

.. _get.coremicrobiome: https://www.mothur.org/wiki/Get.coremicrobiome

v1.27.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_coremicrobiome" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "abundance - list OTU names at this abundance" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "abundance" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared or relabund - OTU Shared or Relabund" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "samples - minimum number of samples requied to list OTU names" ;
                            gal:min "1" ;
                            gal:name "samples" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:label "output - fraction or count" ;
                            gal:name "output" ;
                            gal:option [ gal:value "count" ;
                                    dc:description "count" ],
                                [ gal:selected "true" ;
                                    gal:value "fraction" ;
                                    dc:description "fraction" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.coremicrobiome" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.core\\.microbiome$" ] ;
                            gal:label "${tool.name} on ${on_string}: core.microbiome files" ;
                            gal:name "core_microbiome" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.core\\.microbiomelist" ] ;
                            gal:filter "abundance or samples " ;
                            gal:label "${tool.name} on ${on_string}: core.microbiome list files" ;
                            gal:name "core_microbiome_list" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with list output and label and group select" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "72bb437ab5f3a66965029a616fbaf317" ;
                                            gal:name "0.05" ] ;
                                    gal:name "core_microbiome" ;
                                    dc:description """
                """ ],
                                [ gal:count "3" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "83722b4c52b7faff7fe56ce026250001" ;
                                            gal:name "0.05" ] ;
                                    gal:name "core_microbiome_list" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.45" ],
                                [ gal:name "group" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "abundance" ;
                                    gal:value "30" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with default params " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "bae9cb5f1d311fe0cfb7ecb72a177261" ;
                                            gal:name "0.45" ] ;
                                    gal:name "core_microbiome" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.coremicrobiome" ;
            schema:sku 48 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.infile' input.infile.dat &&

echo 'get.mimarkspackage(
    #if $input.filetype == "group":
        group=input.infile.dat,
    #elif $input.filetype == "oligos":
        oligos=input.infile.dat,
    #end if
    package=$package,
    requiredonly=$requiredonly
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "creates a mimarks package form with your groups" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.mimarkspackage_ command creates a mimarks package form with your groups.

.. _get.mimarkspackage: https://www.mothur.org/wiki/Get.mimarkspackage

    """ ;
            gal:id "mothur_get_mimarkspackage" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "input type" ;
                                    gal:name "filetype" ;
                                    gal:option [ gal:value "group" ;
                                            dc:description "group file" ],
                                        [ gal:selected "true" ;
                                            gal:value "oligos" ;
                                            dc:description "oligos file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.oligos" ;
                                            gal:label "oligos" ;
                                            gal:name "infile" ;
                                            gal:type "data" ] ;
                                    gal:value "oligos" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group file" ;
                                            gal:name "infile" ;
                                            gal:type "data" ] ;
                                    gal:value "group" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "package - select the mimarks package you would like to use" ;
                            gal:name "package" ;
                            gal:option [ gal:value "human_associated" ;
                                    dc:description "human_associated" ],
                                [ gal:value "human_vaginal" ;
                                    dc:description "human_vaginal" ],
                                [ gal:value "human_gut" ;
                                    dc:description "human_gut" ],
                                [ gal:value "waterc" ;
                                    dc:description "waterc" ],
                                [ gal:value "human_oral" ;
                                    dc:description "human_oral" ],
                                [ gal:value "wastewater" ;
                                    dc:description "wastewater" ],
                                [ gal:value "soil" ;
                                    dc:description "soil" ],
                                [ gal:value "sediment" ;
                                    dc:description "sediment" ],
                                [ gal:selected "true" ;
                                    gal:value "miscellaneous" ;
                                    dc:description "miscellaneous" ],
                                [ gal:value "human_skin" ;
                                    dc:description "human_skin" ],
                                [ gal:value "air" ;
                                    dc:description "air" ],
                                [ gal:value "plant_associated" ;
                                    dc:description "plant_associated" ],
                                [ gal:value "host_associated" ;
                                    dc:description "host_associated" ],
                                [ gal:value "microbial" ;
                                    dc:description "microbial" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "requiredonly - used to indicate you only want the required mimarks fields printed. Default=false" ;
                            gal:name "requiredonly" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.mimarkspackage" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "input.infile*.tsv" ;
                            gal:label "${tool.name} on ${on_string}: mimarks package" ;
                            gal:name "package_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with oligos " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "975cd41eb9a97725795c582dc7e903a3" ;
                                    gal:name "package_out" ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "oligos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "requiredonly" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "infile" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:name "package" ;
                                    gal:value "human_associated" ] ],
                        [ gal: " test with group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "8e97dbe732b257494b796d23a3688d5a" ;
                                    gal:name "package_out" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "infile" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "filetype" ;
                                    gal:value "group" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.mimarkspackage" ;
            schema:sku 101 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#if $groupnames.source == "other":
    ln -s '$groupnames.group_in' groupnames_group_in.dat &&
    ln -s '$groupnames.fasta_in' groupnames_fasta_in.dat &&
    ln -s '$groupnames.name_in' groupnames_name_in.dat &&
    ln -s '$groupnames.list_in' groupnames_list_in.dat &&
    ln -s '$groupnames.taxonomy_in' groupnames_taxonomy_in.dat &&
    ln -s '$groupnames.column_in' groupnames_column_in.dat &&
    ln -s '$groupnames.phylip_in' groupnames_phylip_in.dat &&
#else
    ln -s '$groupnames.shared_in' groupnames_shared_in.dat &&
#end if

echo 'remove.groups(
    #if $groupnames.source == "other":
        #if $group_in.is_of_type("mothur.groups"):
            group=groupnames_group_in.dat
        #else
            count=groupnames_group_in.dat
        #end if
        #if $groupnames.fasta_in:
            ,fasta=groupnames_fasta_in.dat
        #end if
        #if $groupnames.name_in:
            ,name=groupnames_name_in.dat
        #end if
        #if $groupnames.list_in:
            ,list=groupnames_list_in.dat
        #end if
        #if $groupnames.taxonomy_in:
            ,taxonomy=groupnames_taxonomy_in.dat
        #end if
        #if $column_in:
            ,column=groupnames_column_in.dat
        #end if
        #if $phylip_in:
            ,phylip=groupnames_phylip_in.dat
        #end if
    #else
        shared=groupnames_shared_in.dat
    #end if
    ,groups=${ str($groupnames.groups).replace(",","-") }
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Remove groups from groups,fasta,names,list,taxonomy" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.groups_ command removes sequences from a specific group or set of groups from the following file types: fasta, name_, group_, list_, taxonomy_.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _remove.groups: https://www.mothur.org/wiki/Remove.groups

    """ ;
            gal:id "mothur_remove_groups" ;
            gal:inputs [ gal:conditional [ gal:name "groupnames" ;
                            gal:param [ gal:label "Select Input Type" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "shared file" ],
                                        [ gal:value "other" ;
                                            dc:description "fasta, name, taxonomy, distance matrix or list with a group file or count table" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "groups - Pick groups to remove" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "false" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "shared_in" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:name "shared_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.align,fasta" ;
                                            gal:label "fasta - Fasta Sequences" ;
                                            gal:name "fasta_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.lower.dist,mothur.square.dist" ;
                                            gal:help "must be a phylip-formatted distance matrix" ;
                                            gal:label "phylip - Distance Matrix you would like to select distances from" ;
                                            gal:name "phylip_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:name "name_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.groups,mothur.count_table" ;
                                            gal:label "group or count table - Groups" ;
                                            gal:name "group_in" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Pick groups to remove" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "false" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group_in" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:name "taxonomy_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:help "must be a column-formatted distance matrix" ;
                                            gal:label "column - Distance Matrix you would like to select distances from" ;
                                            gal:name "column_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "list_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "other" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.groups" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "groupnames['source'] == 'other' and groupnames['list_in']" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.pick\\.dat" ] ;
                            gal:filter "groupnames['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: pick.shared" ;
                            gal:name "shared_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "groupnames['source'] == 'other' and groupnames['group_in'].ext == 'mothur.count_table'" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "groupnames_group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['name_in']" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "groupnames_name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['column_in']" ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "groupnames_column_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.column" ;
                            gal:name "column_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['taxonomy_in']" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "groupnames_taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['group_in'].ext == 'mothur.groups'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "groupnames_group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['source'] == 'other' and groupnames['fasta_in']" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "groupnames_fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groupnames['phylip_in']" ;
                            gal:format_source "phylip_in" ;
                            gal:from_work_dir "groupnames_phylip_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.phylip" ;
                            gal:name "phylip_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "c5043237225f0292ce1bfbd2766b96ea" ;
                                            gal:name "0.26" ] ;
                                    gal:name "shared_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "groups" ;
                                    gal:value "pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "shared_in" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with distance matrices " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-column-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "column_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-dist-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.square.dist" ;
                                    gal:name "phylip_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "other" ],
                                [ gal:name "groups" ;
                                    gal:value "pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "phylip_in" ;
                                    gal:value "amazon.dist" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "column_in" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ] ],
                        [ gal: " test with group file and fasta/names/list/taxonomy files " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "f0e662d1d82e96b4977864925493dbf5" ;
                                    gal:name "fasta_out" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "55dbcadbb414d95bae8a282a93c10e63" ;
                                    gal:name "name_out" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:md5 "8fcaadcb5ad40873e270ad7e2cebe7fa" ;
                                    gal:name "taxonomy_out" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "6d689ead98f3eb1af41f1a78386d0b50" ;
                                    gal:name "group_out" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "3a92ef76cfdca6618b4016f14cbac5b8" ;
                                            gal:name "0.26" ] ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_in" ;
                                    gal:value "amazon.wang.wang.taxonomy" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "source" ;
                                    gal:value "other" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "pasture" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "list_in" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "amazon.names" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.groups" ;
            schema:sku 57 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
#if $grouping.use == "yes":
    ln -s '$grouping.group' grouping.group.dat &&
#end if

echo 'phylo.diversity(
    tree=tree.dat,
    #if $grouping.use == "yes":
        group=grouping.group.dat,
        #if $grouping.groups:
            groups=${ str($grouping.groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    freq=$freq,
    scale=$scale,
    collect=$collect,
    rarefy=$rarefy,
    summary=$summary,
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Alpha Diversity calculates unique branch length" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1098/rstb.1994.0085" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The phylo.diversity_ command calculates alpha diversity as the total of the unique branch length.

.. _phylo.diversity: https://www.mothur.org/wiki/Phylo.diversity

v.1.21.0: Updated to Mothur 1.33, added count parameter

    """ ;
            gal:id "mothur_phylo_diversity" ;
            gal:inputs [ gal:conditional [ gal:name "grouping" ;
                            gal:param [ gal:label "Analyze by group using a Group file" ;
                                    gal:name "use" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Group file for the tree" ;
                                            gal:name "group" ;
                                            gal:type "data" ],
                                        [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Groups to display" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "scale - Scale output to the number of sequences sampled" ;
                            gal:name "scale" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference file for the tree" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "collect - Create a collectors curve" ;
                            gal:name "collect" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "rarefy - Calculate the rarefaction data" ;
                            gal:name "rarefy" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "summary - Generate a summary file" ;
                            gal:name "summary" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Phylogenetic Tree" ;
                            gal:name "tree" ;
                            gal:type "data" ],
                        [ gal:help "if between 0 and 100, the percentage of sequences to sample, if greater than one - report every n iterations" ;
                            gal:label "freq - Reporting frequency" ;
                            gal:min "0.0" ;
                            gal:name "freq" ;
                            gal:type "float" ;
                            gal:value "100" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Phylo.diversity" ;
            gal:outputs [ gal:data [ gal:filter "collect" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv" ;
                            gal:label "${tool.name} on ${on_string}: collectors" ;
                            gal:name "collectors_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "summary" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "rarefy" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.phylodiv.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: rarefaction" ;
                            gal:name "rarefaction_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with tree file only " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "a9feb4031094b555baf62e0165dd3637" ;
                                    gal:name "summary_out" ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "no" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "treetest.tre" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with tree file and group file and all outputs " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "green" ],
                                                [ gal:text "orange" ],
                                                [ gal:text "numSampled" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "rarefaction_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "orange" ],
                                                [ gal:text "green" ],
                                                [ gal:text "numSampled" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "collectors_out" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "27375ea164ad39fb56b9606023cae504" ;
                                    gal:name "summary_out" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "treetest.groups" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "treetest.tre" ],
                                [ gal:name "collect" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "orange,green" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "rarefy" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "phylo.diversity" ;
            schema:sku 96 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $designc.usedesign == "yes":
    ln -s '$designc.design' designc.design.dat &&
#end if

echo 'rarefaction.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $designc.usedesign == "yes":
        design=designc.design.dat,
        #if $designc.sets:
            sets=${ str($designc.sets).replace(",","-") },
        #end if
    #end if
    #if $subsample.usess == "yes":
        #if $subsample.subsamplesize:
            subsample=$subsample.subsamplesize,
        #else
            subsample=T,
        #end if
        #if $subsample.subsampleiters:
            subsampleiters=$subsample.subsampleiters,
        #end if
    #end if
    calc=${ str($calc).replace(",","-") },
    iters=$iters
    $jumble
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate inter-sample rarefaction curves for OTUs" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "bibtex" ;
                            dc:description """
@book{magurran2013measuring,
  title={Measuring biological diversity},
  author={Magurran, Anne E},
  year={2013},
  publisher={John Wiley \\& Sons}
}
        """ ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The rarefaction.shared_ command generates inter-sample rarefaction curves using a re-sampling without replacement approach. The traditional way that ecologists use rarefaction is not to randomize the sampling order within a sample, rather between samples. For instance, if we wanted to know the number of OTUs in the human colon, we might sample from various sites within the colon, and sequence a bunch of 16S rRNA genes. By determining the number of OTUs in each sample and comparing the composition of those samples it is possible to determine how well you have sampled the biodiversity within the individual.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _rarefaction.shared: https://www.mothur.org/wiki/Rarefaction.shared

    """ ;
            gal:id "mothur_rarefaction_shared" ;
            gal:inputs [ gal:conditional [ gal:name "designc" ;
                            gal:param [ gal:label "run on a per set basis using a design file?" ;
                                    gal:name "usedesign" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "sets - group sets to analyze" ;
                                            gal:multiple "true" ;
                                            gal:name "sets" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "design" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.design" ;
                                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character) use make.design" ;
                                            gal:label "design - assigns groups to sets" ;
                                            gal:name "design" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ],
                        [ gal:name "subsample" ;
                            gal:param [ gal:label "produce subsample rarefactions?" ;
                                    gal:name "usess" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:help "Leave blank to use the size of your smallest group" ;
                                            gal:label "subsample - size pergroup of the sample" ;
                                            gal:name "subsamplesize" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ],
                                        [ gal:label "subsampleiters - Number of times to run the subsample" ;
                                            gal:name "subsampleiters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "" ;
                            gal:help "Obviously, the goal of rarefaction is to randomize across the samples; however, if you just want a             collector's curve across the samples you can use the jumble option" ;
                            gal:label "jumble?" ;
                            gal:name "jumble" ;
                            gal:truevalue ",jumble=true" ;
                            gal:type "boolean" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of randomizations" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:label "calc - Calculators " ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "sharedobserved" ;
                                    dc:description "sharedobserved - the number of sequences in two samples" ],
                                [ gal:value "sharednseqs" ;
                                    dc:description "sharednseqs - the number of sequences in two samples" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "All groups will be analyzed by default if none are selected" ;
                            gal:label "groups - Groups to analyze" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Rarefaction.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.rarefaction" ] ;
                            gal:filter "subsample['usess'] == 'yes' and 'sharedobserved' in calc" ;
                            gal:label "${tool.name} on ${on_string}: shared.rarefaction" ;
                            gal:name "rarefaction_subsample_sharedobserved" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.r_nseqs" ] ;
                            gal:filter "subsample['usess'] == 'yes' and 'sharednseqs' in calc" ;
                            gal:label "${tool.name} on ${on_string}: shared.r_nseqs" ;
                            gal:name "rarefaction_subsample_sharednseqs" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "designc['usedesign'] == 'no' and 'sharedobserved' in calc" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.shared.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: shared.rarefaction" ;
                            gal:name "rarefaction" ;
                            dc:description """
            """ ],
                        [ gal:filter "designc['usedesign'] == 'yes'" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.groups.rarefaction" ;
                            gal:label "${tool.name} on ${on_string}: groups.rarefaction" ;
                            gal:name "group_rarefaction" ;
                            dc:description """
            """ ],
                        [ gal:filter "designc['usedesign'] == 'no' and 'sharednseqs' in calc" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "otu.shared.r_nseqs" ;
                            gal:label "${tool.name} on ${on_string}: shared.r_nseqs" ;
                            gal:name "rarefaction2" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: """ segfaults when subsampling on some files, known bug, devs promise to fix in next release
        <test><!- - test with subsampling - ->
            <param name="otu" value="esophagus.fn.shared" ftype="mothur.shared"/>
            <param name="usess" value="yes"/>
            <param name="subsampleiters" value="42"/>
            <param name="calc" value="sharedobserved,sharednseqs"/>
            <output name="rarefaction">
                <assert_contents>
                    <has_text text="numsampled"/>
                    <has_text text="lci"/>
                    <has_text text="hci"/>
                    <has_text text="unique"/>
                    <has_text text="0.22"/>
                    <has_text text="0.33"/>
                    <has_text text="0.55"/>
                </assert_contents>
            </output>
            <output_collection name="rarefaction_subsample_sharedobserved" count="36">
                <element name="ave-std.0.14" ftype="tabular">
                    <assert_contents>
                        <has_text text="numsampled"/>
                        <has_text text="lci"/>
                        <has_text text="hci"/>
                        <has_text text="ave"/>
                        <has_text text="std"/>
                        <has_text text="0.14"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output_collection name="rarefaction_subsample_sharednseqs" count="36">
                <element name="ave-std.0.14" ftype="tabular">
                    <assert_contents>
                        <has_text text="numsampled"/>
                        <has_text text="lci"/>
                        <has_text text="hci"/>
                        <has_text text="ave"/>
                        <has_text text="std"/>
                        <has_text text="0.14"/>
                    </assert_contents>
                </element>
            </output_collection>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>""" ;
                    gal:test [ gal: " test with design file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "unique" ],
                                                [ gal:text "hci" ],
                                                [ gal:text "0.22" ],
                                                [ gal:text "0.33" ],
                                                [ gal:text "lci" ],
                                                [ gal:text "0.55" ],
                                                [ gal:text "numsampled" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "group_rarefaction" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "sets" ;
                                    gal:value "tardis,dalek" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "usedesign" ;
                                    gal:value "yes" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with label, group and calc select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "hci" ],
                                                [ gal:text "lci" ],
                                                [ gal:text "0.22" ],
                                                [ gal:text "0.55" ],
                                                [ gal:text "numsampled" ] ;
                                            gal:not_has_text [ gal:text "unique" ],
                                                [ gal:text "0.33" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "rarefaction2" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "0.55" ],
                                                [ gal:text "numsampled" ],
                                                [ gal:text "lci" ],
                                                [ gal:text "0.22" ],
                                                [ gal:text "hci" ] ;
                                            gal:not_has_text [ gal:text "0.33" ],
                                                [ gal:text "unique" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "rarefaction" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "label" ;
                                    gal:value "0.22,0.55" ],
                                [ gal:name "calc" ;
                                    gal:value "sharedobserved,sharednseqs" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with default values " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "0.22" ],
                                                [ gal:text "0.55" ],
                                                [ gal:text "0.33" ],
                                                [ gal:text "unique" ],
                                                [ gal:text "numsampled" ],
                                                [ gal:text "hci" ],
                                                [ gal:text "lci" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "rarefaction" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "rarefaction.shared" ;
            schema:sku 83 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$design' design.dat &&
ln -s '$constaxonomy' constaxonomy.dat &&

echo 'make.lefse(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #else
        shared=otu.dat,
    #end if
    #if $design:
        design=design.dat,
    #end if
    #if $constaxonomy:
        constaxonomy=constaxonomy.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    scale=$scale
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "create a lefse formatted input file from mothur's output files" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.lefse_ allows you to create a lefse formatted input file from mothur's output files.

.. _make.lefse: https://www.mothur.org/wiki/Make.lefse

    """ ;
            gal:id "mothur_make_lefse" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "" ;
                            gal:label "scale - select what scale you would like to use to convert your shared file abundances to relative abundances" ;
                            gal:multiple "false" ;
                            gal:name "scale" ;
                            gal:option [ gal:value "averagegroup" ;
                                    dc:description "averagegroup" ],
                                [ gal:selected "true" ;
                                    gal:value "totalgroup" ;
                                    dc:description "totalgroup" ],
                                [ gal:value "averageotu" ;
                                    dc:description "averageotu" ],
                                [ gal:value "totalotu" ;
                                    dc:description "totalotu" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared or relabund - provide a shared or relabund file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:format "mothur.cons.taxonomy" ;
                            gal:label "constaxonomy - provide a constaxonomy file" ;
                            gal:name "constaxonomy" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "If none selected, the first label in your file will be used" ;
                            gal:label "label - OTU Labels" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular" ;
                            gal:label "design - provide your design file" ;
                            gal:name "design" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.lefse" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.lefse" ;
                            gal:label "${tool.name} on ${on_string}: lefse" ;
                            gal:name "lefse_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with relabund file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "c1e88702c6db198080c09f3b9c404c63" ;
                                    gal:name "lefse_out" ] ;
                            gal:param [ gal:ftype "tabular" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "label" ;
                                    gal:value "0.18" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.relabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.relabund" ] ],
                        [ gal: " test with shared file and defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "295633107cd983be73389e8b92164686" ;
                                    gal:name "lefse_out" ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.lefse" ;
            schema:sku 40 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@
#import re

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#for $i in $inputs:
    ln -s '$i.fasta' fasta${inputs.index($i)}.dat &&
#end for
ln -s '$hard' hard.dat &&

echo 'filter.seqs(
    fasta=fasta.dat#for $i in $inputs#-fasta${inputs.index($i)}.dat#end for#,
    vertical=$vertical,
    #if $trump:
        trump=$trump,
    #end if
    soft=$soft,
    #if $hard:
        hard=hard.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## rename collection files for more transparent element naming
#set $identifier=re.sub('[^\\w\\-\\s\\.]', '_', str($fasta.element_identifier))
mv fasta.filter.fasta '${identifier}.filter.fasta'
#for i in $inputs:
    #set $identifier=re.sub('[^\\w\\-\\s]', '_', str($i.fasta.element_identifier))
    && mv fasta${inputs.index($i)}.filter.fasta '${identifier}.filter.fasta'
#end for
    """ ;
            gal:description "removes columns from alignments" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The filter.seqs_ command removes columns from alignments based on a criteria defined by the user. For example, alignments
generated against reference alignments (e.g. from RDP, SILVA, or greengenes) often have columns where every character is
either a '.' or a '-'. These columns are not included in calculating distances because they have no information in them.
By removing these columns, the calculation of a large number of distances is accelerated. Also, people also like to mask
their sequences to remove variable regions using a soft or hard mask (e.g. Lane's mask). This type of masking is only
encouraged for deep-level phylogenetic analysis, not fine level analysis such as that needed with calculating OTUs.

.. _filter.seqs: https://www.mothur.org/wiki/Filter.seqs

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_filter_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.align" ;
                            gal:label "fasta - Alignment Fasta" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:help "Removes any column where the dominant base (i.e. A, T, G, C, or U) does not occur in at least a designated percentage of sequences" ;
                            gal:label "soft - percentage required to retain column. (0-100)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "soft" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:help "Remove a column if the trump character is found at that position in any sequence of the alignment" ;
                            gal:label "trump - Trump character" ;
                            gal:name "trump" ;
                            gal:option [ gal:value "N" ;
                                    dc:description "N" ],
                                [ gal:value "-" ;
                                    dc:description "-" ],
                                [ gal:value "" ;
                                    dc:description "Off" ],
                                [ gal:value "." ;
                                    dc:description "." ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "Ignore any column that only contains gap characters (i.e. '-' or '.')" ;
                            gal:label "vertical - Vertical column" ;
                            gal:name "vertical" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.filter" ;
                            gal:help "A file should only contain one line consisting of 0's and 1's" ;
                            gal:label "hard - Hard Column Filter" ;
                            gal:name "hard" ;
                            gal:optional "True" ;
                            gal:type "data" ] ;
                    gal:repeat [ gal:name "inputs" ;
                            gal:param [ gal:format "mothur.align" ;
                                    gal:label "fasta - Alignment Fasta" ;
                                    gal:name "fasta" ;
                                    gal:type "data" ] ;
                            gal:title "Additional Alignment File" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Filter.seqs" ;
            gal:outputs [ gal:collection [ gal: " only output collection if multiple outputs" ;
                            gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern "(?P<designation>.*)\\.filter\\.fasta" ] ;
                            gal:filter "inputs" ;
                            gal:label "${tool.name} on ${on_string}: filtered fastas" ;
                            gal:name "filteredfastas" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "not inputs" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "*.filter.fasta" ;
                            gal:label "${tool.name} on ${on_string}: filtered fasta" ;
                            gal:name "filteredfasta" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.filter" ;
                            gal:from_work_dir "fasta*.filter" ;
                            gal:label "${tool.name} on ${on_string}: filter" ;
                            gal:name "out_filter" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with multiple inputs and collection output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "3e6c2cfef46baf35d2a8b5cafe53e3a4" ;
                                    gal:name "out_filter" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "ef4c6c2d9a882f7a22e5fa3c814af7cc" ;
                                            gal:name "HMP_MOCK.v35.align" ] ;
                                    gal:name "filteredfastas" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            gal:repeat [ gal:name "inputs" ;
                                    gal:param [ gal:ftype "mothur.align" ;
                                            gal:name "fasta" ;
                                            gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                                    dc:description """
                """ ] ],
                        [ gal: " test with single input and non-collection output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "3e6c2cfef46baf35d2a8b5cafe53e3a4" ;
                                    gal:name "out_filter" ],
                                [ gal:md5 "ef4c6c2d9a882f7a22e5fa3c814af7cc" ;
                                    gal:name "filteredfasta" ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "filter.seqs" ;
            schema:sku 119 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$count' count.dat &&

echo 'get.sabund(
    #if $label:
       label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat
    #elif $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get sabund from a otu list or rabund" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The get.sabund_ command generates an sabund_ file from a list_ or rabund_ file.

.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _list: https://www.mothur.org/wiki/List_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _get.sabund: https://www.mothur.org/wiki/Get.sabund

    """ ;
            gal:id "mothur_get_sabund" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "If your list file contains only the unique sequence names because you ran cluster with a count file, be sure to include the count file." ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list,mothur.rabund" ;
                            gal:label "list,rabund - List or Rabund" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "(all used if none are selected)" ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.sabund" ;
            gal:outputs [ gal:data [ gal:format "mothur.sabund" ;
                            gal:from_work_dir "otu*.sabund" ;
                            gal:label "${tool.name} on ${on_string}: sabund (Species Abundance)" ;
                            gal:name "sabund" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test rabund input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.sabund2" ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ] ;
                            gal:param [ gal:ftype "mothur.rabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.rabund" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test otu list input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.sabund3" ;
                                    gal:ftype "mothur.sabund" ;
                                    gal:name "sabund" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.sabund" ;
            schema:sku 93 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'cooccurrence(
    shared=otu.dat,
    metric=$metric,
    matrixmodel=$matrixmodel,
    iters=$iters
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "tests whether presence-absence patterns differ from chance" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1890/0012-9658(2000)081[2606:NMAOSC]2.0.CO;2" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The cooccurrence_ command variance calculates four metrics and tests their significance to assess whether presence-absence patterns are different than what one would expect by chance.   The input is a shared_ file.  The output can be filtered by groups and labels.



**metric**

The metric parameter options are **cscore**, **checker**, **combo** and **vratio**. Default=cscore. The cscore or checkerboard score [1] is a metric that measures species segregation. It is the mean number of checkerboard units per species pair. The checker metric [2] counts the number of species pairs forming a perfect checkerboard. The combo metric [3] is the number of unique species pairs. The vratio or variance ratio [4] is a measure of the species association calculated by the ratio of the variance in total species number to the sum of the variances of the species.  ::

	[1] Stone, L., and A. Roberts. 1990. The checkerboard score and species distributions. Ocelogia. 85:74-79.
	[2] Diamond, J. M. 1975. Assembly of species communities. Pages 342-444 in M. L. Cody and J. M. Diamond, editors. Ecology and evolution of communities. Harvard University Press, Cambridge, Massachusetts, USA.
	[3] Pielou, D. P., and E. C. Pielou. 1968 Association among species of infrequent occurrence: the insect and spider fauna of Polypours betulinus (Bulliard) Fries. Journal of Theoretical Biology 21:202-216.
	[4] Schluter, D. 1984. A variance test for detecting species associations, with some example applications. Ecology 65:998-1005.
	[5] Gotelli, Nicholas J. 2000. NULL MODEL ANALYSIS OF SPECIES CO-OCCURRENCE PATTERNS. Ecology 81:2606-2621.



**matrixmodel**

The matrixmodel parameter allows you to select the model you would like to use. Options are sim1, sim2, sim3, sim4, sim5, sim6, sim7, sim8 and sim9. Default=sim2.

Each sim implements a different algorithm for generating null matrices with constraints on the rows (species) and columns (sites).::
 ===================== ====================== ======================= ======================
  Rows                  Columns equiprobable   Columns proportional    Column totals fixed
 ===================== ====================== ======================= ======================
  Rows equiprobable     sim1                   sim6                    sim3
  Rows proportional     sim7                   sim8                    sim5
  Row totals fixed      sim2                   sim4                    sim9
 ===================== ====================== ======================= ======================

Equiprobable rows or columns means that each row, column or both is not dependent on the original co-occurrence matrix. Each species or site has an equal change of occurring in the null matrix.
Proportional rows or columns means that the proportion of occurrences in rows, columns or both in the original co-occurrence matrix are preserved but the totals may differ. Each species or site's chances of occurring are proportional to their occurrence in the original co-occurrence matrix.
Fixed row or column totals preserves the total number of occurrences in rows, columns or both in the original co-occurrence matrix. Sim9 is a special case that is not probabilistic. Since both the row and column totals are preserved the only way to randomize the matrix is with a checkerboard swap. When a checkerboard appears in the matrix the 1s and 0s are swapped to their mirror image to preserve the species and site totals.

Checkerboard::

  10
  01

Swap::

  01
  10


suggested metric/matrixmodel combinations::
    ========  ========  ======== ========
     cscore    checker   combo    vratio
    ========  ========  ======== ========
     sim9      sim9      sim9     sim2
     sim2      sim2      sim2     sim4
     -         -         sim4     sim8
     -         -         sim8     -
    ========  ========  ======== ========


Careful readers will note that none of the suggested matrixmodels have equiprobable rows (species). This is because tests of co-occurrence are quite sensitive to the frequency of species occurrence. As such, rowtotals should be maintained or at least kept proportional in the null models. Sim9 is well suited to co-occurrence matrices that have an "island list" structure. Island lists are often found in classical ecology datasets that contain species with well defined habitat patches and are rarely degenerate (matrices that contain empty rows or columns). Sim2 is well suited for co-occurrence matrices that have a "sample list" structure. Sample list structured data are found where species have relatively homogeneous habitats and degenerate matrices are not uncommon. In these matrices species will often occur in only one site.
The default values of cscore and sim2 have been selected because the c-score is not very sensitive to noise in the data and when used with sim9 or sim2 is not particularly prone to false positives. Sim2 has been chosen because of the prevalence of degenerate matrices. These are just guidelines, however, be sure to select a metric and matrix model that is best suited to the type of data you are analyzing.
It should be noted that sim9 cannot be used with vratio because in sim9 both the column and row totals are maintained, hence there will be no variance.
Please see [5] for more details on metric/null model selection.


.. _shared: https://www.mothur.org/wiki/Shared_file
.. _cooccurrence: https://www.mothur.org/wiki/Cooccurrence

v1.26.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_cooccurrence" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "See the notes below on choosing a metric/matrixmodel combination" ;
                            gal:label "matrixmodel - the scoring matrix" ;
                            gal:name "matrixmodel" ;
                            gal:option [ gal:value "sim7" ;
                                    dc:description "sim7" ],
                                [ gal:value "sim1" ;
                                    dc:description "sim1" ],
                                [ gal:value "sim9" ;
                                    dc:description "sim9" ],
                                [ gal:value "sim8" ;
                                    dc:description "sim8" ],
                                [ gal:value "sim3" ;
                                    dc:description "sim3" ],
                                [ gal:value "sim6" ;
                                    dc:description "sim6" ],
                                [ gal:value "sim5" ;
                                    dc:description "sim5" ],
                                [ gal:value "sim4" ;
                                    dc:description "sim4" ],
                                [ gal:selected "true" ;
                                    gal:value "sim2" ;
                                    dc:description "sim2" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "By default all are included if no selection is made." ;
                            gal:label "groups - Groups to include" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "metric - test metric for scoring" ;
                            gal:name "metric" ;
                            gal:option [ gal:value "combo" ;
                                    dc:description "combo - unique species pairs" ],
                                [ gal:selected "true" ;
                                    gal:value "cscore" ;
                                    dc:description "cscore - species segregation" ],
                                [ gal:value "vratio" ;
                                    dc:description "vratio - variance" ],
                                [ gal:value "checker" ;
                                    dc:description "checker - species segregation" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "1" ;
                            gal:name "iters" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "By default all are included if no selection is made." ;
                            gal:label "label - Select OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Cooccurrence" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: cooccurence.summary" ;
                            gal:name "out_summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with label and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "vratio" ],
                                                [ gal:text "zScore" ],
                                                [ gal:text "0.05" ] ;
                                            gal:not_has_text [ gal:text "unique" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "out_summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.41" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "metric" ;
                                    gal:value "vratio" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "unique" ],
                                                [ gal:text "cscore" ],
                                                [ gal:text "zScore" ],
                                                [ gal:text "0.05" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "out_summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "cooccurrence" ;
            schema:sku 95 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## enable mothur to find blast
ln -s ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
#if $alignment.source == "self":
    ln -s '$alignment.name' alignment.name.dat &&
    ln -s '$alignment.group' alignment.group.dat &&
    ln -s '$alignment.count' alignment.count.dat &&
#else:
    ln -s '$alignment.reference' alignment.reference.dat &&
#end if

echo 'chimera.slayer(
    fasta=fasta.dat,
    #if $alignment.source == "self":
        reference=self,
        #if $alignment.name:
            name=$alignment.name,
        #end if
        #if $alignment.group:
            group=$alignment.group,
        #end if
        #if $alignment.count:
            count=$alignment.count,
        #end if
    #else:
        reference=$alignment.reference,
    #end if
    #if $options.setby == "user":
        search=$options.search,
        window=$options.window,
        increment=$options.increment,
        match=$options.match,
        mismatch=$options.mismatch,
        numwanted=$options.numwanted,
        parents=$options.parents,
        minsim=$options.minsim,
        mincov=$options.mincov,
        iters=$options.iters,
        minbs=$options.minbs,
        minsnp=$options.minsnp,
        divergence=$options.divergence,
        trim=$options.trim,
        split=$options.split,
    #end if
    dereplicate=$dereplicate,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using slayer" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1101/gr.112730.110 " ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.slayer_ command identifies putative chimeras using the slayer approach.

ChimeraSlayer_ is a chimeric sequence detection utility, compatible with near-full length Sanger sequences and shorter 454-FLX sequences (~500 bp).

Chimera Slayer involves the following series of steps that operate to flag chimeric 16S rRNA sequences:

    (A) the ends of a query sequence are searched against an included database of reference chimera-free 16S sequences to identify potential parents of a chimera;
    (B) candidate parents of a chimera are selected as those that form a branched best scoring alignment to the NAST-formatted query sequence;
    (C) the NAST alignment of the query sequence is improved in a 'chimera-aware' profile-based NAST realignment to the selected reference parent sequences; and
    (D) an evolutionary framework is used to flag query sequences found to exhibit greater sequence homology to an in silico chimera formed between any two of the selected reference parent sequences.

Note:
It is not recommended to blindly discard all sequences flagged as chimeras. Some may represent naturally formed chimeras that do not represent PCR artifacts. Sequences flagged may warrant further investigation.


.. _ChimeraSlayer: http://microbiomeutil.sourceforge.net/
.. _chimera.slayer: https://www.mothur.org/wiki/Chimera.slayer

    """ ;
            gal:id "mothur_chimera_slayer" ;
            gal:inputs [ gal:conditional [ gal:name "options" ;
                            gal:param [ gal:label "Slayer Options" ;
                                    gal:name "setby" ;
                                    gal:option [ gal:value "user" ;
                                            dc:description "Manually set options" ],
                                        [ gal:value "default" ;
                                            dc:description "Use default settings" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "default" ],
                                [ gal:param [ gal:argument "minbs" ;
                                            gal:label "minbs - Minimum bootstrap support % for calling a sequence chimeric (default 90)" ;
                                            gal:type "integer" ;
                                            gal:value "90" ],
                                        [ gal:argument "mincov" ;
                                            gal:label "mincov - Minimum coverage % of closest matches in reference and the query (default 70)" ;
                                            gal:type "integer" ;
                                            gal:value "70" ],
                                        [ gal:argument "increment" ;
                                            gal:label "increment - Increment for window slide on each iteration (default 5)" ;
                                            gal:type "integer" ;
                                            gal:value "5" ],
                                        [ gal:argument "window" ;
                                            gal:label "window - Window size for searching for chimeras (default 50)" ;
                                            gal:type "integer" ;
                                            gal:value "50" ],
                                        [ gal:argument "iters" ;
                                            gal:label "iters - Number of bootstrap iterations to try (default 1000)" ;
                                            gal:type "integer" ;
                                            gal:value "1000" ],
                                        [ gal:argument "trim" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "trim - include chimeric sequences trimmed to their longest piece" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "match" ;
                                            gal:label "match - Reward matched bases (default 5)" ;
                                            gal:type "integer" ;
                                            gal:value "5" ],
                                        [ gal:argument "search" ;
                                            gal:label "search - Search method for finding the closest parent" ;
                                            gal:option [ gal:value "kmer" ;
                                                    dc:description "kmer" ],
                                                [ gal:selected "true" ;
                                                    gal:value "blast" ;
                                                    dc:description "blast" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:argument "parents" ;
                                            gal:label "parents - Number of potential parents to investigate from the numwanted best matches" ;
                                            gal:type "integer" ;
                                            gal:value "3" ],
                                        [ gal:argument "minsim" ;
                                            gal:label "minsim - Minimum similarity % between the query and parent (default 90)" ;
                                            gal:type "integer" ;
                                            gal:value "90" ],
                                        [ gal:argument "numwanted" ;
                                            gal:label "numwanted - Number of potential parents to to compare with query sequence (default 15)" ;
                                            gal:type "integer" ;
                                            gal:value "15" ],
                                        [ gal:argument "split" ;
                                            gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "if a sequence comes back as non-chimeric, mothur will test the two sides to see if they are chimeric." ;
                                            gal:label "split - detect tri- and quadmeras" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "divergence" ;
                                            gal:label "divergence - Divergence cutoff for chimera determination (default 1.007)" ;
                                            gal:type "float" ;
                                            gal:value "1.007" ],
                                        [ gal:argument "minsnp" ;
                                            gal:label "minsnp - Percent of SNPs to sample on each side of breakpoint for computing bootstrap support (default 10)" ;
                                            gal:type "integer" ;
                                            gal:value "10" ],
                                        [ gal:argument "mismatch" ;
                                            gal:label "mismatch - Penalty for mismatched bases (default -4)" ;
                                            gal:type "integer" ;
                                            gal:value "-4" ] ;
                                    gal:value "user" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignment" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "self" ;
                                            dc:description "Self - Use abundant sequences from the input Candiate Sequences fasta " ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "name" ;
                                            gal:format "mothur.names" ;
                                            gal:label "names - Sequences Names" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "count" ;
                                            gal:format "mothur.count_table" ;
                                            gal:label "count - Count file" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:argument "group" ;
                                            gal:format "mothur.groups" ;
                                            gal:help "use the more abundant sequences from the same sample to check the query sequence" ;
                                            gal:label "group - Sequences Name reference" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "self" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ;
                                                    dc:description """
                    """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If parameter is false, then if one group finds the seqeunce to be chimeric, then all groups find it to be chimeric" ;
                            gal:label "dereplicate - remove chimeric sequences from all groups" ;
                            gal:name "dereplicate" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.slayer" ;
            gal:outputs [ gal:data [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.slayer.accnos" ;
                            gal:label "${tool.name} on ${on_string}: slayer.accnos" ;
                            gal:name "out_accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.slayer.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: slayer.chimeras" ;
                            gal:name "slayer.chimeras" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with external reference " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.slayer.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "slayer.chimeras" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ] ],
                        [ gal: " test with self as reference " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "HMP_MOCK.v35.slayer.chimeras" ;
                                    gal:ftype "txt" ;
                                    gal:name "slayer.chimeras" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "self" ],
                                [ gal:name "search" ;
                                    gal:value "kmer" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "setby" ;
                                    gal:value "user" ],
                                [ gal:name "fasta" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "name" ;
                                    gal:value "HMP_MOCK.v35.align.names" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.slayer" ;
            schema:sku 81 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$count' count.dat &&

echo 'cluster.fragments(
    fasta=fasta.dat,
    diffs=$diffs,
    percent=$percent,
    #if $count:
        count=count.dat,
    #end if
    name=names.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description " Group sequences that are part of a larger sequence" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The cluster.fragments_ command groups sequences that are part of a larger sequence.

.. _cluster.fragments: https://www.mothur.org/wiki/Cluster.fragments

v1.21: Updated to Mothur 1.33. Added count parameter.

    """ ;
            gal:id "mothur_cluster_fragments" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:type "data" ],
                        [ gal:argument "names" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "diffs" ;
                            gal:label "diffs - Number of mismatched bases to allow between sequences in a group (default 0)" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "percent" ;
                            gal:help "The percent parameter allows you to set percentage of differences allowed, default=0. percent=2 means if the number of difference is less                than or equal to two percent of the length of the fragment, then cluster. You may use diffs and percent at the same time to say something like:                If the number or differences is greater than 1 or more than 2% of the fragment length, don't merge." ;
                            gal:label "percent - percentage of differences allowed ( between 1 and 100, default 0)" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Cluster.fragments" ;
            gal:outputs [ gal:data [ gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.fragclust.names" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            gal:name "out_names" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.fragclust.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.fragclust.names" ;
                                    gal:ftype "mothur.names" ;
                                    gal:name "out_names" ],
                                [ gal:file "amazon.fragclust.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:ftype "mothur.names" ;
                                    gal:name "names" ;
                                    gal:value "amazon1.names" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "cluster.fragments" ;
            schema:sku 12 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'dist.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        iters=$subsampling.iters,
    #end if
    output=$output,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a phylip-formatted dissimilarity distance matrix among multiple groups" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The dist.shared_ command will generate a phylip-formatted_distance_matrix_ that describes the dissimilarity (1-similarity) among multiple groups from a shared_ file. For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _dist.shared: https://www.mothur.org/wiki/Dist.shared

v1.26.0: Updated to Mothur 1.33. Omitted calculators since they do not appear to be available.

    """ ;
            gal:id "mothur_dist_shared" ;
            gal:inputs [ gal:conditional [ gal:name "subsampling" ;
                            gal:param [ gal:label "subsample" ;
                                    gal:name "use" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "Should not exceed the number of sequences in any group" ;
                                            gal:label "subsample (defaults to the size of the smallest group)" ;
                                            gal:min "0" ;
                                            gal:name "subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ],
                                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                                            gal:min "1" ;
                                            gal:name "iters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "1000" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal: " set default option(s) " ;
                            gal:expand [ gal:macro "calc-common" ] ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "A Distance Matrix will be generated for each calculator label pair" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:name "output" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels to calculate" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "groups - Groups to analyze" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Dist.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.dist" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.dist" ] ;
                            gal:label "${tool.name} on ${on_string}: dist files" ;
                            gal:name "distfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with subsampling without specifying size " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "6" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "pasture" ],
                                                        [ gal:text "forest" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.dist" ;
                                            gal:name "canberra.0.33.square.std" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "distfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.33" ],
                                [ gal:name "output" ;
                                    gal:value "square" ],
                                [ gal:name "calc" ;
                                    gal:value "canberra" ] ],
                        [ gal: " test with subsampling with specifying size" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:has_text [ gal:text "forest" ],
                                                        [ gal:text "pasture" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.dist" ;
                                            gal:name "canberra.0.10.square.std" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "distfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "calc" ;
                                    gal:value "canberra" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "subsample" ;
                                    gal:value "2" ],
                                [ gal:name "label" ;
                                    gal:value "0.10" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.mothur.shared" ],
                                [ gal:name "output" ;
                                    gal:value "square" ],
                                [ gal:name "iters" ;
                                    gal:value "42" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "72" ;
                                    gal:element [ gal:ftype "mothur.dist" ;
                                            gal:md5 "c707e43f14c2022f4027e6a2495cbae8" ;
                                            gal:name "thetayc.0.33.lt" ] ;
                                    gal:name "distfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with label,group select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "74" ;
                                    gal:element [ gal:ftype "mothur.dist" ;
                                            gal:md5 "209dbf7e9f1e13753524905f64c8e3b7" ;
                                            gal:name "gower.0.22.lt" ] ;
                                    gal:name "distfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "calc" ;
                                    gal:value "sharedsobs,sharedchao,sharedace,anderberg,jclass,jest,kulczynski,kulczynskicody,kstest,lennon,ochiai,sorclass,sorest,whittaker,hamming,memchi2,memchord,memeuclidean,mempearson,braycurtis,jabund,morisitahorn,sorabund,thetan,thetayc,canberra,gower,hellinger,manhattan,odum,soergel,spearman,speciesprofile,structchi2,structeuclidean,structpearson,sharednseqs,sharedobserved" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.22" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "dist.shared" ;
            schema:sku 121 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$intype.otu' intype_otu.dat &&
#if $intype.infile == "otulist":
    ln -s '$intype.group' intype_group.dat &&
#end if

echo 'make.shared(
    #if $intype.infile == "biom":
        biom=intype_otu.dat
    #else
        #if $intype.group.is_of_type("mothur.groups"):
            group=intype_group.dat,
        #elif $intype.group.is_of_type("mothur.count_table"):
            count=intype_group.dat,
        #end if
        #if $intype.label:
            label=${ str($intype.label).replace(",","-") },
        #end if
        #if $intype.groups:
            groups=${ str($intype.groups).replace(",","-") },
        #end if
        list=intype_otu.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## move output files to correct destination
mv mothur.*.logfile "$logfile" &&
#if $intype.infile == 'otulist' and $intype.groups:
    mv intype_otu*.groups "$groupout"
#else
    mv intype_otu*.shared "$shared"
#end if
    """ ;
            gal:description "Make a shared file from a list and a group" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.shared_ command takes a list_ and a group_ file and outputs a shared_ file, as well as a rabund_ file for each group.


.. _list: https://www.mothur.org/wiki/List_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _make.shared: https://www.mothur.org/wiki/Make.shared

    """ ;
            gal:id "mothur_make_shared" ;
            gal:inputs [ gal:conditional [ gal:name "intype" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select input type" ;
                                    gal:name "infile" ;
                                    gal:option [ gal:value "otulist" ;
                                            dc:description "OTU list" ],
                                        [ gal:value "biom" ;
                                            dc:description "Biom 1.0 file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:label "groups - Groups to include" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.groups,mothur.count_table" ;
                                            gal:label "supply group or count table if you supplied OTU list" ;
                                            gal:name "group" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:help "By default all are included if no selection is made." ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "otulist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "biom1" ;
                                            gal:label "Biom 1.0 file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "biom" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared" ] ;
                            gal:filter "intype['groups']" ;
                            gal:label "${tool.name} on ${on_string}: share files per label" ;
                            gal:name "labelshares" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:format "mothur.shared" ;
                            gal:from_work_dir "intype_otu*.shared" ;
                            gal:label "${tool.name} on ${on_string}: shared" ;
                            gal:name "shared" ],
                        [ gal:filter "intype['group'].ext == \"mothur.groups\"" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "intype_otu*.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            gal:name "groupout" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with otu and group file" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.shared" ;
                                    gal:ftype "mothur.shared" ;
                                    gal:name "shared" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "infile" ;
                                    gal:value "otulist" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ],
                        [ gal: " test with biom file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.shared" ;
                                    gal:md5 "e44d5ca4e4a5dbc68e8219c5690aa156" ;
                                    gal:name "shared" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "infile" ;
                                    gal:value "biom" ],
                                [ gal:name "otu" ;
                                    gal:value "example.biom" ] ],
                        [ gal: " test with label and group select" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "groupout" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "mothur.shared" ;
                                            gal:md5 "592b4fb84412de47be18e64ef26b7a80" ;
                                            gal:name "0.22" ] ;
                                    gal:name "labelshares" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "infile" ;
                                    gal:value "otulist" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.shared" ;
            schema:sku 129 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$input.dist' input_dist.dat &&

echo 'remove.dists(
    accnos=accnos.dat,
    #if $input.source == "phylip":
        phylip=input_dist.dat
    #else
        column=input_dist.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Removes distances from a phylip or column file" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.dists_ removes distances from a phylip or column file related to groups or sequences listed in an accnos file.

.. _remove.dists: https://www.mothur.org/wiki/Remove.dists

    """ ;
            gal:id "mothur_remove_dists" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Select input format" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "column" ;
                                            gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "accnos" ;
                            gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.dists" ;
            gal:outputs [ gal:data [ gal:format_source "dist" ;
                            gal:from_work_dir "input_dist*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.dist" ;
                            gal:name "pick_dist" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-dist-format" ] ;
                                            gal:has_line_matching [ gal:expression "^90$" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.square.dist" ;
                                    gal:name "pick_dist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.bad.accnos" ],
                                [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.dists" ;
            schema:sku 97 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $method_condition.method_switch == "distance":
    ln -s '$method_condition.matrix_condition.dist' dist.dat &&
    ln -s '$method_condition.matrix_condition.nameOrCount' nameOrCount.dat &&
    ln -s '$method_condition.fasta' fasta.dat &&
    #if $method_condition.pick.type == "yes":
        ln -s '$method_condition.pick.group' group.dat &&
    #end if
#elif $method_condition.method_switch == "abundance":
    ln -s '$method_condition.nameOrCount' nameOrCount.dat &&
#end if

echo 'get.oturep(
    list=otu.dat,
    #if $sorted:
        sorted=$sorted,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $method_condition.method_switch == "distance":
        method=distance,
        #if $method_condition.matrix_condition.matrix_format == "column":
            column=dist.dat,
            #if $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.names"):
                name=nameOrCount.dat,
            #elif $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.count_table"):
                count=nameOrCount.dat,
            #end if
        #elif $method_condition.matrix_condition.matrix_format == "phylip":
            phylip=dist.dat,
            #if $method_condition.matrix_condition.nameOrCount:
                #if $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.names"):
                    name=nameOrCount.dat,
                #elif $method_condition.matrix_condition.nameOrCount.is_of_type("mothur.count_table"):
                    count=nameOrCount.dat,
                #end if
            #end if
        #end if
        #if $method_condition.fasta:
            fasta=fasta.dat,
        #end if
        #if $method_condition.pick.type == "yes":
            #if $method_condition.pick.group:
                group=group.dat,
            #end if
            #if $method_condition.pick.groups:
                groups=${ str($method_condition.pick.groups).replace(",","-") },
            #end if
        #end if
        large=$method_condition.large
    #elif $method_condition.method_switch == "abundance":
        method=abundance,
        #if $method_condition.nameOrCount.is_of_type("mothur.names"):
            name=nameOrCount.dat
        #elif $method_condition.nameOrCount.is_of_type("mothur.count_table"):
            count=nameOrCount.dat
        #end if
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a fasta with a representative sequence for each OTU" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The get.oturep_ command generates a fasta-formatted sequence file containing only a representative sequence for each OTU.  The opposite of the bin.seqs command.

.. _get.oturep: https://www.mothur.org/wiki/Get.oturep

v1.23.0: Updated to Mothur 1.33, added count and method parameter

    """ ;
            gal:id "mothur_get_oturep" ;
            gal:inputs [ gal:conditional [ gal:name "method_condition" ;
                            gal:param [ gal:help "The distance method finds the sequence with the smallest maximum distance to other sequences. The abundance                 method chooses the most abundant sequence in the OTU as the representative." ;
                                    gal:label "Method to use for the selection of the representative sequences" ;
                                    gal:name "method_switch" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "distance" ;
                                            dc:description "distance" ],
                                        [ gal:value "abundance" ;
                                            dc:description "abundance" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:conditional [ gal:name "pick" ;
                                            gal:param [ gal:help "" ;
                                                    gal:label "Parse a group file into abundant and rare groups?" ;
                                                    gal:name "type" ;
                                                    gal:option [ gal:value "yes" ;
                                                            dc:description "Yes" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "no" ;
                                                            dc:description "No" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:value "no" ],
                                                [ gal:param [ gal:label "groups - Group Selection (all used if none are selected)" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ],
                                                        [ gal:format "mothur.groups" ;
                                                            gal:label "group - Group file for the OTU List" ;
                                                            gal:name "group" ;
                                                            gal:type "data" ] ;
                                                    gal:value "yes" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ],
                                        [ gal:name "matrix_condition" ;
                                            gal:param [ gal:help "" ;
                                                    gal:label "Select a Distance Matrix Format" ;
                                                    gal:name "matrix_format" ;
                                                    gal:option [ gal:value "column" ;
                                                            dc:description "Pairwise Column Distance Matrix" ],
                                                        [ gal:value "phylip" ;
                                                            dc:description "Phylip Distance Matrix" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:name "nameOrCount" ;
                                                            gal:type "data" ],
                                                        [ gal:format "mothur.pair.dist" ;
                                                            gal:label "column - Distance Matrix" ;
                                                            gal:name "dist" ;
                                                            gal:type "data" ] ;
                                                    gal:value "column" ;
                                                    dc:description """
                        """ ],
                                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                                            gal:label "phylip - Distance Matrix" ;
                                                            gal:name "dist" ;
                                                            gal:type "data" ],
                                                        [ gal:format "mothur.names,mothur.count_table" ;
                                                            gal:label "name file or count table - Sequences Name reference" ;
                                                            gal:name "nameOrCount" ;
                                                            gal:optional "true" ;
                                                            gal:type "data" ] ;
                                                    gal:value "phylip" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "Set this parameter to Yes if your distance matric might not fit in RAM" ;
                                            gal:label "large - Distance Matrix is very Large" ;
                                            gal:name "large" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:format "fasta" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:name "fasta" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "distance" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.names,mothur.count_table" ;
                                            gal:label "name file or count table - Sequences Name reference" ;
                                            gal:name "nameOrCount" ;
                                            gal:type "data" ] ;
                                    gal:value "abundance" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "sorted - Sort Sequences by" ;
                            gal:name "sorted" ;
                            gal:option [ gal:value "group" ;
                                    dc:description "Group" ],
                                [ gal:value "size" ;
                                    dc:description "Bin Size" ],
                                [ gal:value "name" ;
                                    dc:description "Sequence Name" ],
                                [ gal:value "number" ;
                                    dc:description "Bin Number" ],
                                [ gal:value "" ;
                                    dc:description "Don't sort" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.oturep" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.fasta" ] ;
                            gal:filter "method_condition['fasta']",
                                "method_condition['method_switch'] == \"distance\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.fasta" ;
                            gal:name "fasta_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.names" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.names" ] ;
                            gal:filter "method_condition['matrix_condition']['nameOrCount'].ext == \"mothur.names\"",
                                "method_condition['nameOrCount'].ext == \"mothur.names\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.names" ;
                            gal:name "names_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "mothur.count_table" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.rep\\.count_table" ] ;
                            gal:filter "method_condition['matrix_condition']['nameOrCount'].ext == \"mothur.count_table\"",
                                "method_condition['nameOrCount'].ext == \"mothur.count_table\"" ;
                            gal:label "${tool.name} on ${on_string}: rep.count_table" ;
                            gal:name "count_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal: " It seems that the content of the result file can vary from one execution to another with the same parameters ",
                        " test with abundance / count / label ",
                        " test with distance / column / label select ",
                        " test with distance / count table ",
                        " test with distance / fasta / sorting ",
                        " test with distance / group file ",
                        " test with distance / phylip " ;
                    gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "39ff2858909d49633871d5a625585de5" ;
                                            gal:name "0.27" ] ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "method_switch" ;
                                    gal:value "distance" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "matrix_format" ;
                                    gal:value "phylip" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "39ff2858909d49633871d5a625585de5" ;
                                            gal:name "0.27" ] ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ],
                                [ gal:count "2" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "a9d9622b6f5fcbe8acdc05df5484ffc4" ;
                                            gal:name "0.27" ] ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "label" ;
                                    gal:value "0.05,0.27" ],
                                [ gal:name "matrix_format" ;
                                    gal:value "phylip" ],
                                [ gal:name "method_switch" ;
                                    gal:value "distance" ],
                                [ gal:name "sorted" ;
                                    gal:value "name" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "be6dccdd3d4619c3ac465246c826209a" ;
                                            gal:name "0.27" ] ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "method_switch" ;
                                    gal:value "distance" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.05,0.27,0.45" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "matrix_format" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "8" ;
                                    gal:element [ gal:ftype "mothur.names" ;
                                            gal:md5 "34f87d93fd9ebbefed9754f627f502fd" ;
                                            gal:name "0.27.pasture" ] ;
                                    gal:name "names_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.names" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.05,0.27,0.45" ],
                                [ gal:name "method_switch" ;
                                    gal:value "distance" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "matrix_format" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "type" ;
                                    gal:value "yes" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:assert_contents [ gal:has_text_matching [ gal:expression "U68\\w+\\t36" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.count_table" ;
                                            gal:name "0.27" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "sorted" ;
                                    gal:value "name" ],
                                [ gal:name "method_switch" ;
                                    gal:value "abundance" ],
                                [ gal:name "label" ;
                                    gal:value "0.27,unique" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon1.count_table" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "mothur.count_table" ;
                                            gal:md5 "6b1afd712825af4bf8cb4ab8304df903" ;
                                            gal:name "0.27" ] ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "matrix_format" ;
                                    gal:value "phylip" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "nameOrCount" ;
                                    gal:value "amazon1.count_table" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "method_switch" ;
                                    gal:value "distance" ],
                                [ gal:name "label" ;
                                    gal:value "unique,0.05,0.27" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.oturep" ;
            schema:sku 79 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'otu.hierarchy(
    list=otu.dat,
    label=$label1-$label2,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Relate OTUs at different distances" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The otu.hierarchy_ command relates OTUs from a list_ at different distances.

.. _list: https://www.mothur.org/wiki/List_file
.. _otu.hierarchy: https://www.mothur.org/wiki/Otu.hierarchy

    """ ;
            gal:id "mothur_otu_hierarchy" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "output - display the names of the sequences in the otus or the otu numbers" ;
                            gal:name "output" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "name" ;
                                    dc:description "OTU sequence names" ],
                                [ gal:value "number" ;
                                    dc:description "OTU numbers" ] ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Label 1" ;
                            gal:name "label1" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "Must be different than Label 1" ;
                            gal:label "label - OTU Label 2" ;
                            gal:name "label2" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Otu.hierarchy" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.hierarchy" ;
                            gal:label "${tool.name} on ${on_string}: otu.hierarchy" ;
                            gal:name "hierarchy" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.0.03.-.0.05.otu.hierarchy" ;
                                    gal:ftype "tabular" ;
                                    gal:name "hierarchy" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label1" ;
                                    gal:value "0.05" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "label2" ;
                                    gal:value "0.03" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "otu.hierarchy" ;
            schema:sku 18 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&

 echo 'deunique.seqs(
    #if $inputtype.intype == "countfile":
        count=names.dat,
    #else
        name=names.dat,
    #end if
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Return all sequences" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The deunique.seqs_ command is the reverse of the unique.seqs command, and creates a fasta file from a fasta and name_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _deunique.seqs: https://www.mothur.org/wiki/Deunique.seqs

v.1.21.0: Updated to Mothur 1.33, added option to provide count instead of names file, new groups file as output

    """ ;
            gal:id "mothur_deunique_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "inputtype" ;
                            gal:param [ gal:help "" ;
                                    gal:label "type of file to provide, may be either a names or a count file" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "namesfile" ;
                                            dc:description "names" ],
                                        [ gal:value "countfile" ;
                                            dc:description "count table" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.names" ;
                                            gal:help "A names file will generate a new faste file containing all the sequences." ;
                                            gal:label "provide a names file" ;
                                            gal:name "names" ;
                                            gal:type "data" ] ;
                                    gal:value "namesfile" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:help "A counts table will generate a new faste file containing all the sequences.                     If the file contains group information, a group file will also be created." ;
                                            gal:label "provide a count table" ;
                                            gal:name "names" ;
                                            gal:type "data" ] ;
                                    gal:value "countfile" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Sequences to filter" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Deunique.seqs" ;
            gal:outputs [ gal: " groups file is created when a count file is used as input, but will be empty if the count file did not contain group information " ;
                    gal:data [ gal:filter "inputtype.intype == 'countfile'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "names.redundant.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            gal:name "groups_file" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.redundant.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test count file input without group file output ",
                                "empty" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "177f5cf92a84ab3aef0a665e06178bbe" ;
                                    gal:name "out_fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                    gal:name "groups_file" ] ;
                            gal:param [ gal:name "intype" ;
                                    gal:value "countfile" ],
                                [ gal:name "names" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ] ],
                        [ gal: " test count file input with group file output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon_withgroups.redundant.groups" ;
                                    gal:ftype "mothur.groups" ;
                                    gal:name "groups_file" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "177f5cf92a84ab3aef0a665e06178bbe" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "names" ;
                                    gal:value "amazon_withgroups.count_table" ],
                                [ gal:name "intype" ;
                                    gal:value "countfile" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ] ],
                        [ gal: " test names file input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "579698b8037ee939dd730e2cf0dd018d" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "intype" ;
                                    gal:value "namesfile" ],
                                [ gal:name "names" ;
                                    gal:value "amazon.unique.names" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "deunique.seqs" ;
            schema:sku 90 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.otu' input_otu.dat &&

echo 'venn(
    #if $input.source == "shared":
        shared=input_otu.dat,
        nseqs=$nseqs,
        permute=$permute,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
    #elif $input.source == "similarity":
        list=input_otu.dat,
        abund=$input.abund,
    #end if
    #if $input.label:
        label=${ str($input.label).replace(",","-") },
    #end if
    #if $input.calc:
        calc=${ str($input.calc).replace(",","-") },
    #end if
    fontsize=$fontsize,
    sharedotus=$sharedotus
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate Venn diagrams for groups " ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The venn_ command generates Venn diagrams to compare the richness shared among 2, 3, or 4 groups.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _venn: https://www.mothur.org/wiki/Venn

    """ ;
            gal:id "mothur_venn" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Generate Heatmap for" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "shared" ;
                                            dc:description "OTU Shared" ],
                                        [ gal:value "similarity" ;
                                            dc:description "OTU list" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:label "abund - Abundance when using the ace calculator ( >= 5 )" ;
                                            gal:min "5" ;
                                            gal:name "abund" ;
                                            gal:type "integer" ;
                                            gal:value "10" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:name "calc" ;
                                            gal:option [ gal:value "ace" ;
                                                    dc:description "Ace" ],
                                                [ gal:value "sobs" ;
                                                    dc:description "Sobs" ],
                                                [ gal:value "chao" ;
                                                    dc:description "Chao" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "similarity" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                                            gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:label "groups - Groups to consider" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:multiple "true" ;
                                            gal:name "calc" ;
                                            gal:option [ gal:value "sharedchao" ;
                                                    dc:description "Shared Chao" ],
                                                [ gal:value "sharedace" ;
                                                    dc:description "Shared Ace" ],
                                                [ gal:value "sharedsobs" ;
                                                    dc:description "Shared Sobs" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "sharedotus - This parameter can be used with the sharedsobs calculator to get the names of the OTUs in each section of the venn diagram. Default=T" ;
                            gal:name "sharedotus" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:label "fontsize - Fontsize (default is 24)" ;
                            gal:name "fontsize" ;
                            gal:type "integer" ;
                            gal:value "24" ],
                        [ gal:label "permute - Create pictures with all possible 4-way permutations of groups" ;
                            gal:name "permute" ;
                            gal:option [ gal:value "true" ;
                                    dc:description "true" ],
                                [ gal:value "2" ;
                                    dc:description "2" ],
                                [ gal:value "1" ;
                                    dc:description "1" ],
                                [ gal:value "3" ;
                                    dc:description "3" ],
                                [ gal:selected "true" ;
                                    gal:value "4" ;
                                    dc:description "4" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "nseqs - Output the number of sequences represented by the otus in the picture" ;
                            gal:name "nseqs" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Venn" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "svg" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.svg" ] ;
                            gal:label "${tool.name} on ${on_string}: svg" ;
                            gal:name "svgs_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.sharedotus" ] ;
                            gal:filter "sharedotus" ;
                            gal:label "${tool.name} on ${on_string}: sharedotus" ;
                            gal:name "sharedotus_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with list file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "108" ;
                                    gal:element [ gal:ftype "svg" ;
                                            gal:md5 "d69778f507939bc2f5d2bbc3a0088f21" ;
                                            gal:name ".0.45.ace" ] ;
                                    gal:name "svgs_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "similarity" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "calc" ;
                                    gal:value "sobs,chao,ace" ] ],
                        [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "35" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "7513c9df64477a08b69f0d4665011e80" ;
                                            gal:name "0.05.sharedsobs.forest-pasture" ] ;
                                    gal:name "sharedotus_out" ;
                                    dc:description """
                """ ],
                                [ gal:count "72" ;
                                    gal:element [ gal:ftype "svg" ;
                                            gal:md5 "e2dc0d5485520f5b22aa185ba91b123e" ;
                                            gal:name "0.05.sharedsobs.forest-pasture" ] ;
                                    gal:name "svgs_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "calc" ;
                                    gal:value "sharedsobs,sharedchao" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "venn" ;
            schema:sku 89 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$name' name.dat &&
#if $grouping.use == "yes":
    ln -s '$grouping.group' grouping.group.dat &&
#end if

echo 'count.seqs(
    #if $grouping.use == "yes":
        group=grouping.group.dat,
        #if $grouping.groups:
            groups=${ str($grouping.groups).replace(",","-") },
        #end if
    #end if
    name=name.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "(aka make.table) counts the number of sequences represented by the representative" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The count.seqs_ command counts the number of sequences represented by the representative sequence in a name_ file and generates a count_table_. If a group_ file is given, it will also provide the group count breakdown.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _count.seqs: https://www.mothur.org/wiki/Count.seqs
.. _count_table: https://www.mothur.org/wiki/Count_File

v.1.21.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_count_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "grouping" ;
                            gal:param [ gal:label "Use a Group file to include counts for groups" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:help "All groups displayed if none are selected." ;
                                            gal:label "groups - Groups to display" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "group" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - Group file for the tree" ;
                                            gal:name "group" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Count.seqs" ;
            gal:outputs [ gal:data [ gal:format "mothur.count_table" ;
                            gal:from_work_dir "name*.count_table" ;
                            gal:label "${tool.name} on ${on_string}: count_table" ;
                            gal:name "seq_count" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon_withgroups.count_table" ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "seq_count" ] ;
                            gal:param [ gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test default params " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.count_table" ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "seq_count" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ] ],
                        [ gal: " test with group file and multiple groups " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "b18c03aee561cd24a36b00ad9b22255a" ;
                                    gal:name "seq_count" ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "groups" ;
                                    gal:value "pasture,forest" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ] ;
                            dc:description " " ],
                        [ gal: " test with group file and subset of groups " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon_withgroups_pasture.count_table" ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "seq_count" ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "pasture" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ] ;
                            dc:description " " ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "count.seqs" ;
            schema:sku 30 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
#for $i in $input:
    ln -s '$i' input${input.index($i)}.dat &&
#end for

echo 'merge.taxsummary(
    input=#for $i in $input#input${input.index($i)}.dat-#end for#,
    output=$output
)'
| sed 's/ //g'  ## mothur trips over whitespace
| sed 's/-,/,/g'
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Merge tax.summary files" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

.. _Mothur: https://www.mothur.org/wiki/Main_Page

**Command Documentation**

The merge.taxsummary command takes a list of tax.summary files separated by dashes and merges them into one file.

.. _merge.taxsummary: https://www.mothur.org/wiki/Merge.taxsummary

    """ ;
            gal:id "mothur_merge_taxsummary" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.tax.summary" ;
                            gal:label "input - tax.summary files" ;
                            gal:multiple "true" ;
                            gal:name "input" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Merge.taxsummary" ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: merged sff" ;
                            gal:name "output" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.tax.summary" ;
                                    gal:md5 "7175d0709a1e4622d0710e79dd52801b" ;
                                    gal:name "output" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "input" ;
                                    gal:value "amazon.wang.knn.tax.summary,amazon.silva.wang.tax.summary" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "merge.taxsummary" ;
            schema:sku 106 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

#import re

#set fastas = ''
#set groups = ''
#set count = 0

#if $method.how == 'collection':
    #for $i in $method.fasta_collection:
        #set $identifier=re.sub('[^\\w_]', '_', str($i.element_identifier))
        ln -s '$i' 'fasta_${identifier}.dat' &&
        #set fastas+='fasta_'+$identifier+'.dat-'
        #set groups+=$identifier+'-'
    #end for
#else
    #for $i in $method.inputs:
        ln -s '$i.fasta' fasta_${count}.dat &&
        #set fastas+='fasta_'+str($count)+'.dat-'
        #set groups+=str($i.group)+'-'
        #set count+=1
    #end for
#end if

echo 'make.group(
    fasta=${ str($fastas).rstrip('-') },
    groups=${ str($groups).rstrip('-') }
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Make a group file" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.group_ command reads a fasta file or series of fasta files and creates a group_ file.

.. _group: https://www.mothur.org/wiki/Group_file
.. _make.group: https://www.mothur.org/wiki/Make.group

    """ ;
            gal:id "mothur_make_group" ;
            gal:inputs [ gal:conditional [ gal:name "method" ;
                            gal:param [ gal:label "Method to create group file" ;
                                    gal:name "how" ;
                                    gal:option [ gal:value "collection" ;
                                            dc:description " Automatically from collection " ],
                                        [ gal:value "manually" ;
                                            dc:description " Manually specify fasta files and group names" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:repeat [ gal:name "inputs" ;
                                            gal:param [ gal:format "fasta" ;
                                                    gal:label "fasta - Fasta to group" ;
                                                    gal:name "fasta" ;
                                                    gal:type "data" ],
                                                [ gal:label "group - Group name" ;
                                                    gal:name "group" ;
                                                    gal:type "text" ] ;
                                            gal:title "Additional" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "manually" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:collection_type "list" ;
                                            gal:format "fasta" ;
                                            gal:help "group names will be derived from the dataset names of the collection elements, please make sure these are meaningful names" ;
                                            gal:label "Collection with fasta files to group" ;
                                            gal:name "fasta_collection" ;
                                            gal:type "data_collection" ] ;
                                    gal:value "collection" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.group" ;
            gal:outputs [ gal:data [ gal:format "mothur.groups" ;
                            gal:from_work_dir "*groups" ;
                            gal:label "${tool.name} on ${on_string}: group" ;
                            gal:name "output" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test manual groups creation " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.Mock_S280_L001_R1_001_small.trim.contigs.good.groups" ;
                                    gal:name "output" ] ;
                            gal:param [ gal:name "how" ;
                                    gal:value "manually" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            gal:repeat [ gal:name "inputs" ;
                                    gal:param [ gal:name "fasta" ;
                                            gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                        [ gal:name "group" ;
                                            gal:value "testgroup" ] ;
                                    dc:description """
                """ ],
                                [ gal:name "inputs" ;
                                    gal:param [ gal:name "group" ;
                                            gal:value "testgroup2" ],
                                        [ gal:name "fasta" ;
                                            gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                                    dc:description """
                """ ] ;
                            dc:description " " ],
                        [ gal: " test with spaces or hyphens in element identifier " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "make_group_collection.groups" ;
                                    gal:name "output" ] ;
                            gal:param [ gal:name "how" ;
                                    gal:value "collection" ],
                                [ gal:collection [ gal:element [ gal:ftype "fasta" ;
                                                    gal:name "test group" ;
                                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                                [ gal:ftype "fasta" ;
                                                    gal:name "test-group2" ;
                                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                                            gal:type "list" ;
                                            dc:description """
                   """ ] ;
                                    gal:name "fasta_collection" ;
                                    dc:description """
               """ ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description " " ],
                        [ gal: " test auto-creation from collection " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.Mock_S280_L001_R1_001_small.trim.contigs.good.groups" ;
                                    gal:name "output" ] ;
                            gal:param [ gal:collection [ gal:element [ gal:ftype "fasta" ;
                                                    gal:name "testgroup2" ;
                                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                                [ gal:ftype "fasta" ;
                                                    gal:name "testgroup" ;
                                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                                            gal:type "list" ;
                                            dc:description """
                   """ ] ;
                                    gal:name "fasta_collection" ;
                                    dc:description """
               """ ],
                                [ gal:name "how" ;
                                    gal:value "collection" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description " " ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.group" ;
            schema:sku 122 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fastq' fastq.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if

echo 'fastq.info(
    fastq=fastq.dat,
    pacbio=$pacbio,
    format=$format
    #if $oligo.add == "yes":
        ,oligos=oligo.oligos.dat
        ,bdiffs=$oligo.bdiffs
        ,pdiffs=$oligo.pdiffs
        ,tdiffs=$oligo.tdiffs
        ,ldiffs=$oligo.ldiffs
        ,sdiffs=$oligo.sdiffs
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
## rename some outputs
#if $oligo.add == "yes":
    && mv fastq.scrap.fasta scrap.fasta
    && mv fastq.scrap.qual scrap.qual
#end if
    """ ;
            gal:description "Convert fastq to fasta and quality" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The fastq.info_ command reads a fastq file and creates a fasta and quality file.


.. _fastq.info: https://www.mothur.org/wiki/Fastq.info

    """ ;
            gal:id "mothur_fastq_info" ;
            gal:inputs [ gal:conditional [ gal:name "oligo" ;
                            gal:param [ gal:help "a file that contain the sequences of the forward and reverse primers and barcodes and their sample identifier.                 Each line of the oligos file can start with the key words \"forward\", \"reverse\", and \"barcode\"                 or it can start with a \"#\" to tell mothur to ignore that line of the oligos file." ;
                                    gal:label "Use oligos file?" ;
                                    gal:name "add" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "bdiffs" ;
                                            gal:label "bdiffs - number of differences to allow in the barcode (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "pdiffs" ;
                                            gal:label "pdiffs - number of differences to allow in the primer (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "oligos" ;
                                            gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:type "data" ],
                                        [ gal:argument "sdiffs" ;
                                            gal:label "sdiffs - total number of differences to allow in spacer sequence (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "ldiffs" ;
                                            gal:label "ldiffs - total number of differences to allow in linker sequence (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:argument "tdiffs" ;
                                            gal:label "tdiffs - total number of differences to allow in primer and barcode (must be > 0; default 0)" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "pacbio" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "pacbio - if set to true, quality scores of 0 will results in a corresponding base of N" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "fastq" ;
                            gal:format "fastq" ;
                            gal:label "fastq - Fastq Sequence file" ;
                            gal:type "data" ],
                        [ gal:argument "format" ;
                            gal:label "format of sequence" ;
                            gal:option [ gal:value "illumina1.8+" ;
                                    dc:description "illumina1.8+" ],
                                [ gal:value "illumina" ;
                                    dc:description "illumina" ],
                                [ gal:selected "true" ;
                                    gal:value "sanger" ;
                                    dc:description "sanger" ],
                                [ gal:value "solexa" ;
                                    dc:description "solexa" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Fastq.info" ;
            gal:outputs [ gal:data [ gal:filter "oligos" ;
                            gal:format "fastq" ;
                            gal:from_work_dir "fastq*.scrap.fastq" ;
                            gal:label "${tool.name} on ${on_string}: fastq scrap" ;
                            gal:name "fastq_scrap_out" ;
                            dc:description """
            """ ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "fastq*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "fasta_out" ],
                        [ gal:format "qual454" ;
                            gal:from_work_dir "fastq*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            gal:name "qfile_out" ],
                        [ gal:filter "oligos" ;
                            gal:format "qual454" ;
                            gal:from_work_dir "scrap.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual scrap" ;
                            gal:name "qfile_scrap_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "oligos" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "scrap.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta scrap" ;
                            gal:name "fasta_scrap_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "@M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fastq_scrap_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-qfile-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_4525_7317" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "qfile_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-qfile-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_4525_7317" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "qfile_scrap_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fasta_scrap_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "oligos" ;
                                    gal:value "HMPv5-v3_1368-1369.oligos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fastq" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "pacbio" ;
                                    gal:value "false" ],
                                [ gal:name "oligo|add" ;
                                    gal:value "yes" ],
                                [ gal:name "format" ;
                                    gal:value "sanger" ],
                                [ gal:name "bdiffs" ;
                                    gal:value "1" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "3" ],
                                [ gal:name "ldiffs" ;
                                    gal:value "3" ],
                                [ gal:name "tdiffs" ;
                                    gal:value "3" ],
                                [ gal:name "sdiffs" ;
                                    gal:value "7" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-qfile-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_4525_7317" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "qual454" ;
                                    gal:name "qfile_scrap_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_scrap_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-qfile-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_4525_7317" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "qual454" ;
                                    gal:name "qfile_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "@M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fastq" ;
                                    gal:name "fastq_scrap_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "pacbio" ;
                                    gal:value "false" ],
                                [ gal:name "tdiffs" ;
                                    gal:value "3" ],
                                [ gal:name "fastq" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "oligo|add" ;
                                    gal:value "yes" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "3" ],
                                [ gal:name "format" ;
                                    gal:value "sanger" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:name "sdiffs" ;
                                    gal:value "7" ],
                                [ gal:name "ldiffs" ;
                                    gal:value "3" ],
                                [ gal:name "bdiffs" ;
                                    gal:value "1" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-qfile-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_4525_7317" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "qfile_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "oligo|add" ;
                                    gal:value "no" ],
                                [ gal:name "fastq" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "format" ;
                                    gal:value "sanger" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "pacbio" ;
                                    gal:value "false" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "fastq.info" ;
            schema:sku 85 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&
ln -s '$design' design.dat &&

echo 'amova(
    phylip=phylip.dat,
    iters=$iters,
    alpha=$alpha,
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    design=design.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Analysis of molecular variance" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1111/j.1442-9993.2001.01070.pp.x" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The amova_ command calculates the analysis of molecular variance from a phylip_distance_matrix_,
a nonparametric analog of traditional analysis of variance. This method is widely used in population
genetics to test the hypothesis that genetic diversity within two populations is not significantly
different from that which would result from pooling the two populations.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
	=======	=======
	duck	bird
	cow	mammal
	pig	mammal
	goose	bird
	cobra	reptile
	=======	=======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.


.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _amova: https://www.mothur.org/wiki/Amova

    """ ;
            gal:id "mothur_amova" ;
            gal:inputs [ gal: """ TODO: update galaxy datatypes to set metadata for design files, then can switch to a select box
        <param argument="sets" type="select" multiple="true" label="sets - Which of the sets in your design file you would like to analyze."
            help="The set names are separated by dashes. The defualt is all sets in designfile">
            <options>
                <filter type="data_meta" ref="design" key="sets"/>
            </options>
        </param>
        """ ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "iters" ;
                            gal:help "default: 1000" ;
                            gal:label "iters - Number of random configuration to try" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:argument "phylip" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ],
                        [ gal:help "separate sets by dashes or commas, e.g. set1,set2 or set1-set2-set3" ;
                            gal:label "sets - Which of the sets in your design file you would like to analyze?" ;
                            gal:name "sets" ;
                            gal:type "text" ],
                        [ gal:argument "design" ;
                            gal:format "mothur.design" ;
                            gal:help "design has 2 TAB-separated columns: group and grouping (Tool: Make_Design)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ],
                        [ gal:argument "alpha" ;
                            gal:help "default: 0.05" ;
                            gal:label "alpha - acceptable stopping precision" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Amova" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "phylip.amova" ;
                            gal:label "${tool.name} on ${on_string}: amova" ;
                            gal:name "amova" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^A-B\\tAmong\\tWithin\\tTotal$" ],
                                                [ gal:expression "^MS\\t[0-9\\.]+\\t[0-9\\.]+$" ],
                                                [ gal:expression "^SS\\t[0-9\\.]+\\t[0-9\\.]+\\t[0-9\\.]+$" ],
                                                [ gal:expression "^df\\t[0-9\\.]+\\t[0-9\\.]+\\t[0-9\\.]+$" ] ;
                                            gal:has_text [ gal:text "p-value" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "amova" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "design" ;
                                    gal:value "amazon.design" ],
                                [ gal:name "phylip" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal: " test with sets specified " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^MS\\t[0-9\\.]+\\t[0-9\\.]+$" ],
                                                [ gal:expression "^df\\t[0-9\\.]+\\t[0-9\\.]+\\t[0-9\\.]+$" ],
                                                [ gal:expression "^A-B\\tAmong\\tWithin\\tTotal$" ],
                                                [ gal:expression "^SS\\t[0-9\\.]+\\t[0-9\\.]+\\t[0-9\\.]+$" ] ;
                                            gal:has_text [ gal:text "p-value" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "amova" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "design" ;
                                    gal:value "amazon.design" ],
                                [ gal:name "phylip" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "sets" ;
                                    gal:value "A,B" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "amova" ;
            schema:sku 11 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&
ln -s '$fasta' fasta.dat &&
ln -s '$otu' otu.dat &&
ln -s '$count' count.dat &&

echo 'bin.seqs(
    #if $name:
        name=name.dat,
    #end if
    #if $group:
        group=group.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    fasta=fasta.dat,
    list=otu.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Order Sequences by OTU" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The bin.seqs_ command generates fasta-formatted files where sequences are ordered according to the OTU
from the list_file_ that they belong to. Such an output may be helpful for generating primers specific
to an OTU or for classification of sequences.

.. _list_file: https://www.mothur.org/wiki/List_file
.. _bin.seqs: https://www.mothur.org/wiki/Bin.seqs

    """ ;
            gal:id "mothur_bin_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Sequences to Bin" ;
                            gal:type "data" ],
                        [ gal:argument "group" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "label" ;
                            gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "Represents the number of duplicate sequences for a given representitive sequence" ;
                            gal:label "count - Count Table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "list" ;
                            gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Bin.seqs" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:label "${tool.name} on ${on_string}: fastafiles per label" ;
                            gal:name "fastafiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with group and name file and label select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                                    gal:has_text [ gal:text "U68589" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "fasta" ;
                                            gal:name "0.22" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fastafiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.22" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                                    gal:has_text [ gal:text "U68589" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "fasta" ;
                                            gal:name "0.22" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "fastafiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "bin.seqs" ;
            schema:sku 21 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$infile.otu' infile_otu.dat &&
#if $infile.intype == "in_listgroup":
    ln -s '$infile.group' infile.group.dat &&
    ln -s '$infile.fasta' infile_fasta.dat &&
    ln -s '$count_in' count_in.dat &&
#end if

echo 'get.sharedseqs(
    #if $infile.intype == "in_listgroup":
        list=infile_otu.dat

        #if $group:
            ,group=infile.group.dat
        #elif $count_in:
            ,count=count_in.dat
        #end if

        #if $infile.fasta:
            ,fasta=infile_fasta.dat
        #end if
    #else
        shared=infile_otu.dat
    #end if
    #if $infile.label:
        ,label=${ str($infile.label).replace(",","-") }
    #end if
    #if $infile.seqsfrom.selection == "unique" and $infile.seqsfrom.groups:
        ,uniquegroups=${ str($infile.seqsfrom.groups).replace(",","-") }
    #end if
    #if $infile.seqsfrom.selection == "shared" and $infile.seqsfrom.groups:
        ,sharedgroups=${ str($infile.seqsfrom.groups).replace(",","-") }
    #end if
    #if $output:
        ,output=$output
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get shared sequences at each distance from list and group" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.sharedseqs_ command takes a list and group file and outputs a .shared.seqs file for each distance. This is useful for those cases where you might be interested in identifying sequences that are either unique or shared by specific groups, which you could then classify.

.. _get.sharedseqs: https://www.mothur.org/wiki/Get.sharedseqs

v1.21.0: Updated to Mothur 1.33, added shared file option

    """ ;
            gal:id "mothur_get_sharedseqs" ;
            gal:inputs [ gal:conditional [ gal:name "infile" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Will you be supplying a shared file or a list and group file?" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "in_shared" ;
                                            dc:description "Shared file" ],
                                        [ gal:value "in_listgroup" ;
                                            dc:description "OTU list and group file" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:conditional [ gal:name "seqsfrom" ;
                                            gal:param [ gal:help "" ;
                                                    gal:label "Select Groups" ;
                                                    gal:name "selection" ;
                                                    gal:option [ gal:value "unique" ;
                                                            dc:description "OTUs that contain ONLY sequences from the selected groups" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "all" ;
                                                            dc:description "None (use all groups)" ],
                                                        [ gal:value "shared" ;
                                                            dc:description "OTUs that contain sequences from the selected groups" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:label "unique - Group to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "otu" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:value "unique" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "all" ],
                                                [ gal:param [ gal:label "shared - Groups to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "otu" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:value "shared" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:help "By default all are included if no selection is made." ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "list - OTU List or shared file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ] ;
                                    gal:value "in_shared" ;
                                    dc:description """
                """ ],
                                [ gal:conditional [ gal:name "seqsfrom" ;
                                            gal:param [ gal:help "" ;
                                                    gal:label "Select Groups" ;
                                                    gal:name "selection" ;
                                                    gal:option [ gal:selected "true" ;
                                                            gal:value "all" ;
                                                            dc:description "None (use all groups)" ],
                                                        [ gal:value "shared" ;
                                                            dc:description "OTUs that contain sequences from the selected groups" ],
                                                        [ gal:value "unique" ;
                                                            dc:description "OTUs that contain ONLY sequences from the selected groups" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:label "shared - Groups to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:value "shared" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "all" ],
                                                [ gal:param [ gal:label "unique - Group to analyze" ;
                                                            gal:multiple "true" ;
                                                            gal:name "groups" ;
                                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                                            gal:ref "group" ;
                                                                            gal:type "data_meta" ] ;
                                                                    dc:description """
                                """ ] ;
                                                            gal:type "select" ;
                                                            dc:description """
                            """ ] ;
                                                    gal:value "unique" ;
                                                    dc:description """
                        """ ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:help "By default all are included if no selection is made" ;
                                            gal:label "label - Select OTU Labels to include" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "fasta" ;
                                            gal:help "will output a fasta file for each distance level containing only the sequences that are in OTUs shared by the groups specified" ;
                                            gal:label "fasta - Dataset" ;
                                            gal:name "fasta" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.groups" ;
                                            gal:label "group - not required if using a shared file" ;
                                            gal:name "group" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List or shared file" ;
                                            gal:name "otu" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.count_table" ;
                                            gal:help "generated by count.seqs" ;
                                            gal:label "count - a count_table" ;
                                            gal:name "count_in" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "in_listgroup" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "accnos can be used with get.seqs, list.seqs and remove.seqs" ;
                            gal:label "output - select the output format" ;
                            gal:name "output" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "default: (name group bin_number)" ],
                                [ gal:value "accnos" ;
                                    dc:description "accnos (name)" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.sharedseqs" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.accnos" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.accnos" ] ;
                            gal:filter "output == 'accnos'" ;
                            gal:label "${tool.name} on ${on_string}: shared.accnos" ;
                            gal:name "sharedaccnos" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.seqs" ] ;
                            gal:filter "output != 'accnos'" ;
                            gal:label "${tool.name} on ${on_string}: shared.seqs" ;
                            gal:name "sharedseqs" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.shared\\.fasta" ] ;
                            gal:filter "infile['fasta']" ;
                            gal:label "${tool.name} on ${on_string}: shared.fastas" ;
                            gal:name "sharedfastas" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with unique seqs and subset of groups " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "34" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "f4735f56d96d13cd603ca0b11c4bc231" ;
                                            gal:name "0.41.unique.pasture" ] ;
                                    gal:name "sharedseqs" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "selection" ;
                                    gal:value "unique" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "groups" ;
                                    gal:value "pasture" ] ],
                        [ gal: " test with shared seqs and subset of labels " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "e07fe8acfa12d6f61a9efee88d91be54" ;
                                            gal:name "0.41.forest_pasture" ] ;
                                    gal:name "sharedseqs" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.33,0.41" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "selection" ;
                                    gal:value "shared" ] ],
                        [ gal: " test with fasta input and output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "35" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "ceb32c3dc2c99055efdaa6ef6aaed7f0" ;
                                            gal:name "0.41.unique.forest_pasture" ] ;
                                    gal:name "sharedseqs" ;
                                    dc:description """
                """ ],
                                [ gal:count "35" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "fd4265d7c139d2d3acf8e19e6337ee28" ;
                                            gal:name "0.41.unique.forest_pasture" ] ;
                                    gal:name "sharedfastas" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "intype" ;
                                    gal:value "in_listgroup" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with list and group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "35" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "ceb32c3dc2c99055efdaa6ef6aaed7f0" ;
                                            gal:name "0.41.unique.forest_pasture" ] ;
                                    gal:name "sharedseqs" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "intype" ;
                                    gal:value "in_listgroup" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "35" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "e07fe8acfa12d6f61a9efee88d91be54" ;
                                            gal:name "0.41.unique.forest_pasture" ] ;
                                    gal:name "sharedseqs" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "selection" ;
                                    gal:value "shared" ] ],
                        [ gal: " test with accnos output " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "35" ;
                                    gal:element [ gal:ftype "mothur.accnos" ;
                                            gal:md5 "0e0dcf8a91c03e1cc6adbf2593addf20" ;
                                            gal:name "0.41.unique.forest_pasture" ] ;
                                    gal:name "sharedaccnos" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "intype" ;
                                    gal:value "in_shared" ],
                                [ gal:name "output" ;
                                    gal:value "accnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.sharedseqs" ;
            schema:sku 43 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$count' count.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if
#if $qual.add2 == "yes":
    ln -s '$qual.qfile' qual.qfile.dat &&
#end if

echo 'trim.seqs(
    fasta=fasta.dat,
    minlength=$minlength,
    maxlength=$maxlength,
    maxambig=$maxambig,
    maxhomop=$maxhomop,
    keepfirst=$keepfirst,
    removelast=$removelast,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        ldiffs=$oligo.ldiffs,
        sdiffs=$oligo.sdiffs,
        keepforward=$oligo.keepforward,
        allfiles=$oligo.allfiles,
    #end if
    #if $qual.add2 == "yes":
        qfile=qual.qfile.dat,
        qaverage=$qual.qaverage,
        qthreshold=$qual.qthreshold,
        qwindowaverage=$qual.qwindowaverage,
        qwindowsize=$qual.qwindowsize,
        rollaverage=$qual.rollaverage,
        qstepsize=$qual.qstepsize,
        qtrim=$qual.qtrim,
    #end if
    flip=$flip,
    #if $names:
        name=names.dat,
    #end if
    logtransform=$logtransform,
    checkorient=$checkorient,
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## prevent these two files from being gathered into collection
&& mv fasta.trim.fasta fasta.trim
&& mv fasta.scrap.fasta fasta.scrap
    """ ;
            gal:description "Trim sequences - primers, barcodes, quality" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The trim.seqs_ command provides the preprocessing features needed to screen and sort pyrosequences.  The command will enable you to trim off primer sequences and barcodes, use the barcode information to generate a group file and split a fasta file into sub-files, screen sequences based on the qual file that comes from 454 sequencers, cull sequences based on sequence length and the presence of ambiguous bases and get the reverse complement of your sequences. While this analysis is clearly geared towards pyrosequencing collections, it can also be used with traditional Sanger sequences.

.. _trim.seqs: https://www.mothur.org/wiki/Trim.seqs

    """ ;
            gal:id "mothur_trim_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "oligo" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Trim with an oligos file?" ;
                                    gal:name "add" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:label "bdiffs - number of differences to allow in the barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "bdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "tdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "mothur.oligos" ;
                                            gal:label "oligos - barcodes and primers" ;
                                            gal:name "oligos" ;
                                            gal:type "data" ],
                                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "ldiffs" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "allfiles - separate into file per barcode" ;
                                            gal:name "allfiles" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "sdiffs" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "pdiffs - number of differences to allow in the primer (default 0)" ;
                                            gal:min "0" ;
                                            gal:name "pdiffs" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "keepforward - keep the primer" ;
                                            gal:name "keepforward" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "qual" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Trim based on a quality file?" ;
                                    gal:name "add2" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:label "qwindowaverage - remove sequences that have an average base quality below this value over a window (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:name "qwindowaverage" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:format "qual454" ;
                                            gal:label "qfile - 454 quality file" ;
                                            gal:name "qfile" ;
                                            gal:type "data" ],
                                        [ gal:label "qaverage - remove sequences that have an average base quality below this value (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:name "qaverage" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:label "qwindowsize - number of bases in a window. Default=50." ;
                                            gal:min "0" ;
                                            gal:name "qwindowsize" ;
                                            gal:type "integer" ;
                                            gal:value "50" ],
                                        [ gal:label "rollaverage - remove sequences that have an average base quality below this value in a rolling window (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:name "rollaverage" ;
                                            gal:type "integer" ;
                                            gal:value "0" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:label "qtrim - trim sequences below qthreshold and put in trim output, else put in scrap " ;
                                            gal:name "qtrim" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:label "qstepsize - number of bases to move the window over. Default=1." ;
                                            gal:min "0" ;
                                            gal:name "qstepsize" ;
                                            gal:type "integer" ;
                                            gal:value "1" ],
                                        [ gal:label "qthreshold - remove sequences that have any base quality below this value (ignored if < 1)" ;
                                            gal:min "0" ;
                                            gal:name "qthreshold" ;
                                            gal:type "integer" ;
                                            gal:value "0" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "maxambig - Maximum ambiguous bases (default -1, ignored if < 0)" ;
                            gal:min "-1" ;
                            gal:name "maxambig" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "flip - reverse complement the trimmed sequences" ;
                            gal:name "flip" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:help "trims the sequence to the first keepfirst number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements" ;
                            gal:label "keepfirst - ignored if < 0)" ;
                            gal:min "0" ;
                            gal:name "keepfirst" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. If you run trim.seqs with an oligos file that contains group labels, trim.seqs will create a new *.trim.count_table with the group information included. " ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "maxlength - Maximum Sequence Length (default 0, ignored if < 1)" ;
                            gal:min "0" ;
                            gal:name "maxlength" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:label "minlength - Minimum Sequence Length (default 0, ignored if < 1 )" ;
                            gal:min "0" ;
                            gal:name "minlength" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Sequences" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:label "maxhomop - Maximum homopolymers (default 0, ignored if < 1)" ;
                            gal:min "0" ;
                            gal:name "maxhomop" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "If you are running the trim.seqs command with paired barcodes or primers, you can use the checkorient parameter. When checkorient=t and mothur can't find the barcodes and primers, it will search the reverse compliment. " ;
                            gal:label "checkorient - search the reverse complement?" ;
                            gal:name "checkorient" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:help "removes the last removelast number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements" ;
                            gal:label "removelast - ignored if < 0)" ;
                            gal:min "0" ;
                            gal:name "removelast" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequence representative name list" ;
                            gal:name "names" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "allows you to indicate you want the averages for the qwindowaverage, rollaverage and qaverage to be calculated using a logtransform." ;
                            gal:label "logtransform" ;
                            gal:name "logtransform" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Trim.seqs" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.groups" ;
                                    gal:pattern "fasta.*?\\.(?P<designation>.*)\\.groups" ] ;
                            gal:filter "oligo['add'] == 'yes' and oligo['allfiles']" ;
                            gal:label "${tool.name} on ${on_string}: allfiles groups)" ;
                            gal:name "groups_allfiles" ;
                            gal:type "list" ;
                            dc:description """
             """ ],
                        [ gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern "fasta.*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:filter "oligo['add'] == 'yes' and oligo['allfiles']" ;
                            gal:label "${tool.name} on ${on_string}: allfiles fasta" ;
                            gal:name "fasta_allfiles" ;
                            gal:type "list" ;
                            dc:description """
             """ ] ;
                    gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.trim" ;
                            gal:label "${tool.name} on ${on_string}: trim.fasta" ;
                            gal:name "trim_fasta" ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.scrap.count_table" ;
                            gal:label "${tool.name} on ${on_string}: scrap.count" ;
                            gal:name "scrap_count" ;
                            dc:description """
            """ ],
                        [ gal:filter "oligo['add'] == 'yes'" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "fasta.groups" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            gal:name "groups_file" ;
                            dc:description """
            """ ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.trim.count_table" ;
                            gal:label "${tool.name} on ${on_string}: trim.count" ;
                            gal:name "trim_count" ;
                            dc:description """
            """ ],
                        [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.scrap.names" ;
                            gal:label "${tool.name} on ${on_string}: scrap.names" ;
                            gal:name "scrap_names" ;
                            dc:description """
            """ ],
                        [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.trim.names" ;
                            gal:label "${tool.name} on ${on_string}: trim.names" ;
                            gal:name "trim_names" ;
                            dc:description """
            """ ],
                        [ gal:filter "qual['add2'] == 'yes'" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "fasta*.scrap.qual" ;
                            gal:label "${tool.name} on ${on_string}: scrap.qual" ;
                            gal:name "scrap_qual" ;
                            dc:description """
            """ ],
                        [ gal:filter "qual['add2'] == 'yes'" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "fasta*.trim.qual" ;
                            gal:label "${tool.name} on ${on_string}: trim.qual" ;
                            gal:name "trim_qual" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta.scrap" ;
                            gal:label "${tool.name} on ${on_string}: scrap.fasta" ;
                            gal:name "scrap_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with fasta and names " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "4f791b7684662f1f962970af46429e24" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "14dcaa23735a3f545e7014a69b002859" ;
                                    gal:name "trim_fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "1b8c6c47052bb69524ef56ebb764fb8f" ;
                                    gal:name "trim_names" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "80f9252837e4b189f06ec00469b88e85" ;
                                    gal:name "scrap_names" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "names" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "maxhomop" ;
                                    gal:value "4" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with oligos " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "75a8a3ae2d1fe1ff2b860480b84e9bd6" ;
                                    gal:name "trim_fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "c4fd14e70ab7d1c21d238e87624829d7" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "198957282c234e825414e175d926046a" ;
                                    gal:name "groups_file" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "add" ;
                                    gal:value "yes" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "100" ],
                                [ gal:name "bdiffs" ;
                                    gal:value "100" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ] ],
                        [ gal: " test with qfile" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "a4d3ef3d91b4c0146ec84bb7aad3987c" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "22931236d082c2b77811bbf912c1f4b1" ;
                                    gal:name "scrap_qual" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "d02f74acd6d9fb52b04a93869bb79302" ;
                                    gal:name "trim_fasta" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "3d4e2d3c7dd43b90660ab9c923d9eab1" ;
                                    gal:name "trim_qual" ] ;
                            gal:param [ gal:name "maxhomop" ;
                                    gal:value "4" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "Fasting_Example1.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "add2" ;
                                    gal:value "yes" ],
                                [ gal:ftype "qual454" ;
                                    gal:name "qfile" ;
                                    gal:value "Fasting_Example1.qual" ] ],
                        [ gal: " test with oligos and allfiles parameter " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "75a8a3ae2d1fe1ff2b860480b84e9bd6" ;
                                    gal:name "trim_fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "c4fd14e70ab7d1c21d238e87624829d7" ;
                                    gal:name "scrap_fasta" ] ;
                            gal:output_collection [ gal:count "9" ;
                                    gal:element [ gal:ftype "mothur.groups" ;
                                            gal:md5 "445124b06d0c9146ae353631794c8093" ;
                                            gal:name "F003D144" ] ;
                                    gal:name "groups_allfiles" ;
                                    dc:description """
                """ ],
                                [ gal:count "9" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "025ff271ac24ecb898863d7fcbfabf10" ;
                                            gal:name "F003D144" ] ;
                                    gal:name "fasta_allfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "bdiffs" ;
                                    gal:value "100" ],
                                [ gal:name "allfiles" ;
                                    gal:value "true" ],
                                [ gal:name "add" ;
                                    gal:value "yes" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "pdiffs" ;
                                    gal:value "100" ] ],
                        [ gal: " test with count table " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "4f791b7684662f1f962970af46429e24" ;
                                    gal:name "scrap_fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "14dcaa23735a3f545e7014a69b002859" ;
                                    gal:name "trim_fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "04ae9f50c1b6f0d8d7e1ac28f845dd4c" ;
                                    gal:name "scrap_count" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:md5 "836b4d72a8cda3741ef435741783b384" ;
                                    gal:name "trim_count" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "count" ;
                                    gal:value "amazon1.count_table" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "maxhomop" ;
                                    gal:value "4" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "trim.seqs" ;
            schema:sku 31 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$fastq_in' fastq_in.dat &&
ln -s '$count_in' count_in.dat &&
ln -s '$qfile_in' qfile_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$taxonomy_in' taxonomy_in.dat &&

echo 'get.seqs(
    accnos=accnos.dat,
    #if $fasta_in:
        fasta=fasta_in.dat,
    #end if
    #if $fastq_in:
        fastq=fastq_in.dat,
    #end if
    #if $count_in:
        count=count_in.dat,
    #end if
    #if $qfile_in:
        qfile=qfile_in.dat,
    #end if
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $alignreport_in:
        alignreport=alignreport_in.dat,
    #end if
    #if $list_in:
        list=list_in.dat,
    #end if
    #if $taxonomy_in:
        taxonomy=taxonomy_in.dat,
    #end if
    dups=$dups
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Picks sequences by name" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.seqs_ command takes a list of sequence names and either a fasta, name_, group_, list_, align.report_ or taxonomy_ file to generate a new file that contains only the sequences in the list. This command may be used in conjunction with the list.seqs_ command to help screen a sequence collection.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs
.. _get.seqs: https://www.mothur.org/wiki/Get.seqs

v.1.27.0 : Updated to Mothur 1.33, added count and fastq params

    """ ;
            gal:id "mothur_get_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Groups" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Fasta Quality" ;
                            gal:name "qfile_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:label "taxonomy - Taxonomy" ;
                            gal:name "taxonomy_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "list_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fastq" ;
                            gal:help "fastq - allows you to select sequences from your fastq file" ;
                            gal:label "count - a count_table" ;
                            gal:name "fastq_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:name "alignreport_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicates" ;
                            gal:name "dups" ;
                            gal:truevalue "dups" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.accnos" ;
                            gal:label "accnos - Accession Names" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.seqs" ;
            gal:outputs [ gal:data [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.groups" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            gal:name "alignreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "list_in" ;
                            gal:format "mothur.list" ;
                            gal:from_work_dir "list_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.qfile" ;
                            gal:name "qfile_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "count_in" ;
                            gal:format_source "count_in" ;
                            gal:from_work_dir "count_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "fastq_in" ;
                            gal:format_source "fastq_in" ;
                            gal:from_work_dir "fastq_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fastq" ;
                            gal:name "fastq_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "taxonomy_in" ;
                            gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "taxonomy_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.names" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "f9335b6b70dc639e420d33809e51431d" ;
                                    gal:name "fasta_out" ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ],
                                [ gal:name "fasta_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "dups" ;
                                    gal:value "" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "81d026f969e15b8c8701f8dc5f3a6904" ;
                                    gal:name "fastq_out" ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fastq_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ] ;
                            dc:description """
            """ ],
                        [ gal: " test two input files " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "81d026f969e15b8c8701f8dc5f3a6904" ;
                                    gal:name "fastq_out" ],
                                [ gal:md5 "f9335b6b70dc639e420d33809e51431d" ;
                                    gal:name "fasta_out" ] ;
                            gal:param [ gal:name "fasta_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "dups" ;
                                    gal:value "false" ],
                                [ gal:name "fastq_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.fastq" ],
                                [ gal:name "accnos" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "6892dd99850ce9e9f8f15e77b28f57e2" ;
                                    gal:name "count_out" ] ;
                            gal:param [ gal:name "accnos" ;
                                    gal:value "amazon.bad.accnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "count_in" ;
                                    gal:value "amazon.count_table" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.seqs" ;
            schema:sku 111 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&

echo 'pcoa(
    phylip=phylip.dat,
    metric=$metric
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Principal Coordinate Analysis for a distance matrix" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:expand [ gal:macro "citations-ecology" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The pcoa_ command performs principal coordinate analysis on a phylip-formatted_distance_matrix_.

.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _pcoa: https://www.mothur.org/wiki/Pcoa

    """ ;
            gal:id "mothur_pcoa" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Phylip Distance Matrix" ;
                            gal:name "phylip" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "metric - Calculate pearson correlation coefficient" ;
                            gal:name "metric" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Pcoa" ;
            gal:outputs [ gal:data [ gal:format "mothur.axes" ;
                            gal:from_work_dir "phylip*.pcoa.axes" ;
                            gal:label "${tool.name} on ${on_string}: pcoa.axes" ;
                            gal:name "pcoa" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "phylip*.pcoa.loadings" ;
                            gal:label "${tool.name} on ${on_string}: loadings" ;
                            gal:name "loadings" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.pcoa.axes" ;
                                    gal:name "pcoa" ],
                                [ gal:file "amazon.pcoa.loadings" ;
                                    gal:name "loadings" ] ;
                            gal:param [ gal:name "phylip" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "pcoa" ;
            schema:sku 49 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'chimera.bellerophon(
    fasta=fasta.dat,
    filter=$filter,
    correction=$correction,
    #if int($window) > 0:
        window=$window,
    #end if
    #if $increment:
        increment=$increment,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using bellerophon" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1093/bioinformatics/bth226" ] ;
                    gal:macro "citations" ;
                    dc:description """
         """ ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.bellerophon_ command identifies putative chimeras using the bellerophon_ approach.

Advantages of Bellerophon:

 1) You can process all sequences from a PCR-clone library in a single analysis and don't have to inspect outputs for every sequence in the dataset.
 2) The approximate putative breakpoint is calculated using a sliding window (see above) and will help verification of the chimera manually.
 3) A chimeric sequence is not only tested against two (putative) parent sequences but rather is assessed by how well it fits into the complete phylogenetic environment of a multiple sequence alignment. Hence sequences do not become invisible to the program as is the case with CHIMERA_CHECK (see Ref 1 below).
 4) The calculations Bellerophon uses to detect chimeric sequences are computationally relatively cheap and results are quickly calculated for datasets with up 50 sequences (~1 min). Larger datasets take longer - 100 sequences ~30 min, 300 sequences ~8 hours.

Tips for using Bellerophon:

 1) Bellerophon works most efficiently if the parent sequences or non-chimeric sequences closely related to the parent sequences are present in the dataset analyzed. Therefore, as many sequences as possible from the one PCR-clone library should be included in the analysis since the parent sequences of any chimera are most likely to be in that dataset. Addition of non-chimeric outgroup sequences (e.g. from isolates) may help refine an analysis by providing reference points (and a broader phylogenetic context) in the analysis, but be aware of increasing analysis time with bigger datasets.
 2) Bellerophon is compromised by using sequences of different lengths as this can produce artificial skews in distance matrices of fragments of the alignment. Datasets containing sequences of the same length and covering the same portion of the gene should be used (usually not an issue with sequences from a PCR-clone library). The filter will automatically remove sequences too short for the window size, i.e. less than 600 bp for a window size of 300.
 3) If possible multiple window sizes should be used as the number of identified chimeras can vary with the choice of the window size.
 4) Re-running the dataset without the first reported chimeras may identify additional putative chimeras by reducing noise in the analysis. Ideally, the dataset should continue to be re-run removing previously reported chimeras until no chimeras are identified.
 5) Bellerophon should be used in concert with other detection methods such as CHIMERA_CHECK and putatively identified chimeras should always be confirmed by manual inspection of the sequences for signature shifts.


.. _bellerophon: http://comp-bio.anu.edu.au/Bellerophon/doc/doc.html
.. _chimera.bellerophon: https://www.mothur.org/wiki/Chimera.bellerophon

    """ ;
            gal:id "mothur_chimera_bellerophon" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "False" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:argument "correction" ;
                            gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:label "correction - Use the square root of the distances instead of the distance value" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:argument "window" ;
                            gal:help "Default is 25% of the sequence length. Uses default if < 1" ;
                            gal:label "window - Length of sequence you want in each window analyzed" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "increment" ;
                            gal:help "Default is 25, but you may set it up to sequence length minus twice the window." ;
                            gal:label "increment - Increment for window slide on each iteration" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "25" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.bellerophon" ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta.bellerophon.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: bellerophon.chimeras" ;
                            gal:name "bellerophon.chimeras" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.bellerophon.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bellerophon.accnos" ;
                            gal:name "bellerophon.accnos" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " don't use window if negative " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "txt" ;
                                    gal:md5 "435ff11d15d6c117e29747ab8ac36c75" ;
                                    gal:name "bellerophon.chimeras" ],
                                [ gal: " outputs some results to the log file " ;
                                    gal:assert_contents [ gal:has_text [ gal:text "Median" ],
                                                [ gal:text "Maximum" ],
                                                [ gal:text "Minimum" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "logfile" ;
                                    dc:description " " ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.bellerophon.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "bellerophon.accnos" ] ;
                            gal:param [ gal:name "window" ;
                                    gal:value "-1" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.bellerophon" ;
            schema:sku 59 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$accnos' accnos.dat &&
ln -s '$input.dist' input.dist.dat &&

echo 'get.dists(
    accnos=accnos.dat,
    #if $input.source == "phylip":
        phylip=input.dist.dat
    #else
        column=input.dist.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "selects distances from a phylip or column file" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.dists_ command selects distances from a phylip or column file related to groups or sequences listed in an accnos file.

.. _get.dists: https://www.mothur.org/wiki/Get.dists

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_dists" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Select input format" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:name "accnos" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.dists" ;
            gal:outputs [ gal:data [ gal:format_source "dist" ;
                            gal:from_work_dir "input.dist*.pick.dat" ;
                            gal:label "${tool.name} on ${on_string}: pick.dist" ;
                            gal:name "pick_dist" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.square.dist" ;
                                    gal:md5 "d853cca7b67723e889a563420f6ccc13" ;
                                    gal:name "pick_dist" ] ;
                            gal:param [ gal:ftype "mothur.accnos" ;
                                    gal:name "accnos" ;
                                    gal:value "amazon.bad.accnos" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:name "dist" ;
                                    gal:value "98_sq_phylip_amazon.dist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.dists" ;
            schema:sku 104 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$names' names.dat &&

echo 'deunique.tree(
    tree=tree.dat,
    name=names.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Reinsert the redundant sequence identiers back into a unique tree." ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The deunique.tree_ command is the reinserts the redundant sequence identiers back into a unique tree using a name_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _deunique.tree: https://www.mothur.org/wiki/Deunique.tree

v1.21.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_deunique_tree" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "names - Sequences Name reference" ;
                            gal:name "names" ;
                            gal:type "data" ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Sequences to filter" ;
                            gal:name "tree" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Deunique.tree" ;
            gal:outputs [ gal:data [ gal:format_source "tree" ;
                            gal:from_work_dir "tree*.deunique.tre" ;
                            gal:label "${tool.name} on ${on_string}: deunique.tre" ;
                            gal:name "out_tree" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "treetest.deunique.tre" ;
                                    gal:name "out_tree" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "tree" ;
                                    gal:value "treetest.tre" ],
                                [ gal:name "names" ;
                                    gal:value "treetest.names" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "deunique.tree" ;
            schema:sku 60 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$project' project.dat &&
ln -s '$sff' sff.dat &&
ln -s '$oligos' oligos.dat &&
ln -s '$mimark' mimark.dat &&
ln -s '$fastq' fastq.dat &&

echo 'make.sra(
    project=project.dat,
    sff=sff.dat,
    oligos=oligos.dat,
    mimark=mimark.dat,
    #if $fastq:
        fastq=fastq.dat,
    #end if
    bdiffs=$bdiffs,
    pdiffs=$pdiffs,
    tdiffs=$tdiffs,
    ldiffs=$ldiffs,
    sdiffs=$sdiffs,
    checkorient=$checkorient,
    orientation=$orientation,
    platform=$platform,
    instrument=$instrument,
    libstrategy=$libstrategy,
    libselection=$libselection,
    libsource=$libsource,
    datatype=$datatype,
    trim=$trim,
    includescrap=$includescrap
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "creates the necessary files for a NCBI submission" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.sra_ creates the necessary files for a NCBI submission.

.. _make.sra: https://www.mothur.org/wiki/Make.sra

    """ ;
            gal:id "mothur_make_sra" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "tabular" ;
                            gal:label "Project file" ;
                            gal:name "project" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:help "will trim to the clipQualLeft and clipQualRight values in sff file" ;
                            gal:label "Trim sequences and quality scores?" ;
                            gal:name "trim" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "platform - specify platform you are using" ;
                            gal:name "platform" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "_LS454" ;
                                    dc:description "454 (_LS454)" ],
                                [ gal:value "ION_TORRENT" ;
                                    dc:description "Ion Torrent (ION_TORRENT)" ],
                                [ gal:value "ILLUMINA" ;
                                    dc:description "Illumina (ILLUMINA)" ],
                                [ gal:value "PACBIO_SMRT" ;
                                    dc:description "PacBio (PACBIO_SMRT)" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libsource - specify library source" ;
                            gal:name "libsource" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "METAGENOMIC" ;
                                    dc:description "METAGENOMIC" ],
                                [ gal:value "VIRAL_RNA" ;
                                    dc:description "VIRAL_RNA" ],
                                [ gal:value "SYNTHETIC" ;
                                    dc:description "SYNTHETIC" ],
                                [ gal:value "TRANSCRIPTOMIC" ;
                                    dc:description "TRANSCRIPTOMIC" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ],
                                [ gal:value "GENOMIC" ;
                                    dc:description "GENOMIC" ],
                                [ gal:value "METATRANSCRIPTOMIC" ;
                                    dc:description "METATRANSCRIPTOMIC" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "pdiffs - number of differences to allow in the primer (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:name "pdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:label "orientation - specify the sequence orientation" ;
                            gal:name "orientation" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "forward" ;
                                    dc:description "forward" ],
                                [ gal:value "reverse" ;
                                    dc:description "reverse" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "sdiffs - total number of differences to allow in spacer sequence (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:name "sdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:label "ldiffs - total number of differences to allow in linker sequence (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:name "ldiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "instrument - specify instrument" ;
                            gal:name "instrument" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "454_GS" ;
                                    dc:description "454_GS" ],
                                [ gal:value "Illumina_HiSeq_1000" ;
                                    dc:description "Illumina_HiSeq_1000" ],
                                [ gal:value "454_GS_FLX_Titanium" ;
                                    dc:description "454_GS_FLX_Titanium" ],
                                [ gal:value "unspecified" ;
                                    dc:description "unspecified" ],
                                [ gal:value "Illumina_Genome_Analyzer_IIx" ;
                                    dc:description "Illumina_Genome_Analyzer_IIx" ],
                                [ gal:value "454_GS_FLX" ;
                                    dc:description "454_GS_FLX" ],
                                [ gal:value "454_GS_Junior" ;
                                    dc:description "454_GS_Junior" ],
                                [ gal:value "Illumina_Genome_Analyzer_II" ;
                                    dc:description "Illumina_Genome_Analyzer_II" ],
                                [ gal:value "Ion_Torrent_PGM" ;
                                    dc:description "Ion_Torrent_PGM" ],
                                [ gal:value "Illumina_MiSeq" ;
                                    dc:description "Illumina_MiSeq" ],
                                [ gal:value "Illumina_Genome_Analyzer" ;
                                    dc:description "Illumina_Genome_Analyzer" ],
                                [ gal:value "PacBio_RS" ;
                                    dc:description "PacBio_RS" ],
                                [ gal:value "454_GS_20" ;
                                    dc:description "454_GS_20" ],
                                [ gal:value "Illumina_HiSeq_2000" ;
                                    dc:description "Illumina_HiSeq_2000" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "sff" ;
                            gal:label "sff - provide the original sff file" ;
                            gal:name "sff" ;
                            gal:type "data" ],
                        [ gal:format "fastq" ;
                            gal:label "fastq - provide the original fastq file" ;
                            gal:name "fastq" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "bdiffs - number of differences to allow in the barcode (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:name "bdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "datatype - specify datatype" ;
                            gal:name "datatype" ;
                            gal:option [ gal:value "EXOME" ;
                                    dc:description "EXOME" ],
                                [ gal:value "TARGETED_LOCI" ;
                                    dc:description "TARGETED_LOCI" ],
                                [ gal:value "VARIATION" ;
                                    dc:description "VARIATION" ],
                                [ gal:value "PROTEOMIC" ;
                                    dc:description "PROTEOMIC" ],
                                [ gal:value "EPIGENOMICS" ;
                                    dc:description "EPIGENOMICS" ],
                                [ gal:selected "true" ;
                                    gal:value "METAGENOME" ;
                                    dc:description "METAGENOME" ],
                                [ gal:value "TRANSCRIPTOME" ;
                                    dc:description "TRANSCRIPTOME" ],
                                [ gal:value "RANDOM_SURVEY" ;
                                    dc:description "RANDOM_SURVEY" ],
                                [ gal:value "CLONE_ENDS" ;
                                    dc:description "CLONE_ENDS" ],
                                [ gal:value "ASSEMBLY" ;
                                    dc:description "ASSEMBLY" ],
                                [ gal:value "MAP" ;
                                    dc:description "MAP" ],
                                [ gal:value "PHENOTYPE" ;
                                    dc:description "PHENOTYPE" ],
                                [ gal:value "GENOTYPE" ;
                                    dc:description "GENOTYPE" ],
                                [ gal:value "METAGENOMIC_ASSEMBLY" ;
                                    dc:description "METAGENOMIC_ASSEMBLY" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ],
                                [ gal:value "GENOME_SEQUENCING" ;
                                    dc:description "GENOME_SEQUENCING" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libstrategy - specify library strategy" ;
                            gal:name "libstrategy" ;
                            gal:option [ gal:value "POOLCLONE" ;
                                    dc:description "POOLCLONE" ],
                                [ gal:value "DNase-Hypersensitivity" ;
                                    dc:description "DNase-Hypersensitivity" ],
                                [ gal:value "FL-cDNA" ;
                                    dc:description "FL-cDNA" ],
                                [ gal:value "MNase-Seq" ;
                                    dc:description "MNase-Seq" ],
                                [ gal:value "WGA" ;
                                    dc:description "WGA" ],
                                [ gal:selected "true" ;
                                    gal:value "AMPLICON" ;
                                    dc:description "AMPLICON" ],
                                [ gal:value "EST" ;
                                    dc:description "EST" ],
                                [ gal:value "Tn-Seq" ;
                                    dc:description "Tn-Seq" ],
                                [ gal:value "miRNA-Se" ;
                                    dc:description "miRNA-Se" ],
                                [ gal:value "OTHER" ;
                                    dc:description "OTHER" ],
                                [ gal:value "MRE-Seq" ;
                                    dc:description "MRE-Seq" ],
                                [ gal:value "MeDIP-Seq" ;
                                    dc:description "MeDIP-Seq" ],
                                [ gal:value "CTS" ;
                                    dc:description "CTS" ],
                                [ gal:value "CLONE" ;
                                    dc:description "CLONE" ],
                                [ gal:value "Bisulfite-Seq" ;
                                    dc:description "Bisulfite-Seq" ],
                                [ gal:value "RNA-Seq" ;
                                    dc:description "RNA-Seq" ],
                                [ gal:value "FINISHING" ;
                                    dc:description "FINISHING" ],
                                [ gal:value "CLONEEND" ;
                                    dc:description "CLONEEND" ],
                                [ gal:value "WGS" ;
                                    dc:description "WGS" ],
                                [ gal:value "WCS" ;
                                    dc:description "WCS" ],
                                [ gal:value "ChIP-Seq" ;
                                    dc:description "ChIP-Seq" ],
                                [ gal:value "MBD-Seq" ;
                                    dc:description "MBD-Seq" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "This is a controlled vocabulary section in the XML file that will be generated" ;
                            gal:label "libselection - specify library selection" ;
                            gal:name "libselection" ;
                            gal:option [ gal:value "RANDOM_PCR" ;
                                    dc:description "RANDOM_PCR" ],
                                [ gal:value "cDNA" ;
                                    dc:description "cDNA" ],
                                [ gal:value "RANDOM" ;
                                    dc:description "RANDOM" ],
                                [ gal:value "CF-S" ;
                                    dc:description "CF-S" ],
                                [ gal:value "HMPR" ;
                                    dc:description "HMPR" ],
                                [ gal:value "MBD2_protein_methyl-CpG_binding_domain" ;
                                    dc:description "MBD2_protein_methyl-CpG_binding_domain" ],
                                [ gal:value "RACE" ;
                                    dc:description "RACE" ],
                                [ gal:selected "true" ;
                                    gal:value "PCR" ;
                                    dc:description "PCR" ],
                                [ gal:value "Hybrid_Selection" ;
                                    dc:description "Hybrid_Selection" ],
                                [ gal:value "Padlock_probes_capture_method" ;
                                    dc:description "Padlock_probes_capture_method" ],
                                [ gal:value "ChIP" ;
                                    dc:description "ChIP" ],
                                [ gal:value "Restriction_Digest" ;
                                    dc:description "Restriction_Digest" ],
                                [ gal:value "CF-H" ;
                                    dc:description "CF-H" ],
                                [ gal:value "MNase" ;
                                    dc:description "MNase" ],
                                [ gal:value "size_fractionation" ;
                                    dc:description "size_fractionation" ],
                                [ gal:value "5-methylcytidine_antibody" ;
                                    dc:description "5-methylcytidine_antibody" ],
                                [ gal:value "CAGE" ;
                                    dc:description "CAGE" ],
                                [ gal:value "RT-PCR" ;
                                    dc:description "RT-PCR" ],
                                [ gal:value "CF-T" ;
                                    dc:description "CF-T" ],
                                [ gal:value "MDA" ;
                                    dc:description "MDA" ],
                                [ gal:value "MF" ;
                                    dc:description "MF" ],
                                [ gal:value "Reduced_Representation" ;
                                    dc:description "Reduced_Representation" ],
                                [ gal:value "MSLL" ;
                                    dc:description "MSLL" ],
                                [ gal:value "CF-M" ;
                                    dc:description "CF-M" ],
                                [ gal:value "other" ;
                                    dc:description "other" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.oligos" ;
                            gal:label "oligos - provide an oligos file to parse your sff or fastq file by. It is required and must contain barcodes and primers" ;
                            gal:name "oligos" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "checkorient - will check for the reverse compliment of the barcode or primer in the sequence. The default is false." ;
                            gal:name "checkorient" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "False" ;
                            gal:label "Include scrapped sequences in your submission?" ;
                            gal:name "includescrap" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ],
                        [ gal:format "txt" ;
                            gal:label "mimarks file - you can create the template for this file using the get.mimarkspackage command" ;
                            gal:name "mimark" ;
                            gal:type "data" ],
                        [ gal:label "tdiffs - total number of differences to allow in primer and barcode (must be > 0; default 0)" ;
                            gal:min "0" ;
                            gal:name "tdiffs" ;
                            gal:type "integer" ;
                            gal:value "0" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.sra" ;
            gal:outputs [ gal:data [ gal:format "qual" ;
                            gal:from_work_dir "sff*.qual" ;
                            gal:label "${tool.name} on ${on_string}: qual" ;
                            gal:name "qual_out" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:from_work_dir "sff*.flow" ;
                            gal:label "${tool.name} on ${on_string}: flow" ;
                            gal:name "flow_out" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "sff*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: fasta" ;
                            gal:name "fasta_out" ],
                        [ gal:format "xml" ;
                            gal:from_work_dir "submission.xml" ;
                            gal:label "${tool.name} on ${on_string}: submission.xml" ;
                            gal:name "submission_xml" ],
                        [ gal:format "sff" ;
                            gal:from_work_dir "sff*.scrap.sff" ;
                            gal:label "${tool.name} on ${on_string}: scrap sff" ;
                            gal:name "scrap_sff" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defauts " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "BioProject" ],
                                                [ gal:text "Attribute" ],
                                                [ gal:text "Submission" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "xml" ;
                                    gal:name "submission_xml" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "212fa15e1ed077cecb65ee87f17ef2e1" ;
                                    gal:name "fasta_out" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "FLP3FBN01ELBSX" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "sff" ;
                                    gal:name "scrap_sff" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "qual" ;
                                    gal:md5 "ffcc4831369139055e1b8e9add9a59c0" ;
                                    gal:name "qual_out" ],
                                [ gal:ftype "mothur.sff.flow" ;
                                    gal:md5 "34b17477f98ab19c1ff755a61848d968" ;
                                    gal:name "flow_out" ] ;
                            gal:param [ gal:ftype "tabular" ;
                                    gal:name "mimark" ;
                                    gal:value "biosample.tsv" ],
                                [ gal:ftype "sff" ;
                                    gal:name "sff" ;
                                    gal:value "Fasting_Example1.sff" ],
                                [ gal:ftype "tabular" ;
                                    gal:name "project" ;
                                    gal:value "makesra.project" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.oligos" ;
                                    gal:name "oligos" ;
                                    gal:value "GQY1XT001.oligos" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.sra" ;
            schema:sku 24 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'list.otulabels(
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat
    #else
        list=otu.dat
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Lists otu labels from shared or relabund file" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The list.otulabels_ command lists otu labels from shared_ or relabund_ file. This list can be used especially with subsampled datasets when used with output from classify.otu_, otu.association_, or corr.axes_ to select specific otus using the get.otus_ or remove.otus_ commands

.. _list.otulabels: https://www.mothur.org/wiki/List.otulabels
.. _classify.otu: https://www.mothur.org/wiki/Classify.otu
.. _otu.association: https://www.mothur.org/wiki/Otu.association
.. _corr.axes: https://www.mothur.org/wiki/Corr.axes
.. _get.otus: https://www.mothur.org/wiki/Get.otus
.. _remove.otus: https://www.mothur.org/wiki/Remove.otus
.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund

v.1.27.0: Updated to mothur 1.33, added list file for otu

    """ ;
            gal:id "mothur_list_otulabels" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared,mothur.relabund,mothur.list" ;
                            gal:label "list or shared or relabund - OTU List or Shared or Relabund" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:label "groups - Pairwise comparision groups" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "List.otulabels" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.otulabels" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otulabels" ] ;
                            gal:label "${tool.name} on ${on_string}: otulabels" ;
                            gal:name "otulabels" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.otulabels" ;
                                            gal:md5 "8a4d85496fdcfdf99337129989350e7e" ;
                                            gal:name "unique" ] ;
                                    gal:name "otulabels" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "infile" ;
                                    gal:value "otulist" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.otulabels" ;
                                            gal:md5 "c901cebfbc87559f1667546111408a22" ;
                                            gal:name "unique" ],
                                        [ gal:ftype "mothur.otulabels" ;
                                            gal:md5 "0e0dcf8a91c03e1cc6adbf2593addf20" ;
                                            gal:name "0.55" ] ;
                                    gal:name "otulabels" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "infile" ;
                                    gal:value "otulist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "list.otulabels" ;
            schema:sku 126 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'filter.shared(
    shared=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $label:
        groups=${ str($groups).replace(",","-") },
    #end if
    minabund=$minabund,
    minpercent=$minpercent,
    rarepercent=$rarepercent,
    keepties=$keepties,
    minnumsamples=$minnumsamples,
    minpercentsamples=$minpercentsamples,
    mintotal=$mintotal,
    makerare=$makerare
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "remove OTUs based on various critieria" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The filter.shared_ is used to remove OTUs based on various critieria.

.. _filter.shared: https://www.mothur.org/wiki/Filter.shared

    """ ;
            gal:id "mothur_filter_shared" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "label" ;
                            gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "If none selected, all labels will be output" ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "mintotal" ;
                            gal:help "If abundance across all samples falls below the minimum, the OTU is removed" ;
                            gal:label "mintotal - indicate the minimum abundance required for a given OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "minpercent" ;
                            gal:help "For example, if the OTUs total abundance across all samples is 8, and the total abundance across all OTUs is 1000, and minpercent=1.             The OTU's relative abundance is 0.008, the minimum is 0.01, so the OTU will be removed" ;
                            gal:label "minpercent - indicate the minimum relative abundance of an OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "rarepercent" ;
                            gal:help "The OTUs chosen to be removed are the rarest.  For example if you have 1000 OTUs, rarepercent=20 would remove the 200 OTUs with the lowest abundance" ;
                            gal:label "rarepercent - indicate the percentage of otus to remove" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "minnumsamples" ;
                            gal:help "If the number of samples present falls below the minimum, the OTU is removed" ;
                            gal:label "minnumsamples - indicate the minimum number of samples present in an OTU" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "groups" ;
                            gal:label "Select groups for to include in this grouping" ;
                            gal:multiple "true" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "makerare" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "This will preserve the number of reads in your dataset" ;
                            gal:label "makerare - indicate you want the abundances of any removed OTUs to be saved and a new rare OTU created with its abundances equal to the sum of the OTUs removed" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "minpercentsamples" ;
                            gal:help "For example, if the total number of samples is 10, the number present is 3, and the minpercentsamples=50. The OTU's precent of samples is 0.333,             the minimum is 0.50, so the OTU will be removed (Default=0)" ;
                            gal:label "minpercentsamples - indicate the minimum percent of sample present in an OTU" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "minabund" ;
                            gal:help "If any samples abundance falls below the minimum, the OTU is removed" ;
                            gal:label "minabund - indicate the minimum abundance required for each sample in a given OTU" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "shared - specify your shared file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:argument "keepties" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:help "For example if you have 10 OTUs, rarepercent=20 abundances of 20, 18, 15, 15, 10, 5, 3, 3, 3, 1. keepties=t, would remove the 10th OTU,             but keep the 9th because its abundance ties the 8th OTU. keepties=f would remove OTUs 9 and 10" ;
                            gal:label "keepties - indicate you want to keep the OTUs with the same abundance as the first 'not rare' OTU" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Filter.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.shared" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.filter\\.dat" ] ;
                            gal:label "${tool.name} on ${on_string}: filter.shared" ;
                            gal:name "filter_shared" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with label and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "3" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                                    gal:has_text [ gal:text "0.29" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.shared" ;
                                            gal:name "0.29" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "filter_shared" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.05,0.29,0.33" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "minabund" ;
                                    gal:value "1" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:assert_contents [ gal:expand [ gal:macro "test-shared-format" ] ;
                                                    gal:has_text [ gal:text "0.03" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:ftype "mothur.shared" ;
                                            gal:name "0.03" ;
                                            dc:description """
                    """ ] ;
                                    gal:name "filter_shared" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "esophagus.fn.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "filter.shared" ;
            schema:sku 75 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$group' group.dat &&

echo 'shhh.seqs(
    fasta=fasta.dat,
    name=name.dat,
    #if $group:
        group=group.dat,
    #end if
    sigma=$sigma,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Denoise program (Quince SeqNoise)" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1186/1471-2105-12-38" ],
                        [ gal:type "doi" ;
                            dc:description "10.1371/journal.pone.0027310" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The shhh.seqs_ command is a mothur-based rewrite of Chris Quince's sequence denoting program, SeqNoise.  Schloss prefers pre.cluster for this operation.

.. _shhh.seqs: https://www.mothur.org/wiki/Shhh.seqs

    """ ;
            gal:id "mothur_shhh_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "default .01" ;
                            gal:label "sigma" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:name "sigma" ;
                            gal:type "float" ;
                            gal:value ".01" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Sequences Name reference" ;
                            gal:name "group" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:help "" ;
                            gal:label "fasta - Sequences" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Shhh.seqs" ;
            gal:outputs [ gal:data [ gal:format "txt" ;
                            gal:from_work_dir "fasta*.shhh_seqs.map" ;
                            gal:label "${tool.name} on ${on_string}: shhh.map" ;
                            gal:name "shhh_map" ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.shhh_seqs.fasta" ;
                            gal:label "${tool.name} on ${on_string}: shhh.fasta" ;
                            gal:name "shhh_fasta" ],
                        [ gal:format "mothur.names" ;
                            gal:from_work_dir "fasta*.shhh_seqs.names" ;
                            gal:label "${tool.name} on ${on_string}: shhh.names" ;
                            gal:name "shhh_names" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "txt" ;
                                    gal:md5 "0bcfe53ec754878ca5f6a126114671e1" ;
                                    gal:name "shhh_map" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:md5 "0169152fa33b588cabf3c3b932cc6018" ;
                                    gal:name "shhh_fasta" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "f3bc939b899d91f7cf3b822c5a822805" ;
                                    gal:name "shhh_names" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "name" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head.names" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "shhh.seqs" ;
            schema:sku 10 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&
ln -s '$conservation' conservation.dat &&
ln -s '$quantile' quantile.dat &&
#if $mask_cond.source2 == "history":
    ln -s '$mask_cond.mask' mask.dat &&
#end if

echo 'chimera.pintail(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    filter=$filter,
    #if $mask_cond.source2 == "default":
        mask=default,
    #elif $mask_cond.source2 == "history":
        mask=mask.dat,
    #end if
    #if $conservation:
        conservation=conservation.dat,
    #end if
    #if $quantile:
        quantile=quantile.dat,
    #end if
    #if int($window) > 0:
        window=$window,
    #end if
    #if int($increment) > 0:
        increment=$increment,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using pintail" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.71.12.7724-7736.2005" ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.00556-06" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.pintail_ command identifies putative chimeras using the pintail approach.  It looks at the variation between the expected differences and the observed differences in the query sequence over several windows.

This method was written using the algorithms described in the paper_ "At Least 1 in 20 16S rRNA Sequence Records Currently Held in the Public Repositories is Estimated To Contain Substantial Anomalies" by Kevin E. Ashelford 1, Nadia A. Chuzhanova 3, John C. Fry 1, Antonia J. Jones 2 and Andrew J. Weightman 1.

The Pintail algorithm is a technique for determining whether a 16S rDNA sequence is anomalous.  It is based on the idea that the extent of local base differences between two aligned 16S rDNA sequences should be roughly the same along the length of the alignment (having allowed for the underlying pattern of hypervariable and conserved regions known to exist within the 16S rRNA gene).  In other words, evolutionary distance between two reliable sequences should be constant along the length of the gene.

In contrast, if an error-free sequence is compared with an anomalous sequence, evolutionary distance along the alignment is unlikely to be constant, especially if the anomaly in question is a chimera and formed from phylogenetically different parental sequences.

The Pintail algorithm is designed to detect and quantify such local variations and in doing so generates the Deviation from Expectation (DE) statistic.  The higher the DE value, the greater the likelihood that the query is anomalous.

The algorithm works as follows

The sequence to be checked (the query) is first globally aligned with a phylogenetically similar sequence known to be error-free (the subject).  At regular intervals along the resulting alignment, the local evolutionary distance between query and subject is estimated by recording percentage base mismatches within a sampling window of fixed length.  The resulting array of percentages (observed percentage differences) reflects variations in evolutionary distance between the query and subject along the length of the 16S rRNA gene.  Subtracting observed percentage differences from an equivalent array of expected percentage differences (predicted values for error-free sequences), we obtain a set of deviations, the standard deviation of which (Deviation from Expectation, DE) summarises the variation between observed and expected datasets.  The greater the DE value, the greater the disparity there is between observed and expected percentage differences, and the more likely it is that the query sequence is anomalous.


.. _paper: http://www.ncbi.nlm.nih.gov/pubmed/16332745
.. _chimera.pintail: https://www.mothur.org/wiki/Chimera.pintail

    """ ;
            gal:id "mothur_chimera_pintail" ;
            gal:inputs [ gal:conditional [ gal:name "alignment" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "mask_cond" ;
                            gal:param [ gal:label "Mask option" ;
                                    gal:name "source2" ;
                                    gal:option [ gal:value "" ;
                                            dc:description "None" ],
                                        [ gal:value "history" ;
                                            dc:description "From your history" ],
                                        [ gal:value "default" ;
                                            dc:description "default ecoli mask" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "mask" ;
                                            gal:format "mothur.filter" ;
                                            gal:label "Mask for the template file" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ;
                                    dc:description """
                """ ],
                                [ gal:value "" ],
                                [ gal:value "default" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "conservation" ;
                            gal:format "mothur.freq" ;
                            gal:help "a file containing the frequency information for your template file to increase speed. Mothur will generate this for you but it takes a long time." ;
                            gal:label "conservation - Template Conserved frequencies" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "quantile" ;
                            gal:format "mothur.quan" ;
                            gal:help " file containing the quantiles information for your template file to increase speed. Mothur can generate this for you but it takes a VERY long time.             Note that when you use the filter, mask or mask and filter you need to select the appropriate quantile file. The filter parameter makes the quantile file             generated specific to the query set you are analyzing." ;
                            gal:label "quantile - Template quantile information" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "window" ;
                            gal:help "Default is set to 300. Note, changing the window size will require new quantile files to be made." ;
                            gal:label "window - Length of sequence you want in each window analyzed (uses default if < 1)" ;
                            gal:type "integer" ;
                            gal:value "300" ],
                        [ gal:argument "increment" ;
                            gal:help "Default is 25. Note, changing the increment will require new quantile files to be made." ;
                            gal:label "increment - Increment for window slide on each iteration (uses default if < 1)" ;
                            gal:type "integer" ;
                            gal:value "25" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.pintail" ;
            gal:outputs [ gal:data [ gal:filter "quantile == None" ;
                            gal:format "mothur.quan" ;
                            gal:from_work_dir "*.quan" ;
                            gal:label "${tool.name} on ${on_string}: pintail.quan" ;
                            gal:name "out_quantile" ;
                            dc:description """
            """ ],
                        [ gal:filter "conservation == None" ;
                            gal:format "mothur.freq" ;
                            gal:from_work_dir "alignment.reference.freq" ;
                            gal:label "${tool.name} on ${on_string}: pintail.freq" ;
                            gal:name "out_freq" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*pintail.accnos" ;
                            gal:label "${tool.name} on ${on_string}: pintail.accnos" ;
                            gal:name "out_accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*pintail.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: pintail.chimeras" ;
                            gal:name "pintail.chimeras" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.pintail.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "out_accnos" ],
                                [ gal:ftype "txt" ;
                                    gal:md5 "644fe23ee459a76de7b225e530361865" ;
                                    gal:name "pintail.chimeras" ] ;
                            gal:param [ gal:name "window" ;
                                    gal:value "200" ],
                                [ gal:name "quantile" ;
                                    gal:value "HMP_MOCK.v35.pintail.quan" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.freq" ;
                                    gal:md5 "2d2c4066c5de06c8d1d78ee3784daa3d" ;
                                    gal:name "out_freq" ],
                                [ gal:ftype "mothur.quan" ;
                                    gal:md5 "74372024214704010aed4f9c8258f77b" ;
                                    gal:name "out_quantile" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "Expected" ],
                                                [ gal:text "Observed" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "pintail.chimeras" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "window" ;
                                    gal:value "200" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source2" ;
                                    gal:value "default" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.pintail" ;
            schema:sku 123 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$qfile' qfile.dat &&

echo 'make.fastq(
    fasta=fasta.dat,
    qfile=qfile.dat
    #if $chooseformat.use == "yes":
        ,format=${chooseformat.format}
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Convert fasta and quality to fastq" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The make.fastq_ command reads a fasta file and quality file and creates a fastq.


.. _make.fastq: https://www.mothur.org/wiki/Make.fastq

    """ ;
            gal:id "mothur_make_fastq" ;
            gal:inputs [ gal:conditional [ gal:name "chooseformat" ;
                            gal:param [ gal:help "If none selected, this tool will keep the format of input qfile" ;
                                    gal:label "Choose quality format for your output sequences are" ;
                                    gal:name "use" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:multiple "true" ;
                                            gal:name "format" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "sanger" ;
                                                    dc:description "sanger" ],
                                                [ gal:value "illumina" ;
                                                    dc:description "Illumina" ],
                                                [ gal:value "illumina1.8+" ;
                                                    dc:description "Illumina 1.8+" ] ;
                                            gal:optional "true" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "qual454,qualillumina,qualsolid,qual" ;
                            gal:label "qfile - Sequence Quality file" ;
                            gal:name "qfile" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequence file" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Make.fastq" ;
            gal:outputs [ gal:data [ gal:change_format [ gal: " if set, chooseformat.format param should override qfile.ext format " ;
                                    gal:when [ gal:format "fastqillumina" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qualillumina" ],
                                        [ gal:format "fastqcssanger" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qualsolid" ],
                                        [ gal:format "fastqsanger" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "sanger" ],
                                        [ gal:format "fastqsanger" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "illumina1.8+" ],
                                        [ gal:format "fastqsanger" ;
                                            gal:input "qfile.ext" ;
                                            gal:value "qual454" ],
                                        [ gal:format "fastqillumina" ;
                                            gal:input "chooseformat.format" ;
                                            gal:value "illumina" ] ] ;
                            gal:format "fasta" ;
                            gal:from_work_dir "fasta*.fastq" ;
                            gal:label "${tool.name} on ${on_string}: fastq" ;
                            gal:name "fastq" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with quality score format conversion " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fastqillumina" ;
                                    gal:name "fastq" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "format" ;
                                    gal:value "illumina" ],
                                [ gal:ftype "qual454" ;
                                    gal:name "qfile" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ] ],
                        [ gal: " test defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fastq-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fastqsanger" ;
                                    gal:name "fastq" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "qual454" ;
                                    gal:name "qfile" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "make.fastq" ;
            schema:sku 5 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.dist' input_dist.dat &&
#if not $input.source == "shared":
    ln -s '$input.name' input_name.dat &&
#end if

echo 'tree.shared(
    #if $input.source == "shared":
        shared=input_dist.dat,
        #if $input.groups:
            groups=${ str($input.groups).replace(",","-") },
        #end if
        #if $input.label:
            label=${ str($input.label).replace(",","-") },
        #end if
        #if $input.subsampling.use == "yes":
            #if $input.subsampling.subsample:
                subsample=$input.subsampling.subsample,
            #else
                subsample=T,
            #end if
            #if $input.subsampling.iters:
                iters="$input.subsampling.iters,
            #end if
        #end if
    #elif $input.source == "column":
        column=input_dist.dat,
        name=input_name.dat,
    #elif $input.source == "phylip":
        phylip=input_dist.dat,
        #if $input.name:
            name=input_name.dat,
        #end if
    #else
        count=input_name.dat,
    #end if
    #if $calc:
        calc=${ str($calc).replace(",","-") },
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a newick tree for dissimilarity among groups" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The tree.shared_ command will generate a newick-formatted tree file that describes the dissimilarity (1-similarity) among multiple groups.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _tree.shared: https://www.mothur.org/wiki/Tree.shared

    """ ;
            gal:id "mothur_tree_shared" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Select input format" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "column" ;
                                            dc:description "Pairwise Column Distance Matrix" ],
                                        [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "count" ;
                                            dc:description "Count file" ],
                                        [ gal:value "shared" ;
                                            dc:description "OTU Shared" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:name "name" ;
                                            gal:optional "true" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ],
                                [ gal:conditional [ gal:name "subsampling" ;
                                            gal:param [ gal:label "subsample" ;
                                                    gal:name "use" ;
                                                    gal:option [ gal:value "yes" ;
                                                            dc:description "yes" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "no" ;
                                                            dc:description "no" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:label "iters - Number of iterations to try (default 1000)" ;
                                                            gal:min "1" ;
                                                            gal:name "iters" ;
                                                            gal:optional "true" ;
                                                            gal:type "integer" ;
                                                            gal:value "" ],
                                                        [ gal:help "Should not exceed the number of sequences in any group" ;
                                                            gal:label "subsample (defaults to the size of the smallest group)" ;
                                                            gal:min "0" ;
                                                            gal:name "subsample" ;
                                                            gal:optional "true" ;
                                                            gal:type "integer" ;
                                                            gal:value "" ] ;
                                                    gal:value "yes" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "no" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:label "label - OTU Labels" ;
                                            gal:multiple "true" ;
                                            gal:name "label" ;
                                            gal:options [ gal:filter [ gal:key "labels" ;
                                                            gal:ref "dist" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:label "groups - Groups to consider" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "dist" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - OTU Shared" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "shared" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.names" ;
                                            gal:label "name - Sequences Name reference" ;
                                            gal:name "name" ;
                                            gal:type "data" ] ;
                                    gal:value "column" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:label "count - count_table file" ;
                                            gal:name "name" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:label "column - Distance Matrix" ;
                                            gal:name "dist" ;
                                            gal:type "data" ] ;
                                    gal:value "count" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal: " set default option(s) " ;
                            gal:expand [ gal:macro "calc-common" ] ;
                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "thetayc" ;
                                    dc:description "thetayc - Community Structure Similarity the Yue & Clayton theta similarity coefficient" ],
                                [ gal:selected "true" ;
                                    gal:value "jclass" ;
                                    dc:description "jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Tree.shared" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.tre" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.tre" ] ;
                            gal:filter "input['source'] == 'shared'" ;
                            gal:label "${tool.name} on ${on_string}: tre" ;
                            gal:name "trefiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "input['source'] != 'shared'" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "input_dist*.tre" ;
                            gal:label "${tool.name} on ${on_string}: tre" ;
                            gal:name "tre" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with column and name file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.tre" ;
                                    gal:md5 "33cc8cb433f123e49b33b998186b74ed" ;
                                    gal:name "tre" ] ;
                            gal:param [ gal:name "name" ;
                                    gal:value "amazon1.names" ],
                                [ gal:name "source" ;
                                    gal:value "column" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.pair.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with phylip and defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.tre" ;
                                    gal:md5 "c74a88ed448aad2d07059eda0b4161e9" ;
                                    gal:name "tre" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:name "dist" ;
                                    gal:value "env.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with shared and subsampling " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "108" ;
                                    gal:element [ gal:ftype "mothur.tre" ;
                                            gal:md5 "b8adfa6e41397b3815768f987836d102" ;
                                            gal:name "jclass.0.32.all" ] ;
                                    gal:name "trefiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "calc" ;
                                    gal:value "jclass" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with shared and label and group select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "117" ;
                                    gal:element [ gal:ftype "mothur.tre" ;
                                            gal:md5 "477b061d738d24a7476dd4c90d9666cf" ;
                                            gal:name "canberra.0.32" ] ;
                                    gal:name "trefiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.32" ],
                                [ gal:name "source" ;
                                    gal:value "shared" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "calc" ;
                                    gal:value "sharedsobs,sharedchao,sharedace,anderberg,jclass,jest,kulczynski,kulczynskicody,kstest,lennon,ochiai,sorclass,sorest,whittaker,hamming,memchi2,memchord,memeuclidean,mempearson,braycurtis,jabund,morisitahorn,sorabund,thetan,thetayc,canberra,gower,hellinger,manhattan,odum,soergel,spearman,speciesprofile,structchi2,structchord,structeuclidean,structkulczynski,structpearson,sharednseqs,sharedobserved" ],
                                [ gal:name "dist" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "tree.shared" ;
            schema:sku 7 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

#import re
## create symlinks to input datasets
ln -s '$file.taxonomy' file.taxonomy.dat &&
#if $file.filetype == "useconstaxonomy":
    ln -s '$file.shared' file.shared.dat &&
    ln -s '$file.list' file.list.dat &&
#end if
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&

echo 'get.lineage(
    #if $file.filetype == "usetaxonomy":
        taxonomy=file.taxonomy.dat
    #else
        constaxonomy=file.taxonomy.dat
        #if $file.shared:
            ,shared=file.shared.dat
        #end if
        #if $file.list:
            ,list=file.list.dat
        #end if
    #end if
    #if $file.taxons:
        #set taxonstring=str($file.taxons).replace(",","-")
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxonstring ))'"'
    #elif $taxon:
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxon.value )).replace(",","-")'"'
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $group_in:
        ,group=group_in.dat
    #end if
    #if $alignreport_in:
        ,alignreport=alignreport_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
        ,dups=$dups
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Picks by taxon" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "citations" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.lineage_ command reads a taxonomy_ file and a taxon and generates a new file that contains only the sequences in the that are from that taxon. You may also include either a fasta, name_, group_, list_, or align.report_ file to this command and mothur will generate new files for each of those containing only the selected sequences.

.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _get.lineage: https://www.mothur.org/wiki/Get.lineage

    """ ;
            gal:id "mothur_get_lineage" ;
            gal:inputs [ gal:conditional [ gal:name "file" ;
                            gal:param [ gal:label "choose which file is used" ;
                                    gal:name "filetype" ;
                                    gal:option [ gal:value "useconstaxonomy" ;
                                            dc:description "constaxonomy" ],
                                        [ gal:selected "true" ;
                                            gal:value "usetaxonomy" ;
                                            dc:description "taxonomy" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.shared" ;
                                            gal:label "shared - shared file" ;
                                            gal:name "shared" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.list" ;
                                            gal:label "list - list file" ;
                                            gal:name "list" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.cons.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "constaxonomy - Constaxonomy file. Provide either a constaxonomy file or a taxonomy file" ;
                                            gal:name "taxonomy" ;
                                            gal:type "data" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:name "taxons" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "2" ;
                                                            gal:name "name" ],
                                                        [ gal:index "2" ;
                                                            gal:name "value" ] ;
                                                    gal:filter [ gal:column "2" ;
                                                            gal:name "sorted_taxon" ;
                                                            gal:type "sort_by" ],
                                                        [ gal:column "2" ;
                                                            gal:name "unique_taxon" ;
                                                            gal:type "unique_value" ] ;
                                                    gal:from_dataset "taxonomy" ;
                                                    dc:description """
                        """ ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "'" ],
                                                                [ gal:value "\"" ] ;
                                                            dc:description """
                            """ ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "useconstaxonomy" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:name "taxons" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "1" ;
                                                            gal:name "name" ],
                                                        [ gal:index "1" ;
                                                            gal:name "value" ] ;
                                                    gal:filter [ gal:column "1" ;
                                                            gal:name "unique_taxon" ;
                                                            gal:type "unique_value" ],
                                                        [ gal:column "1" ;
                                                            gal:name "sorted_taxon" ;
                                                            gal:type "sort_by" ] ;
                                                    gal:from_dataset "taxonomy" ;
                                                    dc:description """
                        """ ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "\"" ],
                                                                [ gal:value "'" ] ;
                                                            dc:description """
                            """ ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.seq.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:name "taxonomy" ;
                                            gal:type "data" ] ;
                                    gal:value "usetaxonomy" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. It can also contain group information" ;
                            gal:label "Count Table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicate names" ;
                            gal:name "dups" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "list_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:area "True" ;
                            gal:help "If no taxons selected from file, Enter 1 or more taxons separated by dashes here, e.g. Bacteria;Firmicutes;-Bacteria;Actinobacteria; " ;
                            gal:label "taxon - Manually select Taxons for filtering" ;
                            gal:name "taxon" ;
                            gal:size "5x120" ;
                            gal:type "text" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:name "alignreport_in" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.lineage" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in*?\\.(?P<designation>.*)\\.pick.*" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.group" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "file.taxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            gal:name "alignreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with constaxonomy file " ;
                            gal:output [ gal:md5 "3a70d3cc47df38f9493a8c9cf02b75b7" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "example.constaxonomy" ],
                                [ gal:name "taxon" ;
                                    gal:value "Bacteria;Bacteroidetes;" ],
                                [ gal:name "filetype" ;
                                    gal:value "useconstaxonomy" ] ],
                        [ gal: " test with multiple taxons and all additional files " ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "c7e5182680e48595999fbc3561c76cef" ;
                                    gal:name "fasta_out" ],
                                [ gal:md5 "682af62c68e02244c1eb1c39fa295c63" ;
                                    gal:name "taxonomy_out" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "424256fee5f9074465eed432c1a8fb10" ;
                                    gal:name "name_out" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "71eff499c4f32ff53937288c7ffe0f70" ;
                                    gal:name "group_out" ],
                                [ gal:ftype "mothur.align.report" ;
                                    gal:md5 "2a579d34a3794f8ce1934147e9ea78ef" ;
                                    gal:name "alignreport_out" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "d41d8cd98f00b204e9800998ecf8427e" ;
                                            gal:name "0.05" ] ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "abrecovery.fasta" ],
                                [ gal:ftype "mothur.align.report" ;
                                    gal:name "alignreport_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.contigs.report" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "list_in" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "abrecovery.names" ],
                                [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:name "taxon" ;
                                    gal:value "Bacteria;Firmicutes;,Bacteria;Actinobacteria;" ] ],
                        [ gal: " test with taxons from file " ;
                            gal:output [ gal:md5 "f4067366d8ebdf56b75b1ac7a638bcb6" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:name "taxons" ;
                                    gal:value "Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Dorea(99);,Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Roseburia(47);" ],
                                [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ],
                        [ gal: " test with defaults and single taxon " ;
                            gal:output [ gal:md5 "aca21af84b6bbb6ab6cd7ab8643943d2" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:name "taxon" ;
                                    gal:value "Bacteria;Firmicutes;" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ],
                        [ gal: " test with constaxonomy file and taxons from file " ;
                            gal:output [ gal:md5 "0ea2511f40073a95c0812268da0cf727" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "useconstaxonomy" ],
                                [ gal:name "taxons" ;
                                    gal:value "Bacteria(100);Firmicutes(100);Clostridia(70);Clostridiales(70);Lachnospiraceae(51);unclassified;,Bacteria(100);Proteobacteria(100);Gammaproteobacteria(100);unclassified;unclassified;unclassified;" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "example.constaxonomy" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.lineage" ;
            schema:sku 62 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
#if $withdesign.tree:
    ln -s '$withdesign.tree' withdesign.tree.dat &&
#end if
#if $withdesign.havedesign == "yes":
    ln -s '$withdesign.design' withdesign.design.dat &&
#end if

echo 'indicator(
    #if $withdesign.tree:
        tree=withdesign.tree.dat,
    #end if
    #if $otu.is_of_type("mothur.relabund"):
        relabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $withdesign.groups:
        groups=${ str($withdesign.groups).replace(",","-") },
    #end if
    #if $withdesign.havedesign == "yes":
        design=withdesign.design.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Identify indicator \"species\" for nodes on a tree" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1890/0012-9615(1997)067[0345:SAAIST]2.0.CO;2" ] ;
                    gal:expand [ gal:macro "citations-ecology" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The indicator_ command reads a shared_ or relabund_ file and a tree file, and outputs a .indicator.summary file and when a tree file is given a .indicator.tre file. The summary file lists the indicator value for each OTU for each node.  The new tree contains labels at each internal node. The label is the node number so you can relate the tree to the summary file.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _relabund: https://www.mothur.org/wiki/Get.relabund
.. _indicator: https://www.mothur.org/wiki/Indicator

v.1.22.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_indicator" ;
            gal:inputs [ gal:conditional [ gal:name "withdesign" ;
                            gal:param [ gal:label "Will you supply a design file?" ;
                                    gal:name "havedesign" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.tre" ;
                                            gal:help "Mandatory if no design file is provided" ;
                                            gal:label "tree - A newick-formatted tree" ;
                                            gal:name "tree" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Pick groups to annalyze" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "otu" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "no" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.design" ;
                                            gal:help "make sure your file is of type mothur.design. Design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                                            gal:label "design - assign groups to new grouping" ;
                                            gal:name "design" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.tre" ;
                                            gal:help "Optional, if a design file is provided." ;
                                            gal:label "tree - A newick-formatted tree" ;
                                            gal:name "tree" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:label "groups - Pick groups to annalyze" ;
                                            gal:multiple "true" ;
                                            gal:name "groups" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:filter [ gal:key "groups" ;
                                                            gal:ref "design" ;
                                                            gal:type "data_meta" ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "false" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.shared,mothur.relabund" ;
                            gal:label "shared/relabund - OTU dataset" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Indicator" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "otu*.summary" ;
                            gal:label "${tool.name} on ${on_string}: indicator.summary" ;
                            gal:name "summary" ],
                        [ gal:filter "tree" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "withdesign.tree*.tre" ;
                            gal:label "${tool.name} on ${on_string}: indicator.tre" ;
                            gal:name "tree_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with design input and subset of groups" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^OTU\\tIndicator_Groups\\tIndicator_Value\\tpValue$" ] ;
                                            gal:has_text [ gal:text "forest" ] ;
                                            gal:not_has_text [ gal:text "pasture" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "tardis" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "havedesign" ;
                                    gal:value "yes" ] ],
                        [ gal: " test with tree input and subset of groups " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "756bfd16311e141a099cfe96db458d83" ;
                                    gal:name "tree_out" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "TreeNode" ] ;
                                            gal:not_has_text [ gal:text "forest-pasture" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "forest" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "tree" ;
                                    gal:value "amazon.an.jclass.unique.tre" ],
                                [ gal:name "havedesign" ;
                                    gal:value "no" ] ],
                        [ gal: " test with design input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^OTU\\tIndicator_Groups\\tIndicator_Value\\tpValue$" ] ;
                                            gal:has_text [ gal:text "pasture" ],
                                                [ gal:text "forest" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "havedesign" ;
                                    gal:value "yes" ],
                                [ gal:name "groups" ;
                                    gal:value "tardis,dalek" ] ],
                        [ gal: " test with tree input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "a22f90898611e1f4c5d84cfe18dc6ebe" ;
                                    gal:name "tree_out" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "forest-pasture" ],
                                                [ gal:text "TreeNode" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "summary" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "havedesign" ;
                                    gal:value "no" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "tree" ;
                                    gal:value "amazon.an.jclass.unique.tre" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "indicator" ;
            schema:sku 124 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&
ln -s '$group' group.dat &&
ln -s '$fasta' fasta.dat &&
#if $design.source == "hist":
    ln -s '$design.design_dataset' design_dataset.dat &&
#else:
    ln -s '$generated_design' generated_design.dat &&
#end if

echo 'merge.groups(
    #if $design.source == "hist":
        design=design_dataset.dat
    #else:
        design=generated_design.dat
    #end if
    #if $otu:
        ,shared=otu.dat
    #end if
    #if $group:
        #if $group.is_of_type("mothur.groups"):
            ,group=group.dat
        #elif $group.is_of_type("mothur.count_table"):
            ,count=group.dat
        #end if
    #end if
    #if $fasta:
        ,fasta=fasta.dat
    #end if
    #if $groups:
        ,groups=${ str($groups).replace(",","-") }
    #end if
    #if $label:
        ,label=${ str($label).replace(",","-") }
    #end if
    ,method=$method
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:configfiles [ gal:configfile [ gal:name "generated_design" ;
                            dc:description """
            #if $design.source == 'build':
                #for $grouping in $design.groupings:
                    #set grp_str = $grouping.groups.__str__
                    #if grp_str != None and len(grp_str) > 0:
                        #for $grp in grp_str.split(','):
                            $grp	$grouping.name
                        #end for
                    #end if
                #end for
            #end if
        """ ] ;
                    dc:description """
        """ ] ;
            gal:description "Merge groups in a shared file" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The merge.groups_ command reads a shared_ file and a design file and merges the groups in the shared file that are in the same grouping in the design file.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
                                ======= =======
                                duck    bird
                                cow     mammal
                                pig     mammal
                                goose   bird
                                cobra   reptile
                                ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.

.. _shared: https://www.mothur.org/wiki/Shared_file
.. _merge.groups: https://www.mothur.org/wiki/Merge.groups

    """ ;
            gal:id "mothur_merge_groups" ;
            gal:inputs [ gal:conditional [ gal:name "design" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Grouping Design from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "build" ;
                                            dc:description "Build a grouping design" ],
                                        [ gal:value "hist" ;
                                            dc:description "Your History" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                                            gal:label "design - assign groups to new grouping" ;
                                            gal:name "design_dataset" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:repeat [ gal:name "groupings" ;
                                            gal:param [ gal:label "Select groups for to include in this grouping" ;
                                                    gal:multiple "true" ;
                                                    gal:name "groups" ;
                                                    gal:options [ gal:filter [ gal:key "groups" ;
                                                                    gal:ref "otu" ;
                                                                    gal:type "data_meta" ] ;
                                                            dc:description """
                            """ ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ],
                                                [ gal:label "Name for a new combined grouping" ;
                                                    gal:name "name" ;
                                                    gal:type "text" ] ;
                                            gal:title "Grouping" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "build" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "Merging method" ;
                            gal:name "method" ;
                            gal:option [ gal:value "average" ;
                                    dc:description " Average " ],
                                [ gal:selected "true" ;
                                    gal:value "sum" ;
                                    dc:description " Sum " ],
                                [ gal:value "median" ;
                                    dc:description " Median " ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.groups,mothur.count_table" ;
                            gal:label "group or count - Group Dataset or Count Table" ;
                            gal:name "group" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared Dataset" ;
                            gal:name "otu" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - Pick OTU Labels to include" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "groups - Pick groups to include" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "fasta,mothur.align" ;
                            gal:help "only valid if you supplied a count file" ;
                            gal:label "Fasta file" ;
                            gal:name "fasta" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Merge.groups" ;
            gal:outputs [ gal:data [ gal:filter "otu" ;
                            gal:format "mothur.shared" ;
                            gal:from_work_dir "otu*.merge.*" ;
                            gal:label "${tool.name} on ${on_string}: merge.shared" ;
                            gal:name "merged_shared" ;
                            dc:description """
            """ ],
                        [ gal:filter "group" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group*.merge.*" ;
                            gal:label "${tool.name} on ${on_string}: merge.groups" ;
                            gal:name "merged_group" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with shared file and label and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.shared" ;
                                    gal:md5 "11818d535bf88938dc063afca3f95b23" ;
                                    gal:name "merged_shared" ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.05,0.22,0.38" ],
                                [ gal:name "design_dataset" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "groups" ;
                                    gal:value "forest,pasture" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ],
                        [ gal: " test with shared file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.shared" ;
                                    gal:md5 "60f9e715c948911a61986bf1d1db7747" ;
                                    gal:name "merged_shared" ] ;
                            gal:param [ gal:name "design_dataset" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ],
                        [ gal: " test with count table and fasta file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "tardis" ],
                                                [ gal:text "U68589" ],
                                                [ gal:text "dalek" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.groups" ;
                                    gal:name "merged_group" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.count_table" ;
                                    gal:name "group" ;
                                    gal:value "amazon_withgroups.count_table" ],
                                [ gal:name "method" ;
                                    gal:value "median" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "design_dataset" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ],
                        [ gal: " test with group file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "023ebd0668522e9531da5b061e6e9137" ;
                                    gal:name "merged_group" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "design_dataset" ;
                                    gal:value "toymothur.design2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ],
                        [ gal: " test with design creation " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.shared" ;
                                    gal:md5 "60f9e715c948911a61986bf1d1db7747" ;
                                    gal:name "merged_shared" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "build" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ] ;
                            gal:repeat [ gal:name "groupings" ;
                                    gal:param [ gal:name "name" ;
                                            gal:value "dalek" ],
                                        [ gal:name "groups" ;
                                            gal:value "pasture" ] ;
                                    dc:description """
                """ ],
                                [ gal:name "groupings" ;
                                    gal:param [ gal:name "name" ;
                                            gal:value "tardis" ],
                                        [ gal:name "groups" ;
                                            gal:value "forest" ] ;
                                    dc:description """
                """ ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "merge.groups" ;
            schema:sku 55 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$fasta' fasta.dat &&
ln -s '$group' group.dat &&

echo 'split.groups(
    #if $name:
        name=name.dat,
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    fasta=fasta.dat,
    group=group.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generates a fasta file for each group" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The split.groups_ command reads a fasta file and group_ file and generates a fasta file for each group in the groupfile.  A name_ file can also be split into groups.

.. _group: https://www.mothur.org/wiki/Group_file
.. _name: https://www.mothur.org/wiki/Name_file
.. _split.groups: https://www.mothur.org/wiki/Split.groups

    """ ;
            gal:id "mothur_split_groups" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "groups - Pick groups to analyze" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "fasta" ;
                            gal:label "fasta - Fasta to split by group" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:name "group" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names to split by group" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Split.groups" ;
            gal:outputs [ gal:collection [ gal: " TODO: format_source on discovered collection elements doesn't seem to work yet, change to format_source=\"fasta\" once it does " ;
                            gal:discover_datasets [ gal:format "fasta" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.fasta" ] ;
                            gal:label "${tool.name} on ${on_string}: fasta per group" ;
                            gal:name "groupfastas" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "2" ;
                                    gal:element [ gal:ftype "fasta" ;
                                            gal:md5 "3844bc02ec09acbbf31845ea6ac6632d" ;
                                            gal:name "pasture" ],
                                        [ gal:ftype "fasta" ;
                                            gal:md5 "f0e662d1d82e96b4977864925493dbf5" ;
                                            gal:name "forest" ] ;
                                    gal:name "groupfastas" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "amazon.groups" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "split.groups" ;
            schema:sku 29 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.template.dat &&
#if $mask_cond.source2 == "history":
    ln -s '$mask_cond.input' mask_cond.mask.dat &&
#end if

echo 'chimera.ccode(
    fasta=fasta.dat,
    reference=alignment.template.dat,
    filter=$filter,
    #if $mask_cond.source2 == "default":
        mask=default,
    #elif $mask_cond.source2 == "history":
        mask=mask_cond.mask.dat,
    #end if
    #if int($window) > 0:
        window=$window,
    #end if
    #if int($numwanted) > 0:
        numwanted=$numwanted,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Find putative chimeras using ccode" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1093/bioinformatics/bti008" ] ;
                    gal:macro "citations" ;
                    dc:description """
           """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The chimera.ccode_ command identifies putative chimeras using the ccode approach (Chimera and Cross-Over Detection and Evaluation).  Ccode_ compares differences in distances, for each word, between query sequence and reference sequences, and reference sequences and themselves.

This method was written using the algorithms described in the paper_ "Evaluating putative chimeric sequences from PCR-amplified products" by Juan M. Gonzalez, Johannes Zimmerman and Cesareo Saiz-Jimenez.

The program can analyze sequences for any required word length. Generally, values of 5-20% of sequence length appear to deliver accurate results, for example, working on 16S rDNA sequences with a full-length of #1500 nt. It should be noted that the use of fragments either too long or too short might result in a reduction of sensitivity.

.. _Ccode: http://www.microextreme.net/downloads.html
.. _paper: http://bioinformatics.oxfordjournals.org/content/21/3/333.full.pdf
.. _chimera.ccode: https://www.mothur.org/wiki/Chimera.ccode

    """ ;
            gal:id "mothur_chimera_ccode" ;
            gal:inputs [ gal:conditional [ gal:name "mask_cond" ;
                            gal:param [ gal:label "Mask option" ;
                                    gal:name "source2" ;
                                    gal:option [ gal:value "default" ;
                                            dc:description "default ecoli mask" ],
                                        [ gal:value "" ;
                                            dc:description "None" ],
                                        [ gal:value "history" ;
                                            dc:description "From Your History" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "default" ],
                                [ gal:param [ gal:argument "mask" ;
                                            gal:format "mothur.filter" ;
                                            gal:label "Mask for the reference file" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ;
                                    dc:description """
                """ ],
                                [ gal:value "" ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignment" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "Recommended window size is between 5 and 20% of your trimmed sequence length. Default is 10% of the sequence length. Default is used if < 1" ;
                            gal:label "window - Length of sequence you want in each window analyzed" ;
                            gal:name "window" ;
                            gal:type "integer" ;
                            gal:value "0" ],
                        [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Candiate Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:help "uses default if set to 0" ;
                            gal:label "numwanted - Number of sequences compared with each query" ;
                            gal:name "numwanted" ;
                            gal:type "integer" ;
                            gal:value "20" ],
                        [ gal:argument "filter" ;
                            gal:checked "false" ;
                            gal:falsevalue "False" ;
                            gal:label "filter - Apply a 50% soft vertical filter" ;
                            gal:truevalue "True" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Chimera.ccode" ;
            gal:outputs [ gal:data [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.*ccode.accnos" ;
                            gal:label "${tool.name} on ${on_string}: ccode.accnos" ;
                            gal:name "ccode.accnos" ],
                        [ gal:format "txt" ;
                            gal:from_work_dir "fasta.*ccode.chimeras" ;
                            gal:label "${tool.name} on ${on_string}: ccode.chimeras" ;
                            gal:name "ccode.chimeras" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "*.mapinfo" ;
                            gal:label "${tool.name} on ${on_string}: mapinfo" ;
                            gal:name "mapinfo" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^Window\\tAvgQ\\t\\(sdQ\\)\\tAvgR\\t\\(sdR\\)\\tRatio\\tAnova$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "ccode.chimeras" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "ef3353b1467fe95a24153513917e6444" ;
                                    gal:name "mapinfo" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.ccode.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "ccode.accnos" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                            dc:description """
            """ ],
                        [ gal: " test with default ecoli mask " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "25221b1e109d9c0a939efb319e7a9896" ;
                                    gal:name "mapinfo" ],
                                [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "47ddf86ec36aafd495aa902b3e06ffca" ;
                                    gal:name "ccode.accnos" ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^Window\\tAvgQ\\t\\(sdQ\\)\\tAvgR\\t\\(sdR\\)\\tRatio\\tAnova$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "txt" ;
                                    gal:name "ccode.chimeras" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source2" ;
                                    gal:value "default" ],
                                [ gal:name "window" ;
                                    gal:value "100" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ] ;
                            dc:description " " ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "chimera.ccode" ;
            schema:sku 67 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$groups' groups.dat &&
ln -s '$qfile' qfile.dat &&
ln -s '$count' count.dat &&
ln -s '$taxonomy' taxonomy.dat &&
ln -s '$summary' summary.dat &&
#if $contigsrep.usecontigs == "yes":
    ln -s '$contigsrep.contigsreport' contigsreport.dat &&
#end if
#if $alignrep.usealign == "yes":
    ln -s '$alignrep.alignreport' alignreport.dat &&
#end if

echo 'screen.seqs(
    fasta=fasta.dat
    #if int($start) > -1:
        ,start=$start
    #end if
    #if int($end) > -1:
        ,end=$end
    #end if
    #if int($minlength) > -1:
        ,minlength=$minlength
    #end if
    #if int($maxlength) > -1:
        ,maxlength=$maxlength
    #end if
    #if int($maxambig) > -1:
        ,maxambig=$maxambig
    #end if
    #if int($maxhomop) > -1:
        ,maxhomop=$maxhomop
    #end if
    #if int($criteria) > -1:
        ,criteria=$criteria
    #end if
    #if $optimize:
        ,optimize=$optimize
    #end if
    #if $qfile:
        ,qfile=qfile.dat
    #end if
    #if $names:
        ,name=names.dat
    #end if
    #if $groups:
        ,group=groups.dat
    #end if
    #if $taxonomy:
        ,taxonomy=taxonomy.dat
    #end if
    #if $count:
        ,count=count.dat
    #end if
    #if $summary:
        ,summary=summary.dat
    #end if
    #if $contigsrep.usecontigs == "yes":
        ,contigsreport=contigsreport.dat
        ,minoverlap=$contigsrep.minoverlap
        ,ostart=$contigsrep.ostart
        ,oend=$contigsrep.oend
        ,mismatches=$contigsrep.mismatches
    #end if
    #if $alignrep.usealign == "yes":
        ,alignreport=alignreport.dat
        ,minsim=$alignrep.minsim
        ,minscore=$alignrep.minscore
        ,maxinsert=$alignrep.maxinsert
    #end if
    ,processors='"\\${GALAXY_SLOTS:-8}"'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Screen sequences" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The screen.seqs_ command enables you to keep sequences that fulfill certain user defined criteria. Furthermore, it enables you to cull those sequences not meeting the criteria from a name_, group_, or align.report_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _screen.seqs: https://www.mothur.org/wiki/Screen.seqs

    """ ;
            gal:id "mothur_screen_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "contigsrep" ;
                            gal:param [ gal:help "A contigsreport is created by the make.contigs tool.                 If you provide the contigs report file you can screen your sequences using the following parameters: minoverlap, ostart, oend and mismatches" ;
                                    gal:label "Perform screening using a contigsreport?" ;
                                    gal:name "usecontigs" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:argument "oend" ;
                                            gal:label "oend - Position the overlap must end after (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "mismatches" ;
                                            gal:label "mismatches - Maximum number of mismatches (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "ostart" ;
                                            gal:label "ostart - Position the overlap must start by (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "contigsreport" ;
                                            gal:format "tabular" ;
                                            gal:help "this file is created by the make.contigs command" ;
                                            gal:label "contigsreport - Contigs Report to screen with" ;
                                            gal:type "data" ],
                                        [ gal:argument "minoverlap" ;
                                            gal:label "minoverlap - Minimum overlap length (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignrep" ;
                            gal:param [ gal:help "An alignment report is created by the align.seqs tool.                 If you provide the alignment report file you can screen your sequences using the following parameters: minsim, minscore, and maxinsert" ;
                                    gal:label "Perform screening using an alignment report?" ;
                                    gal:name "usealign" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "alignreport" ;
                                            gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report to screen with" ;
                                            gal:type "data" ],
                                        [ gal:argument "minscore" ;
                                            gal:label "minscore - Minimum search score during alignment (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "minsim" ;
                                            gal:label "minsim - Minimum similarity to template sequences during alignment" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "maxinsert" ;
                                            gal:label "maxinsert - Maximum number of insertions during alignment (ignored when negative)" ;
                                            gal:min "-1" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "maxambig" ;
                            gal:label "maxambig - Remove sequences with ambiguous bases greater than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "end" ;
                            gal:label "end - Remove sequences that end before position (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "criteria" ;
                            gal:label "criteria - Percent of sequences that an optimize value must match to be retained (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "taxonomy" ;
                            gal:format "taxonomy" ;
                            gal:label "taxonomy - Taxonomy to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "maxlength" ;
                            gal:label "maxlength - Remove sequences longer than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "optimize" ;
                            gal:display "checkboxes" ;
                            gal:label "optimize - Optimize selected paramenters" ;
                            gal:multiple "true" ;
                            gal:option [ gal:value "start" ;
                                    dc:description "start" ],
                                [ gal:value "minlength" ;
                                    dc:description "minlength" ],
                                [ gal:value "maxhomop" ;
                                    dc:description "maxhomop" ],
                                [ gal:value "maxlength" ;
                                    dc:description "maxlength" ],
                                [ gal:value "maxambig" ;
                                    dc:description "maxambig" ],
                                [ gal:value "end" ;
                                    dc:description "end" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Fasta to screen" ;
                            gal:type "data" ],
                        [ gal:argument "names" ;
                            gal:format "mothur.names" ;
                            gal:label "name - Sequence Names to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "summary" ;
                            gal:format "mothur.summary" ;
                            gal:help "saves processing time when screening with parameters in the summary file" ;
                            gal:label "summary file - as created by summary.seqs" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "minlength" ;
                            gal:label "minlength - Remove sequences shorter than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:argument "qfile" ;
                            gal:format "qual" ;
                            gal:label "qfile - Sequence Quality file to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "start" ;
                            gal:label "start - Remove sequences that start after position (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "maxhomop" ;
                            gal:label "maxhomop - Remove sequences with homopolymers greater than (ignored when negative)" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:argument "groups" ;
                            gal:format "mothur.groups" ;
                            gal:label "group - Groups to screen" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Screen.seqs" ;
            gal:outputs [ gal:data [ gal:filter "names" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "names*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: names" ;
                            gal:name "names_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: count" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "alignrep.alignreport" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport.good.align.report" ;
                            gal:label "${tool.name} on ${on_string}: align.report" ;
                            gal:name "alignreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "groups" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "groups*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: groups" ;
                            gal:name "groups_out" ;
                            dc:description """
            """ ],
                        [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: good.${fasta.datatype.file_ext}" ;
                            gal:name "fasta_out" ],
                        [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta*.bad.accnos" ;
                            gal:label "${tool.name} on ${on_string}: bad.accnos" ;
                            gal:name "bad_accnos" ],
                        [ gal:filter "contigsrep.contigsreport" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "contigsreport.good.contigs.report" ;
                            gal:label "${tool.name} on ${on_string}: contigs.report" ;
                            gal:name "contigsreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qfile" ;
                            gal:format_source "qfile" ;
                            gal:from_work_dir "qfile*.good.dat" ;
                            gal:label "${tool.name} on ${on_string}: qfile" ;
                            gal:name "qfile_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test screening with contigsreport " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-contigsreport-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_15923_3823" ] ;
                                            gal:not_has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_22487_4260" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "contigsreport_out" ;
                                    dc:description """
                """ ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-accnos-format" ] ;
                                            gal:has_text [ gal:text "ambig" ],
                                                [ gal:text "mismatches" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "bad_accnos" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "maxlength" ;
                                    gal:value "275" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "contigsreport" ;
                                    gal:value "Mock_S280_L001_R1_001_small.contigs.report" ],
                                [ gal:name "mismatches" ;
                                    gal:value "18" ],
                                [ gal:name "maxambig" ;
                                    gal:value "0" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "usecontigs" ;
                                    gal:value "yes" ] ],
                        [ gal: " test with count table " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "U68638" ] ;
                                            gal:not_has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-count-format" ] ;
                                            gal:has_text [ gal:text "U68638" ] ;
                                            gal:not_has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.count_table" ;
                                    gal:name "count_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-accnos-format" ] ;
                                            gal:has_text [ gal:text "length" ],
                                                [ gal:text "ambig" ],
                                                [ gal:text "U68589" ] ;
                                            gal:not_has_text [ gal:text "U68638" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "bad_accnos" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "maxambig" ;
                                    gal:value "0" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "count" ;
                                    gal:value "amazon1.count_table" ],
                                [ gal:name "maxlength" ;
                                    gal:value "500" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ] ],
                        [ gal: " test screening with alignment report " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-alignreport-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            gal:not_has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_14010_4122" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "alignreport_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-accnos-format" ] ;
                                            gal:has_text [ gal:text "score" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "bad_accnos" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-fasta-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            gal:not_has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_14010_4122" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "alignreport" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align.report" ],
                                [ gal:name "minscore" ;
                                    gal:value "100" ],
                                [ gal:name "maxambig" ;
                                    gal:value "0" ],
                                [ gal:name "usealign" ;
                                    gal:value "yes" ],
                                [ gal:name "maxlength" ;
                                    gal:value "275" ] ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ;
                                    gal:ftype "fasta" ;
                                    gal:name "fasta_out" ],
                                [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.bad.accnos" ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:name "bad_accnos" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ],
                                [ gal:name "maxlength" ;
                                    gal:value "275" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "maxambig" ;
                                    gal:value "0" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "screen.seqs" ;
            schema:sku 74 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'get.otulist(
    list=otu.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    sort=$sort
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get otus for each distance in a otu list" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The get.otulist_ command parses a list file and creates an .otu file for each distance containing 2 columns. The first column is the OTU number the second column is a list of sequences in that OTU.

.. _get.otulist: https://www.mothur.org/wiki/Get.otulist

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_otulist" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "By default, uses all if none are selected." ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "If otu is selected the output will be otu number followed by the list of names in that otu.             If name is selected the output will be a sequence name followed by its otu number" ;
                            gal:label "sort - select the output format" ;
                            gal:name "sort" ;
                            gal:option [ gal:value "name" ;
                                    dc:description "name" ],
                                [ gal:selected "true" ;
                                    gal:value "otu" ;
                                    dc:description "otu" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.otulist" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern ".*?\\.(?P<designation>.*)\\.otu" ] ;
                            gal:label "${tool.name} on ${on_string}: OTUs per label" ;
                            gal:name "otufiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "9dfa8c449a45d66e7ae6b30b34a821cb" ;
                                            gal:name "0.22" ] ;
                                    gal:name "otufiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "b40486b3739a6d5b86459dc17a23c253" ;
                                            gal:name "0.41" ] ;
                                    gal:name "otufiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.03,0.38,0.41,0.45" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.otulist" ;
            schema:sku 116 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$count' count.dat &&
ln -s '$otu' otu.dat &&

echo 'get.rabund(
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #end if
    sorted=$sorted
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Get rabund from a otu list or sabund" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.rabund_ command generates an rabund_ file from a list_ or sabund_ file.

.. _rabund: https://www.mothur.org/wiki/Rabund_file
.. _list: https://www.mothur.org/wiki/List_file
.. _sabund: https://www.mothur.org/wiki/Sabund_file
.. _get.rabund: https://www.mothur.org/wiki/Get.rabund

    """ ;
            gal:id "mothur_get_rabund" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "By default the data in the rabund file the same order as the OTUs in input, select to sort by abundance." ;
                            gal:label "sorted - sort by abundance" ;
                            gal:name "sorted" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list,mothur.sabund" ;
                            gal:label "list,sabund - List or Sabund" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:help "(all used if none are selected)" ;
                            gal:label "label - select OTU distance labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.rabund" ;
            gal:outputs [ gal:data [ gal:format "mothur.rabund" ;
                            gal:from_work_dir "otu*.rabund" ;
                            gal:label "${tool.name} on ${on_string}: rabund (Rank Abundance)" ;
                            gal:name "rabund" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test sabund input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.rabund2" ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ] ;
                            gal:param [ gal:ftype "mothur.sabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.sabund" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test otu list input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "amazon.an.rabund" ;
                                    gal:ftype "mothur.rabund" ;
                                    gal:name "rabund" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.rabund" ;
            schema:sku 13 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'unifrac.unweighted(
    tree=tree.dat,
    #if $group:
        group=group.dat,
        #if $groups:
            groups=${ str($groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        consensus=$subsampling.consensus,
    #else
        random=$random,
    #end if
    #if $distance:
        distance=$distance,
    #end if
    #if $count:
        count=count.dat,
    #end if
    root=$root,
    processors='\\${GALAXY_SLOTS:-1}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Describes whether two or more communities have the same structure" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.71.12.8228-8235.2005" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The unifrac.unweighted_ command the unweighted UniFrac algorithm. The unifrac.weighted command implements the weighted version of the command. Both of these methods are available through the UniFrac website. The UniFrac methods are generic tests that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _unifrac.unweighted: https://www.mothur.org/wiki/Unifrac.unweighted

    """ ;
            gal:id "mothur_unifrac_unweighted" ;
            gal:inputs [ gal:conditional [ gal:name "subsampling" ;
                            gal:param [ gal:help "(instead of randomly generated comparisons)" ;
                                    gal:label "use subsampling of groups?" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "yes" ],
                                        [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:help "the size per group of the sample" ;
                                            gal:label "subsample - (defaults to the size of the smallest group)" ;
                                            gal:min "1" ;
                                            gal:name "subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ],
                                        [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "The consensus parameter allows you to indicate you would like trees built from distance matrices created with the results of the subsampling, as well as a consensus tree built from these trees. Default=F" ;
                                            gal:label "consensus - " ;
                                            gal:name "consensus" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "distance - Create a distance matrix for your history" ;
                            gal:name "distance" ;
                            gal:option [ gal:value "square" ;
                                    dc:description "Phylip Square Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip Lower Triangle Matrix" ],
                                [ gal:value "column" ;
                                    dc:description "Pairwise Distance Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Tree" ;
                            gal:name "tree" ;
                            gal:type "data" ],
                        [ gal:label "groups - Select groups for pairwise comparisons" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "unused if subsample=True" ;
                            gal:label "random - Compare your trees with randomly generated trees" ;
                            gal:name "random" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:name "group" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names file for the tree" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "root - the entire root in your calculations" ;
                            gal:name "root" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "unifrac.unweighted" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "tree*.uwsummary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ;
                                    dc:description """
                """ ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree*.std.dist" ;
                            gal:label "${tool.name} on ${on_string}: std.dist" ;
                            gal:name "std_dist" ;
                            dc:description """
            """ ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.cons.tre" ;
                            gal:label "${tool.name} on ${on_string}: cons.tre" ;
                            gal:name "cons_tree" ;
                            dc:description """
            """ ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ;
                                    dc:description """
                """ ] ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.dat*.dist " ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:name "dist" ;
                            dc:description """
            """ ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.all.tre" ;
                            gal:label "${tool.name} on ${on_string}: all.tre" ;
                            gal:name "all_tree" ;
                            dc:description """
            """ ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ;
                                    dc:description """
                """ ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree*.ave.dist" ;
                            gal:label "${tool.name} on ${on_string}: ave.dist" ;
                            gal:name "ave_dist" ;
                            dc:description """
            """ ],
                        [ gal:filter "(random and subsampling['use'] == 'no')" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.unweighted" ;
                            gal:label "${tool.name} on ${on_string}: unweighted" ;
                            gal:name "unweighted" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with random and no subsampling " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "9f52d2bd4c5de4c459ae314b6ed83b7a" ;
                                    gal:name "unweighted" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "6aff35274802c4727cbbbc084b7d2dca" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "random" ;
                                    gal:value "true" ] ],
                        [ gal: " test with group file and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.square.dist" ;
                                    gal:md5 "d215db402049db87cac629470301d5c6" ;
                                    gal:name "dist" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "a4a0a2faf75cb15bdb049c368dcbe73a" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "distance" ;
                                    gal:value "square" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:name "groups" ;
                                    gal:value "A,B" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ] ],
                        [ gal: " test with subsample and consensus " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "A" ],
                                                [ gal:text "C" ],
                                                [ gal:text "B" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tre" ;
                                    gal:name "all_tree" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "5f674c72ff8fe7daf152a78daf8acb5f" ;
                                    gal:name "summary" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "B" ],
                                                [ gal:text "C" ],
                                                [ gal:text "A" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tre" ;
                                    gal:name "cons_tree" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "A" ],
                                                [ gal:text "C" ],
                                                [ gal:text "B" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "ave_dist" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "mothur.pair.dist" ;
                                    gal:md5 "fd64f6cfd978bb2dde394b7ac2eaead3" ;
                                    gal:name "dist" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "C" ],
                                                [ gal:text "A" ],
                                                [ gal:text "B" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "std_dist" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "A,B,C" ],
                                [ gal:name "subsample" ;
                                    gal:value "10" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:name "distance" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "consensus" ;
                                    gal:value "true" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.lower.dist" ;
                                    gal:md5 "ce65f7d1d2aeb492d8a5373ca18ed5b0" ;
                                    gal:name "dist" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "33917fcb36e815ed8924f2ea2729bdc1" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "unifrac.unweighted" ;
            schema:sku 88 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$qfile_in' qfile_in.dat &&
ln -s '$flow_in' flow_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$tax_in' tax_in.dat &&
ln -s '$accnos' accnos.dat &&
ln -s '$count' count.dat &&

echo 'sort.seqs(
    #if $fasta_in:
        fasta=fasta_in.dat,
    #end if
    #if $qfile_in:
        qfile=qfile_in.dat,
    #end if
    #if $flow_in:
        flow=flow_in.dat,
    #end if
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $group_in:
        group=group_in.dat,
    #end if
    #if $tax_in:
        taxonomy=tax_in.dat,
    #end if
    #if $accnos:
        accnos=accnos.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    large=$large
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "put sequences in different files in the same order" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The sort.seqs_ command puts sequences from a fasta, name, group, quality, flow or taxonomy file in the same order.
You can provide an accnos file to indicate the order you want, otherwise mothur will use the order of the first file it reads.

.. _sort.seqs: https://www.mothur.org/wiki/Sort.seqs

    """ ;
            gal:id "mothur_sort_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "large - Datasets are large and may not fit in RAM" ;
                            gal:name "large" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.groups" ;
                            gal:help "format must be mothur.groups" ;
                            gal:label "groups - sequence groupings" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:help "format must be mothur.seq.taxonomy" ;
                            gal:label "taxonomy - taxonomy reference" ;
                            gal:name "tax_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:help "format must be mothur.names" ;
                            gal:label "names - name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "format must be mothur.sff.flow" ;
                            gal:label "flow - sff flowgram" ;
                            gal:name "flow_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta" ;
                            gal:help "format must be fasta" ;
                            gal:label "fasta - sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.accnos" ;
                            gal:help "format must be mothur.accnos" ;
                            gal:label "accnos - sort" ;
                            gal:name "accnos" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "qual454" ;
                            gal:help "format must be qual454" ;
                            gal:label "qfile - sequence quality" ;
                            gal:name "qfile_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "format must be mothur.count_table (generated by count.seqs)" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Sort.seqs" ;
            gal:outputs [ gal:data [ gal:filter "group_in" ;
                            gal:format_source "group_in" ;
                            gal:from_work_dir "group_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.group" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qfile_in" ;
                            gal:format_source "qfile_in" ;
                            gal:from_work_dir "qfile_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.qfile" ;
                            gal:name "qfile_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "tax_in" ;
                            gal:format_source "tax_in" ;
                            gal:from_work_dir "tax_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.taxonomy" ;
                            gal:name "taxonomy_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format_source "name_in" ;
                            gal:from_work_dir "name_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.name" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "flow_in" ;
                            gal:format_source "flow_in" ;
                            gal:from_work_dir "flow_in*.sorted.*" ;
                            gal:label "${tool.name} on ${on_string}: sorted.flow" ;
                            gal:name "flow_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "qual454" ;
                                    gal:md5 "abed9d1811786c810a12fd00a376cee4" ;
                                    gal:name "qfile_out" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "qual454" ;
                                    gal:name "qfile_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ] ;
                            dc:description """
            """ ],
                        [ gal: " test with multiple file types input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "group_out" ],
                                [ gal:ftype "fasta" ;
                                    gal:md5 "0bc9320647234e8367c3b1b654f9302d" ;
                                    gal:name "fasta_out" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "abed9d1811786c810a12fd00a376cee4" ;
                                    gal:name "qfile_out" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:ftype "qual454" ;
                                    gal:name "qfile_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.fasta" ] ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "0bc9320647234e8367c3b1b654f9302d" ;
                                    gal:name "fasta_out" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.groups" ;
                                    gal:md5 "fb60628ae445e7b06f9833f632b2cd0c" ;
                                    gal:name "group_out" ] ;
                            gal:param [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "amazon.groups" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "0bc9320647234e8367c3b1b654f9302d" ;
                                    gal:name "fasta_out" ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "mothur.count_table" ;
                                    gal:name "count" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "sort.seqs" ;
            schema:sku 15 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'collect.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    calc=${ str($calc).replace(",","-") },
    abund=$abund,
    freq=$freq
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& rm otu.dat  ## don't want this collected into datacollection
    """ ;
            gal:description "Generate collector's curves for OTUs" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.00474-06" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@


**Command Documentation**

The collect.single_ command generates collector's curves using calculators_, that describe the richness, diversity, and other features of individual samples. Collector's curves describe how richness or diversity change as you sample additional individuals. If a collector's curve becomes parallel to the x-axis, you can be reasonably confident that you have done a good job of sampling and can trust the last value in the curve. Otherwise, you need to keep sampling.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _calculators: https://www.mothur.org/wiki/Calculators
.. _collect.single: https://www.mothur.org/wiki/Collect.single

    """ ;
            gal:id "mothur_collect_single" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:value "bstick" ;
                                    dc:description "bstick - Statistical distribution tests whether observed data follow the broken stick distribution" ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:selected "true" ;
                                    gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:value "qstat" ;
                                    dc:description "qstat - Community diversity the Q statistic" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:value "solow" ;
                                    dc:description "solow - Estimator Solow's estimator" ],
                                [ gal:value "efron" ;
                                    dc:description "efron - Estimator Efron's estimator" ],
                                [ gal:value "logseries" ;
                                    dc:description "logseries - Statistical distribution tests whether observed data follow the log series distribution" ],
                                [ gal:selected "true" ;
                                    gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:selected "true" ;
                                    gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:selected "true" ;
                                    gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "bergerparker" ;
                                    dc:description "bergerparker - Community diversity the Berger-Parker index" ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:value "goodscoverage" ;
                                    dc:description "goodscoverage - Community diversity the Good's estimate of sampling coverage " ],
                                [ gal:selected "true" ;
                                    gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:value "geometric" ;
                                    dc:description "geometric - Statistical distribution tests whether observed data follow the geometric series distribution" ],
                                [ gal:value "shen" ;
                                    dc:description "shen - Estimator Shen's estimator" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ],
                                [ gal:value "boneh" ;
                                    dc:description "boneh - Estimator Boneh's estimator" ],
                                [ gal:selected "true" ;
                                    gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs (default 10)" ;
                            gal:min "0" ;
                            gal:name "abund" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:help "Use a decimal between 0 and 1 to set the frequency as a percentage of the number of sequences" ;
                            gal:label "freq - frequency for output (default is every 100 sequences)" ;
                            gal:min "0" ;
                            gal:name "freq" ;
                            gal:type "float" ;
                            gal:value "100" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Collect.single" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "otu\\.(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: calculators" ;
                            gal:name "calcfiles" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "7" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "0a9c8a52f89898c3b7b7b2dfa24a4521" ;
                                            gal:name "shannon" ] ;
                                    gal:name "calcfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.list" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with label select and all calculators " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "25" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "a38d430c52768efca597e5b41fc1d84b" ;
                                            gal:name "bstick" ] ;
                                    gal:name "calcfiles" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "0.36,0.38,0.41" ],
                                [ gal:ftype "mothur.sabund" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.sabund" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "calc" ;
                                    gal:value "ace,bootstrap,chao,jack,sobs,simpsoneven,shannoneven,heip,smithwilson,bergerparker,coverage,goodscoverage,simpson,invsimpson,qstat,shannon,npshannon,boneh,efron,shen,solow,logseries,geometric,bstick,nseqs" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "collect.single" ;
            schema:sku 120 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$flow' flow.dat &&
ln -s '$prob.lookup' lookup.dat &&

## Mothur can't handle scientific notation (i.e. 1e-6)
#set mindelta_decimal = "{:.12f}".format(float($mindelta))
echo 'shhh.flows(
    flow=flow.dat,
    lookup=lookup.dat,
    maxiter=$maxiter,
    mindelta=$mindelta_decimal,
    cutoff=$cutoff,
    sigma=$sigma,
    order=$order,
    large=$large,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Denoise flowgrams (PyroNoise algorithm)" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1038/nmeth.1361" ],
                        [ gal:type "doi" ;
                            dc:description "10.1371/journal.pone.0027310" ],
                        [ gal:type "doi" ;
                            dc:description "10.1186/1471-2105-12-38" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The shhh.flows_ command is Pat Schloss's translation of Chris Quince's PyroNoise algorithm [1] from C to C++ with the incorporation of mothur's bells and whistles. Based on processing of test datasets provided by Quince, shhh.flows gives the same/similar output to AmpliconNoise. shhh.flows uses a expectation-maximization algorithm to correct flowgrams to identify the idealized form of each flowgram and translate that flowgram to a DNA sequence. Our testing has shown that when Titanium data are trimmed to 450 flows using trim.flows, shhh.flows provides the highest quality data for any other method available. In contrast, when we use the min/max number of flows suggested by Quince of 360/720, the error rate is not that great. This much improved error rate does come at a computational cost. Whereas the features in trim.seqs take on the order of minutes, shhh.flows can take on the order of hours.  You will also need a lookup file that tells shhh.flows the probability of observing an intensity value for a given homopolymer length. You can get mothur-compatible files at: https://www.mothur.org/wiki/Lookup_files

.. _shhh.flows: https://www.mothur.org/wiki/Shhh.flows

    """ ;
            gal:id "mothur_shhh_flows" ;
            gal:inputs [ gal:conditional [ gal:name "prob" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Taxonomy from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "tabular" ;
                                            gal:help "table of the probability of observing an intensity value for a given homopolymer length" ;
                                            gal:label "lookup - intensity value per homopolymer length" ;
                                            gal:name "lookup" ;
                                            gal:options [ gal:from_data_table "mothur_lookup" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "tabular" ;
                                            gal:help "from https://www.mothur.org/wiki/Lookup_files" ;
                                            gal:label "lookup - intensity value per homopolymer length" ;
                                            gal:name "lookup" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:help "default .06 (usually doesn't need to be changed)" ;
                            gal:label "sigma - the dispersion of the data in the expectation-maximization step of the algorithm" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:name "sigma" ;
                            gal:type "float" ;
                            gal:value "0.06" ],
                        [ gal:help "default .01 (usually doesn't need to be changed)" ;
                            gal:label "cutoff - seed the expectation-maximizaton step" ;
                            gal:max "1.0" ;
                            gal:min "0.0" ;
                            gal:name "cutoff" ;
                            gal:type "float" ;
                            gal:value "0.01" ],
                        [ gal:help "default is A, was TACG. Also accepts B or I" ;
                            gal:label "order - flow order for nucleotides in the sequencer" ;
                            gal:name "order" ;
                            gal:type "text" ;
                            gal:value "A" ],
                        [ gal:format "mothur.sff.flow" ;
                            gal:help "Use sffinfo to generate flow data from an sff file and usually trimmed by trim.flows" ;
                            gal:label "flow - flowgram data" ;
                            gal:name "flow" ;
                            gal:type "data" ],
                        [ gal:help "if the delta value does not first drop below the mindelta value. " ;
                            gal:label "maxiter - maximum iterations to run (default 1000)" ;
                            gal:min "10" ;
                            gal:name "maxiter" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:help "default .000001 (10^-6)" ;
                            gal:label "mindelta - threshold for determining how much change in the flowgram correction is allowed" ;
                            gal:max "0.1" ;
                            gal:min "0.0" ;
                            gal:name "mindelta" ;
                            gal:type "float" ;
                            gal:value "0.000001" ],
                        [ gal:help "" ;
                            gal:label "large - split your flow file and process the pieces separately (default 10000)" ;
                            gal:min "1" ;
                            gal:name "large" ;
                            gal:type "integer" ;
                            gal:value "10000" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Shhh.flows" ;
            gal:outputs [ gal:data [ gal:format "qual454" ;
                            gal:from_work_dir "flow*.qual" ;
                            gal:label "${tool.name} on ${on_string}: shhh.qual" ;
                            gal:name "shhh_qual" ],
                        [ gal:format "mothur.groups" ;
                            gal:from_work_dir "flow*.groups" ;
                            gal:label "${tool.name} on ${on_string}: shhh.groups" ;
                            gal:name "shhh_groups" ],
                        [ gal:format "mothur.names" ;
                            gal:from_work_dir "flow*.names" ;
                            gal:label "${tool.name} on ${on_string}: shhh.names" ;
                            gal:name "shhh_names" ],
                        [ gal:format "fasta" ;
                            gal:from_work_dir "flow*.fasta" ;
                            gal:label "${tool.name} on ${on_string}: shhh.fasta" ;
                            gal:name "shhh_fasta" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "flow*.counts" ;
                            gal:label "${tool.name} on ${on_string}: shhh.counts" ;
                            gal:name "shhh_counts" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "9e7ba8213d039ba2360648c79f6380da" ;
                                    gal:name "shhh_fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "75a5293a71beeafe9f330e6f497ae350" ;
                                    gal:name "shhh_groups" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "71c8fd857b547f237e4215306762ab3d" ;
                                    gal:name "shhh_names" ],
                                [ gal:ftype "qual454" ;
                                    gal:md5 "3ff0e8f575adc95ced285cc1704097ef" ;
                                    gal:name "shhh_qual" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "2257f2079668a0f992a14e4576063cf0" ;
                                    gal:name "shhh_counts" ] ;
                            gal:param [ gal:ftype "mothur.sff.flow" ;
                                    gal:name "flow" ;
                                    gal:value "mock.flow" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "lookup" ;
                                    gal:value "LookUp_Titanium.pat" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "shhh.flows" ;
            schema:sku 42 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'reverse.seqs(
    fasta=fasta.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Reverse complement the sequences" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The reverse.seqs_ command will generate a fasta containing the reverse complement of each sequence in the input fasta.

.. _reverse.seqs: https://www.mothur.org/wiki/Reverse.seqs

    """ ;
            gal:id "mothur_reverse_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Sequences to reverse complement" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Reverse.seqs" ;
            gal:outputs [ gal:data [ gal:format_source "fasta" ;
                            gal:from_work_dir "fasta*.rc.*" ;
                            gal:label "${tool.name} on ${on_string}: rc.fasta" ;
                            gal:name "out_fasta" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.rc.align_head" ;
                                    gal:name "out_fasta" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "reverse.seqs" ;
            schema:sku 3 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&
ln -s '$alignment.template' alignment.template.dat &&
#if $qual.use == "yes":
    ln -s '$qual.qfile_in' qfile_in.dat &&
    ln -s '$qual.alignreport_in' alignreport_in.dat &&
#end if

echo 'seq.error(
    fasta=fasta_in.dat,
    reference=alignment.template.dat,
    #if $name_in:
        name=name_in.dat,
    #end if
    #if $qual.use == "yes":
        qfile=qfile_in.dat,
        report=alignreport_in.dat,
    #end if
    #if $threshold:
        threshold=$threshold,
    #end if
    ignorechimeras=$ignorechimeras,
    #if $count:
        count=count.dat,
    #end if
    #if $fasta_in.is_of_type('mothur.align')
        aligned=T,
    #else
        aligned=F,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "assess error rates in sequencing data" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1371/journal.pone.0027310" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The seq.error_ command evaluates error rate for sequences by comparing to the fasta-formatted template_alignment_.
This is demonstrated in https://mothur.org/wiki/miseq_sop/#assessing-error-rates

.. _template_alignment: https://www.mothur.org/wiki/Alignment_database
.. _seq.error: https://www.mothur.org/wiki/Seq.error

    """ ;
            gal:id "mothur_seq_error" ;
            gal:inputs [ gal:conditional [ gal:name "qual" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Include a quality file and an alignment report as inputs" ;
                                    gal:name "use" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "No" ],
                                        [ gal:value "yes" ;
                                            dc:description "Yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "no" ],
                                [ gal:param [ gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report" ;
                                            gal:name "alignreport_in" ;
                                            gal:type "data" ],
                                        [ gal:format "qual" ;
                                            gal:label "qfile - Fasta Quality" ;
                                            gal:name "qfile_in" ;
                                            gal:type "data" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignment" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "history" ;
                                            dc:description "Your History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:help "" ;
                                            gal:label "reference - Select an alignment database" ;
                                            gal:name "template" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.align,fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:name "template" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "ignorechimeras - " ;
                            gal:name "ignorechimeras" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.count_table" ;
                            gal:label "count table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:help "sequences must be aligned" ;
                            gal:label "fasta - Candidate Sequences" ;
                            gal:name "fasta_in" ;
                            gal:type "data" ],
                        [ gal:label "threshold - error rate at which to report (default 1.)" ;
                            gal:max "1" ;
                            gal:min "0" ;
                            gal:name "threshold" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Seq.error" ;
            gal:outputs [ gal:data [ gal:filter "'ref_query' in output_sel" ;
                            gal:format "mothur.align" ;
                            gal:from_work_dir "fasta_in*.error.ref" ;
                            gal:label "${tool.name} on ${on_string}: error.ref-query" ;
                            gal:name "ref_query_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qual['use'] == 'yes' and 'qual_reverse' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.qual.reverse" ;
                            gal:label "${tool.name} on ${on_string}: error.qual.reverse" ;
                            gal:name "qual_reverse_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'seq' in output_sel" ;
                            gal:format "fasta" ;
                            gal:from_work_dir "fasta_in*.error.seq" ;
                            gal:label "${tool.name} on ${on_string}: error.seq" ;
                            gal:name "seq_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'seq_forward' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.seq.forward" ;
                            gal:label "${tool.name} on ${on_string}: error.seq.forward" ;
                            gal:name "seq_forward_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qual['use'] == 'yes' and 'quality' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.quality" ;
                            gal:label "${tool.name} on ${on_string}: error.quality" ;
                            gal:name "quality_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "qual['use'] == 'yes' and 'qual_forward' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.qual.forward" ;
                            gal:label "${tool.name} on ${on_string}: error.qual.forward" ;
                            gal:name "qual_forward_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'matrix' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.matrix" ;
                            gal:label "${tool.name} on ${on_string}: error.matrix" ;
                            gal:name "matrix_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'summary' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.summary" ;
                            gal:label "${tool.name} on ${on_string}: error.summary" ;
                            gal:name "summary_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'chimera' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.chimera" ;
                            gal:label "${tool.name} on ${on_string}: error.chimera" ;
                            gal:name "chimera_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'count' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.count" ;
                            gal:label "${tool.name} on ${on_string}: error.count" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "'seq_reverse' in output_sel" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "fasta_in*.error.seq.reverse" ;
                            gal:label "${tool.name} on ${on_string}: error.seq.reverse" ;
                            gal:name "seq_reverse_out" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: "test with qual file and all outputs " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "69a8ec131df0b1d4d95eaeb04e057941" ;
                                    gal:name "seq_out" ],
                                [ gal:md5 "371fc760fc51b5adf10044fc26c1bbb8" ;
                                    gal:name "qual_forward_out" ],
                                [ gal:md5 "81f17617ba99cac5807e454a626eb006" ;
                                    gal:name "qual_reverse_out" ],
                                [ gal:md5 "ee987c7b5dc90d4d3a0ef55d817cc540" ;
                                    gal:name "count_out" ],
                                [ gal:md5 "844b50d6642381a7f434b8182b9307da" ;
                                    gal:name "quality_out" ],
                                [ gal:md5 "78e586f1a1362fd98808d7725d786caa" ;
                                    gal:name "chimera_out" ],
                                [ gal:md5 "6b9310b4acd95c560cd062b620b35826" ;
                                    gal:name "matrix_out" ],
                                [ gal:md5 "5618b1e431306ec1275f1572d6c0c2fc" ;
                                    gal:name "seq_reverse_out" ],
                                [ gal:md5 "d33bddf9b112f2f3a80b38cf7ac50e6a" ;
                                    gal:name "summary_out" ],
                                [ gal:md5 "dbcbbefdc83c2a7c045e3930850cdbd9" ;
                                    gal:name "seq_forward_out" ],
                                [ gal:md5 "dd569264c5a4628079de3ef828766e90" ;
                                    gal:name "ref_query_out" ] ;
                            gal:param [ gal:name "alignreport_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align.report" ],
                                [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "template" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "output_sel" ;
                                    gal:value "summary,seq,seq_forward,seq_reverse,chimera,count,matrix,ref_query,quality,qual_forward,qual_reverse" ],
                                [ gal:name "qfile_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ],
                                [ gal:name "source" ;
                                    gal:value "history" ] ],
                        [ gal: "test with all outputs and no qual file" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "92a24ef3155bc050ae4fd31bab43cf92" ;
                                    gal:name "seq_reverse_out" ],
                                [ gal:md5 "b7d9bbf3cdf363b41551e31c0b460a47" ;
                                    gal:name "matrix_out" ],
                                [ gal:md5 "9faf0da7d724a1db5e0d8f5fcb72b486" ;
                                    gal:name "chimera_out" ],
                                [ gal:md5 "04abbbd6aa82f084e4a3bd51c4ce98e6" ;
                                    gal:name "summary_out" ],
                                [ gal:md5 "5a884846a8d94b8482c2935d2e7e43e6" ;
                                    gal:name "seq_out" ],
                                [ gal:md5 "92a24ef3155bc050ae4fd31bab43cf92" ;
                                    gal:name "seq_forward_out" ],
                                [ gal:md5 "9aea787346ad6a1c496aa1d77262a487" ;
                                    gal:name "count_out" ],
                                [ gal:md5 "42b42eb4c6bc2705ded2c697a757106f" ;
                                    gal:name "ref_query_out" ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta_in" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "output_sel" ;
                                    gal:value "summary,seq,seq_forward,seq_reverse,chimera,count,matrix,ref_query" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "template" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "seq.error" ;
            schema:sku 78 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&
ln -s '$map' map.dat &&

echo 'align.check(
    fasta=fasta.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    map=map.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
&& cat fasta.align.check
    """ ;
            gal:description "Calculate the number of potentially misaligned bases" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The align.check_ command allows you to calculate the number of potentially misaligned bases in a 16S rRNA gene sequence
alignment using a secondary_structure_map_.  If you are familiar with the editor window in ARB, this is the same as
counting the number of ~, #, -, and = signs.

.. _secondary_structure_map: https://www.mothur.org/wiki/Secondary_structure_map
.. _align.check: https://www.mothur.org/wiki/Align.check

    """ ;
            gal:id "mothur_align_check" ;
            gal:inputs [ gal:conditional [ gal:name "ss" ;
                            gal:param [ gal:label "Select Secondary Structure Map from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "history" ;
                                            dc:description "Your History" ],
                                        [ gal:value "cached" ;
                                            dc:description "Cached Secondary Structure Maps" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "map" ;
                                            gal:label "Secondary structure map" ;
                                            gal:options [ gal:from_data_table "mothur_map" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "cached" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "map" ;
                                            gal:format "mothur.map" ;
                                            gal:label "Secondary Structure Map" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "mothur.align" ;
                            gal:label "fasta - Aligned Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:help "You can also provide a name file associated with your fasta file" ;
                            gal:label "count_table file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence" ;
                            gal:label "names file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Align.check" ;
            gal:outputs [ gal:data [ gal:format "mothur.align.check" ;
                            gal:from_work_dir "fasta.align.check" ;
                            gal:label "${tool.name} on ${on_string}: align.check" ;
                            gal:name "align.check" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-aligncheck-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.check" ;
                                    gal:name "align.check" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.align_head_short" ],
                                [ gal:name "map" ;
                                    gal:value "silva.ss.map.head" ] ],
                        [ gal: " test with names file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-aligncheck-format" ] ;
                                            gal:has_text [ gal:text "U68589" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.check" ;
                                    gal:name "align.check" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "name" ;
                                    gal:value "amazon.align_head.names" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.align_head_short" ],
                                [ gal:name "map" ;
                                    gal:value "silva.ss.map.head" ],
                                [ gal:name "source" ;
                                    gal:value "history" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "align.check" ;
            schema:sku 118 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$qfile' qfile.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'summary.qual(
    qfile=qfile.dat
    #if $name:
        ,name=name.dat
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Summarize the quality scores" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The summary.qual_ command reads a quality file and an optional name, and summarizes the quality information.

.. _summary.qual: https://www.mothur.org/wiki/Summary.qual

    """ ;
            gal:id "mothur_summary_qual" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.names" ;
                            gal:label "name - Names" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "qual" ;
                            gal:label "qfile - Sequence Quality file" ;
                            gal:name "qfile" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Summary.qual" ;
            gal:outputs [ gal:data [ gal:format "mothur.summary" ;
                            gal:from_work_dir "qfile*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "out_summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "04de7c9d0f3889d5e121db9d9070c935" ;
                                    gal:name "out_summary" ] ;
                            gal:param [ gal:name "qfile" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.qual" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "summary.qual" ;
            schema:sku 39 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' shared.dat &&

echo 'get.communitytype(
    shared=shared.dat,
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    #if $groups:
        groups=${ str($groups).replace(",","-") },
    #end if
    method=$m.method,
    #if $m.method == 'kmeans' or $m.method == 'pams':
        calc=$m.calc,
        iters=$m.iters,
    #end if
    #if int($subsample) == 0:
        subsample=T,
    #elif int($subsample) > 0:
        subsample=$subsample,
    #end if
    minpartitions=$minpartitions,
    maxpartitions=$maxpartitions,
    optimizegap=$optimizegap,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "description" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1371/journal.pone.0030126" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ] ;
            gal:help """
@MOTHUR_OVERVIEW@


**Command Documentation**


.. _get.communitytype: https://www.mothur.org/wiki/Get.communitytype
    """ ;
            gal:id "mothur_get_communitytype" ;
            gal:inputs [ gal:conditional [ gal:name "m" ;
                            gal:param [ gal:label "method" ;
                                    gal:name "method" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "dmm" ;
                                            dc:description "dmm" ],
                                        [ gal:value "kmeans" ;
                                            dc:description "k means" ],
                                        [ gal:value "pam" ;
                                            dc:description "pam" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "dmm" ],
                                [ gal:param [ gal: " set default option(s) " ;
                                            gal:expand [ gal:macro "calc-common" ] ;
                                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:name "calc" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "rjsd" ;
                                                    dc:description "rjsd" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:help "" ;
                                            gal:label "iters - number of iterations" ;
                                            gal:min "0" ;
                                            gal:name "iters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ] ;
                                    gal:value "kmeans" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal: " set default option " ;
                                            gal:expand [ gal:macro "calc-common" ] ;
                                            gal:label "calc - Calculators (Uses defaults if none selected)" ;
                                            gal:name "calc" ;
                                            gal:option [ gal:selected "true" ;
                                                    gal:value "rjsd" ;
                                                    dc:description "rjsd" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:help "" ;
                                            gal:label "iters - number of iterations" ;
                                            gal:min "0" ;
                                            gal:name "iters" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ] ;
                                    gal:value "pam" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "groups - Groups to consider" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "otu" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:name "optimizegap" ;
                            gal:type "integer" ;
                            gal:value "3" ],
                        [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:optional "true" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:name "minpartitions" ;
                            gal:type "integer" ;
                            gal:value "5" ],
                        [ gal:format "mothur.shared" ;
                            gal:label "shared - Shared file" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "Ignored if negative, when set to 0 it uses the size of your smallest group (subsample=T)" ;
                            gal:label "subsample" ;
                            gal:min "-1" ;
                            gal:name "subsample" ;
                            gal:type "integer" ;
                            gal:value "-1" ],
                        [ gal:help "" ;
                            gal:label "minpartitions" ;
                            gal:min "0" ;
                            gal:name "maxpartitions" ;
                            gal:type "integer" ;
                            gal:value "10" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.communitytype" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.relabund" ;
                                    gal:pattern "shared\\.(?P<designation>.*)\\.relabund" ] ;
                            gal:label "${tool.name} on ${on_string}: relabund" ;
                            gal:name "relabund" ;
                            gal:type "list" ;
                            dc:description """
            """ ],
                        [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern "shared\\.(?P<designation>.*)\\.posterior" ] ;
                            gal:label "${tool.name} on ${on_string}: posterior" ;
                            gal:name "posterior" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter " m['method'] == 'dmm' " ;
                            gal:format "tabular" ;
                            gal:from_work_dir "shared*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "shared*.fit" ;
                            gal:label "${tool.name} on ${on_string}: fit" ;
                            gal:name "fit" ],
                        [ gal:filter " m['method'] == 'dmm' " ;
                            gal:format "tabular" ;
                            gal:from_work_dir "shared*.parameters" ;
                            gal:label "${tool.name} on ${on_string}: parameters" ;
                            gal:name "parameters" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "shared*.design" ;
                            gal:label "${tool.name} on ${on_string}: design" ;
                            gal:name "design" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "3e81c01da5f6c86b69516e204ad51610" ;
                                    gal:name "summary" ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "ef972523811b80b12d4343f0df472214" ;
                                    gal:name "parameters" ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "K\\tNLE\\tlogDet\\tBIC\\tAIC\\tLaplace" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "fit" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "df00e5ea21154669bbb85efa20a9661d" ;
                                    gal:name "design" ] ;
                            gal:output_collection [ gal:count "5" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "fae04096d53d6980d8eb712e6ec8b0d2" ;
                                            gal:name "1.dmm.1.mix" ] ;
                                    gal:name "posterior" ;
                                    dc:description """
                """ ],
                                [ gal:count "5" ;
                                    gal:element [ gal:ftype "mothur.relabund" ;
                                            gal:md5 "9c338b1fb5aea4baae2dbf242331d27c" ;
                                            gal:name "1.dmm.1.mix" ] ;
                                    gal:name "relabund" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ] ],
                        [ gal: " test with all settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "F003D000" ],
                                                [ gal:text "Partition_" ],
                                                [ gal:text "F003D142" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "design" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_line_matching [ gal:expression "K\\tCH\\tF003D000\\tF003D002\\tF003D006\\tF003D008\\tF003D142" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "fit" ;
                                    dc:description """
                """ ] ;
                            gal:output_collection [ gal:count "4" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "43f4dfc2bcd1cf20db4f89ee90b6041c" ;
                                            gal:name "1.kmeans.1.mix" ] ;
                                    gal:name "posterior" ;
                                    dc:description """
                """ ],
                                [ gal:count "4" ;
                                    gal:element [ gal:ftype "mothur.relabund" ;
                                            gal:md5 "514780678b8d9413566df3355d427e27" ;
                                            gal:name "1.kmeans.1.mix" ] ;
                                    gal:name "relabund" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "label" ;
                                    gal:value "1" ],
                                [ gal:name "iters" ;
                                    gal:value "100" ],
                                [ gal:name "calc" ;
                                    gal:value "manhattan" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "final.tx.1.subsample.1.pick.shared" ],
                                [ gal:name "method" ;
                                    gal:value "kmeans" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "F003D000,F003D002,F003D006,F003D008,F003D142" ],
                                [ gal:name "subsample" ;
                                    gal:value "0" ],
                                [ gal:name "maxpartitions" ;
                                    gal:value "4" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.communitytype" ;
            schema:sku 73 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## enable mothur to find blast
ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.reference' alignment.reference.dat &&

echo 'align.seqs(
    fasta=fasta.dat,
    reference=alignment.reference.dat,
    align=$align,
    #if $search.method == "kmer":
        ksize=$search.ksize,
    #else:
        search=$search.method,
    #end if
    #if $scoring.adjust == "yes":
        match=$scoring.match,
        mismatch=$scoring.mismatch,
        gapopen=$scoring.gapopen,
        gapextend=$scoring.gapextend,
    #end if
    #if $reverse.flip == "yes":
        flip=true,
        threshold=$reverse.threshold,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:description "Align sequences to a template alignment" ;
            gal:expand [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1093/nar/gkl244" ],
                        [ gal:type "doi" ;
                            dc:description "10.1371/journal.pcbi.1000844" ],
                        [ gal:type "doi" ;
                            dc:description "10.1371/journal.pone.0008230" ] ;
                    gal:macro "citations" ;
                    dc:description """
         """ ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The align.seqs_ command aligns a user-supplied fasta-formatted fasta sequence file to a user-supplied fasta-formatted template_alignment_.

The general approach is to
 i) find the closest template for each fasta using kmer searching, blastn, or suffix tree searching;
 ii) to make a pairwise alignment between the fasta and de-gapped template sequences using the Needleman-Wunsch, Gotoh,or blastn algorithms; and
 iii) to re-insert gaps to the fasta and template pairwise alignments using the NAST algorithm so that the fasta sequence alignment is compatible with the original template alignment.

In general the alignment is very fast - we are able to align over 186,000 full-length sequences to the SILVA alignment
in less than 3 hrs with a quality as good as the SINA aligner. Furthermore, this rate can be accelerated using multiple
processors. While the aligner doesn't explicitly take into account the secondary structure of the 16S rRNA gene, if the
template database is based on the secondary structure, then the resulting alignment will at least be implicitly based
on the secondary structure.

.. _template_alignment: https://www.mothur.org/wiki/Alignment_database
.. _align.seqs: https://www.mothur.org/wiki/Align.seqs

    """ ;
            gal:id "mothur_align_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "alignment" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "history" ;
                                            dc:description "Your History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:help "" ;
                                            gal:label "reference - Select an alignment database " ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:type "data" ] ;
                                    gal:value "history" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "search" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Select a search method" ;
                                    gal:name "method" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "kmer" ;
                                            dc:description "kmer (default)" ],
                                        [ gal:value "blast" ;
                                            dc:description "blast" ],
                                        [ gal:value "suffix" ;
                                            dc:description "suffix tree" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:value "blast" ],
                                [ gal:value "suffix" ],
                                [ gal:param [ gal:argument "ksize" ;
                                            gal:label "ksize - kmer length between 5 and 12" ;
                                            gal:max "12" ;
                                            gal:min "5" ;
                                            gal:type "integer" ;
                                            gal:value "8" ] ;
                                    gal:value "kmer" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "reverse" ;
                            gal:param [ gal:argument "flip" ;
                                    gal:help "" ;
                                    gal:label "flip - Try to align against the reverse complement" ;
                                    gal:option [ gal:value "yes" ;
                                            dc:description "Yes values" ],
                                        [ gal:value "no" ;
                                            dc:description "No" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "threshold" ;
                                            gal:help "The default for the threshold parameter is 0.50, meaning at least 50% of the bases must remain or the sequence is reported as potentially reversed" ;
                                            gal:label "threshold - Cutoff (0. - 1.) at which an alignment is deemed 'bad' and the reverse complement may be tried." ;
                                            gal:max "1.0" ;
                                            gal:min "0.0" ;
                                            gal:type "float" ;
                                            gal:value "0.5" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ],
                        [ gal:name "scoring" ;
                            gal:param [ gal:label "Alignment scoring values" ;
                                    gal:name "adjust" ;
                                    gal:option [ gal:value "no" ;
                                            dc:description "use defaults" ],
                                        [ gal:value "yes" ;
                                            dc:description "adjust values" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "gapextend" ;
                                            gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-2" ],
                                        [ gal:argument "mismatch" ;
                                            gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                            gal:type "integer" ;
                                            gal:value "-1" ],
                                        [ gal:argument "gapopen" ;
                                            gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                            gal:type "integer" ;
                                            gal:value "-5" ],
                                        [ gal:argument "match" ;
                                            gal:label "match - Pairwise alignment reward for a match" ;
                                            gal:type "integer" ;
                                            gal:value "1" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "align" ;
                            gal:label "align - Select a pairwise alignment method" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "needleman" ;
                                    dc:description "needleman (default)" ],
                                [ gal:value "blast" ;
                                    dc:description "blast" ],
                                [ gal:value "gotoh" ;
                                    dc:description "gotoh" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Align.seqs" ;
            gal:outputs [ gal:data [ gal:filter "reverse['flip'] == 'yes'" ;
                            gal:format "mothur.accnos" ;
                            gal:from_work_dir "fasta.flip.accnos" ;
                            gal:label "${tool.name} on ${on_string}: flip.accnos" ;
                            gal:name "flip_accnos" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.align" ;
                            gal:from_work_dir "fasta.align" ;
                            gal:label "${tool.name} on ${on_string}: align" ;
                            gal:name "out_align" ],
                        [ gal:format "mothur.align.report" ;
                            gal:from_work_dir "fasta.align.report" ;
                            gal:label "${tool.name} on ${on_string}: align.report" ;
                            gal:name "report" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.good.align.report" ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "report" ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-align-format" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:md5 "c500a4ae34a16884171f5f9c91f1636b" ;
                                    gal:name "out_align" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-alignreport-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "report" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-align-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:name "out_align" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "match" ;
                                    gal:value "2" ],
                                [ gal:name "method" ;
                                    gal:value "kmer" ],
                                [ gal:name "mismatch" ;
                                    gal:value "-15" ],
                                [ gal:name "gapextend" ;
                                    gal:value "-3" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "adjust" ;
                                    gal:value "yes" ],
                                [ gal:name "gapopen" ;
                                    gal:value "-6" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ] ;
                            dc:description """
            """ ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-align-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:name "out_align" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-alignreport-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "report" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "method" ;
                                    gal:value "suffix" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "adjust" ;
                                    gal:value "yes" ],
                                [ gal:name "align" ;
                                    gal:value "gotoh" ],
                                [ gal:name "gapopen" ;
                                    gal:value "-6" ],
                                [ gal:name "match" ;
                                    gal:value "2" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "mismatch" ;
                                    gal:value "-15" ],
                                [ gal:name "gapextend" ;
                                    gal:value "-3" ] ;
                            dc:description """
            """ ],
                        [ gal: " test accno file recovery with flip set to true " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "reverse complement" ],
                                                [ gal:text "U68621" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.accnos" ;
                                    gal:md5 "afd8e7629be76baa74451b91423aaa2f" ;
                                    gal:name "flip_accnos" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-align-format" ] ;
                                            gal:has_text [ gal:text "U68621" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:name "out_align" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-alignreport-format" ] ;
                                            gal:has_text [ gal:text "U68621" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "report" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "source" ;
                                    gal:value "history" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "flip" ;
                                    gal:value "yes" ],
                                [ gal:name "threshold" ;
                                    gal:value "0.5" ] ],
                        [ gal: " test blast " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-align-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align" ;
                                    gal:name "out_align" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-alignreport-format" ] ;
                                            gal:has_text [ gal:text "M00967_43_000000000-A3JHG_1_1101_19936_3208" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.align.report" ;
                                    gal:name "report" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "threshold" ;
                                    gal:value "0.5" ],
                                [ gal:name "reference" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "align" ;
                                    gal:value "blast" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.good.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "flip" ;
                                    gal:value "yes" ],
                                [ gal:name "method" ;
                                    gal:value "blast" ],
                                [ gal:name "source" ;
                                    gal:value "history" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "align.seqs" ;
            schema:sku 107 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$tree' tree.dat &&
ln -s '$group' group.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'unifrac.weighted(
    tree=tree.dat,
    #if $group:
        group=group.dat,
        #if $groups:
            groups=${ str($groups).replace(",","-") },
        #end if
    #end if
    #if $name:
        name=name.dat,
    #end if
    iters=$iters,
    #if $subsampling.use == "yes":
        #if $subsampling.subsample:
            subsample=$subsampling.subsample,
        #else
            subsample=T,
        #end if
        consensus=$subsampling.consensus,
    #else
        random=$random,
    #end if
    #if $distance:
        distance=$distance,
    #end if
    #if $count:
        count=count.dat,
    #end if
    root=$root,
    processors='\\${GALAXY_SLOTS:-1}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## rename some datasets
#if $subsampling.use == "yes":
    && mv tree.*.ave.dist tree.ave
    && mv tree.*.std.dist tree.std
#end if
    """ ;
            gal:description "Describes whether two or more communities have the same structure" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1128/AEM.71.12.8228-8235.2005" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The unifrac.weighted_ command implements the weighted UniFrac algorithm. The unifrac.unweighted command implements the unweighted version of the command. Both of these methods are available through the UniFrac website. The UniFrac methods are generic tests that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _unifrac.weighted: https://www.mothur.org/wiki/Unifrac.weighted

    """ ;
            gal:id "mothur_unifrac_weighted" ;
            gal:inputs [ gal:conditional [ gal:name "subsampling" ;
                            gal:param [ gal:help "(instead of randomly generated comparisons)" ;
                                    gal:label "use subsampling of groups?" ;
                                    gal:name "use" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "no" ;
                                            dc:description "no" ],
                                        [ gal:value "yes" ;
                                            dc:description "yes" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:checked "false" ;
                                            gal:falsevalue "false" ;
                                            gal:help "The consensus parameter allows you to indicate you would like trees built from distance matrices created with the results of the subsampling, as well as a consensus tree built from these trees. Default=F" ;
                                            gal:label "consensus - " ;
                                            gal:name "consensus" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:help "the size per group of the sample" ;
                                            gal:label "subsample - (defaults to the size of the smallest group)" ;
                                            gal:min "1" ;
                                            gal:name "subsample" ;
                                            gal:optional "true" ;
                                            gal:type "integer" ;
                                            gal:value "" ] ;
                                    gal:value "yes" ;
                                    dc:description """
                """ ],
                                [ gal:value "no" ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:help "unused if subsample=True" ;
                            gal:label "random - Compare your trees with randomly generated trees" ;
                            gal:name "random" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "generated by count.seqs" ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:help "You must select at least 2 groups" ;
                            gal:label "groups - Select groups for pairwise comparisons" ;
                            gal:multiple "true" ;
                            gal:name "groups" ;
                            gal:optional "true" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "group" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.tre" ;
                            gal:label "tree - Tree" ;
                            gal:name "tree" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names file for the tree" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of iterations to try (default 1000)" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:label "distance - Create a distance matrix for your history" ;
                            gal:name "distance" ;
                            gal:option [ gal:value "square" ;
                                    dc:description "Phylip Square Matrix" ],
                                [ gal:selected "true" ;
                                    gal:value "lt" ;
                                    dc:description "Phylip Lower Triangle Matrix" ],
                                [ gal:value "column" ;
                                    dc:description "Pairwise Distance Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Group file for the tree" ;
                            gal:name "group" ;
                            gal:type "data" ],
                        [ gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "root - the entire root in your calculations" ;
                            gal:name "root" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "unifrac.weighted" ;
            gal:outputs [ gal:data [ gal:change_format [ gal:when [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ] ;
                                    dc:description """
                """ ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.ave" ;
                            gal:label "${tool.name} on ${on_string}: ave.dist" ;
                            gal:name "ave_dist" ;
                            dc:description """
            """ ],
                        [ gal:filter "(random and subsampling['use'] == 'no')" ;
                            gal:format "tabular" ;
                            gal:from_work_dir "tree*.weighted" ;
                            gal:label "${tool.name} on ${on_string}: weighted" ;
                            gal:name "weighted" ;
                            dc:description """
            """ ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ],
                                        [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ] ;
                                    dc:description """
                """ ] ;
                            gal:filter "subsampling['use'] == 'yes'" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.std" ;
                            gal:label "${tool.name} on ${on_string}: std.dist" ;
                            gal:name "std_dist" ;
                            dc:description """
            """ ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.cons.tre" ;
                            gal:label "${tool.name} on ${on_string}: cons.tre" ;
                            gal:name "cons_tree" ;
                            dc:description """
            """ ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tree*wsummary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "summary" ],
                        [ gal:filter "(subsampling['use'] == 'yes' and subsampling['consensus'])" ;
                            gal:format "mothur.tre" ;
                            gal:from_work_dir "tree*.all.tre" ;
                            gal:label "${tool.name} on ${on_string}: all.tre" ;
                            gal:name "all_tree" ;
                            dc:description """
            """ ],
                        [ gal:change_format [ gal:when [ gal:format "mothur.pair.dist" ;
                                            gal:input "distance" ;
                                            gal:value "column" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "distance" ;
                                            gal:value "square" ] ;
                                    dc:description """
                """ ] ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "tree.dat*.dist " ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:name "dist" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with random and no subsampling " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "a29236de2d96703e504e667b73cba790" ;
                                    gal:name "summary" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "A-CRandFreq" ],
                                                [ gal:text "B-CRandCumul" ],
                                                [ gal:text "A-BScore" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "weighted" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "mothur.lower.dist" ;
                                    gal:md5 "3660f333ac1326c8df213d1d3af1f865" ;
                                    gal:name "dist" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "random" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:name "groups" ;
                                    gal:value "A,B,C" ] ],
                        [ gal: " test with defaults " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "f723493c1b909f5dbe5688d36be9fe73" ;
                                    gal:name "summary" ],
                                [ gal:ftype "mothur.lower.dist" ;
                                    gal:md5 "3660f333ac1326c8df213d1d3af1f865" ;
                                    gal:name "dist" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "groups" ;
                                    gal:value "A,B,C" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ] ],
                        [ gal: " test with group file and group select " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "tabular" ;
                                    gal:md5 "c253d4a3225804ad24b6c2e3a1095040" ;
                                    gal:name "summary" ],
                                [ gal:ftype "mothur.square.dist" ;
                                    gal:md5 "7df2d4a2e69b9c1259d39fe59165734f" ;
                                    gal:name "dist" ] ;
                            gal:param [ gal:name "groups" ;
                                    gal:value "A,B" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ],
                                [ gal:name "distance" ;
                                    gal:value "square" ] ],
                        [ gal: " test with subsample and consensus " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.pair.dist" ;
                                    gal:md5 "f017b1d7c7de38f4b90a1d8e07c8605c" ;
                                    gal:name "dist" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "B" ],
                                                [ gal:text "A" ],
                                                [ gal:text "C" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tre" ;
                                    gal:name "cons_tree" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "A" ],
                                                [ gal:text "B" ],
                                                [ gal:text "C" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tre" ;
                                    gal:name "all_tree" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "A" ],
                                                [ gal:text "B" ],
                                                [ gal:text "C" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "std_dist" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "A" ],
                                                [ gal:text "C" ],
                                                [ gal:text "B" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.pair.dist" ;
                                    gal:name "ave_dist" ;
                                    dc:description """
                """ ],
                                [ gal:ftype "tabular" ;
                                    gal:md5 "f723493c1b909f5dbe5688d36be9fe73" ;
                                    gal:name "summary" ] ;
                            gal:param [ gal:name "use" ;
                                    gal:value "yes" ],
                                [ gal:name "groups" ;
                                    gal:value "A,B,C" ],
                                [ gal:name "consensus" ;
                                    gal:value "true" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "subsample" ;
                                    gal:value "10" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:name "distance" ;
                                    gal:value "column" ],
                                [ gal:ftype "mothur.tre" ;
                                    gal:name "tree" ;
                                    gal:value "abrecovery.tre" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "unifrac.weighted" ;
            schema:sku 20 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$name' name.dat &&
ln -s '$count' count.dat &&

echo 'summary.seqs(
    fasta=fasta.dat,
    #if $name:
        name=name.dat,
    #end if
    #if $count:
        count=count.dat,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Summarize the quality of sequences" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The summary.seqs_ command will summarize the quality of sequences in an unaligned or aligned fasta-formatted sequence file.


.. _summary.seqs: https://www.mothur.org/wiki/Summary.seqs

    """ ;
            gal:id "mothur_summary_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. " ;
                            gal:label "count - a count_table" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Names" ;
                            gal:name "name" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "fasta,mothur.align" ;
                            gal:label "fasta - Dataset" ;
                            gal:name "fasta" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Summary.seqs" ;
            gal:outputs [ gal:data [ gal:format "mothur.summary" ;
                            gal:from_work_dir "fasta*.summary" ;
                            gal:label "${tool.name} on ${on_string}: summary" ;
                            gal:name "out_summary" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test names input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.summary" ;
                                    gal:md5 "b8a53926f64434291d232d2736da8293" ;
                                    gal:name "out_summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:name "name" ;
                                    gal:value "amazon.names" ] ],
                        [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "Mock_S280_L001_R1_001_small.trim.contigs.summary" ;
                                    gal:ftype "mothur.summary" ;
                                    gal:name "out_summary" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "fasta" ;
                                    gal:value "Mock_S280_L001_R1_001_small.trim.contigs.fasta" ] ;
                            dc:description """
            """ ],
                        [ gal: " test count input " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.summary" ;
                                    gal:md5 "b8a53926f64434291d232d2736da8293" ;
                                    gal:name "out_summary" ] ;
                            gal:param [ gal:name "count" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "fasta" ;
                                    gal:value "amazon.unique.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "summary.seqs" ;
            schema:sku 19 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$search.input' search.input.dat &&

echo 'list.seqs(
    #if $search.intype == "fasta":
        fasta=search.input.dat
    #elif $search.intype == "fastq":
        fastq=search.input.dat
    #elif $search.intype == "name":
        name=search.input.dat
    #else if $search.intype == "group":
        group=search.input.dat
    #elif $search.intype == "alignreport":
        alignreport=search.input.dat
    #elif $search.intype == "list":
        list=search.input.dat
    #elif $search.intype == "taxonomy":
        taxonomy=search.input.dat
    #elif $search.intype == "count":
        count=search.input.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Lists the names (accnos) of the sequences" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The list.seqs_ command writes out the names of the sequences found within a fasta, name_, group_, list_, align.report_ or taxonomy_ file.

.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _list.seqs: https://www.mothur.org/wiki/list.seqs

v.1.20.0: Updated to mothur 1.33, added count and fastq option

    """ ;
            gal:id "mothur_list_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "search" ;
                            gal:param [ gal:help "" ;
                                    gal:label "Type to list" ;
                                    gal:name "intype" ;
                                    gal:option [ gal:value "taxonomy" ;
                                            dc:description "Sequence Taxonomy" ],
                                        [ gal:value "fastq" ;
                                            dc:description "Sequence Fastq" ],
                                        [ gal:value "list" ;
                                            dc:description "OTU List" ],
                                        [ gal:value "group" ;
                                            dc:description "Groups" ],
                                        [ gal:value "fasta" ;
                                            dc:description "Sequence Fasta" ],
                                        [ gal:value "count" ;
                                            dc:description "Count Table" ],
                                        [ gal:value "alignreport" ;
                                            dc:description "Align Report" ],
                                        [ gal:value "name" ;
                                            dc:description "Sequences Name reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.count_table" ;
                                            gal:label "count - Count Table" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "count" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - OTU List" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "list" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "fastq" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "fastq" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Sequence Taxonomy" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "taxonomy" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "fasta" ;
                                            gal:label "fasta - Fasta" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "fasta" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.names" ;
                                            gal:label "name - Names" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "name" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.groups" ;
                                            gal:label "group - Groups" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "group" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.align.report" ;
                                            gal:label "alignreport - Align Report" ;
                                            gal:name "input" ;
                                            gal:type "data" ] ;
                                    gal:value "alignreport" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "List.seqs" ;
            gal:outputs [ gal:data [ gal:format "mothur.accnos" ;
                            gal:from_work_dir "search.input*.accnos" ;
                            gal:label "${tool.name} on ${on_string}: accnos" ;
                            gal:name "accnos" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with count file " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "360dfea2de2da4d55e75071b026c83b6" ;
                                    gal:name "accnos" ] ;
                            gal:param [ gal:name "intype" ;
                                    gal:value "count" ],
                                [ gal:name "input" ;
                                    gal:value "amazon.count_table" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with fasta " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.accnos" ;
                                    gal:md5 "590f62ce757219c2e137a532fcd814d1" ;
                                    gal:name "accnos" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "intype" ;
                                    gal:value "fasta" ],
                                [ gal:name "input" ;
                                    gal:value "amazon.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "list.seqs" ;
            schema:sku 45 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$shared' shared.dat &&

echo 'get.group(
    shared=shared.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log &&

## parse relevant output from logfile to file
cat mothur.*.logfile
| head -n-6
| sed '1,30d'
> "$bootgroups"
    """ ;
            gal:description "group names from shared or from list and group" ;
            gal:expand [ gal:macro "citations" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The get.group_ command generate principle components plot data.

.. _get.group: https://www.mothur.org/wiki/Get.group

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_get_group" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "shared" ;
                            gal:format "mothur.shared" ;
                            gal:label "shared - OTU Shared" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Get.group" ;
            gal:outputs [ gal:data [ gal:format "mothur.groups" ;
                            gal:label "${tool.name} on ${on_string}: bootGroups" ;
                            gal:name "bootgroups" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "93b9f7ead2ee04f056e77b5bb94ea0dd" ;
                                    gal:name "bootgroups" ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "shared" ;
                                    gal:value "amazon.an.shared" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "get.group" ;
            schema:sku 125 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$phylip' phylip.dat &&
ln -s '$design' design.dat &&

echo 'anosim(
    phylip=phylip.dat,
    iters=$iters,
    alpha=$alpha,
    design=design.dat
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Non-parametric multivariate analysis of changes in community structure" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1111/j.1442-9993.1993.tb00438.x" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The anosim_ command uses a phylip_distance_matrix_ and a design file to calculate the non-parametric multivariate analysis of changes in community structure.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
        ======= =======
        duck    bird
        cow     mammal
        pig     mammal
        goose   bird
        cobra   reptile
        ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.


.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _anosim: https://www.mothur.org/wiki/Anosim

    """ ;
            gal:id "mothur_anosim" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "alpha" ;
                            gal:help "default: 0.05" ;
                            gal:label "alpha - acceptable stopping precision" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:argument "design" ;
                            gal:format "tabular" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:type "data" ],
                        [ gal:argument "iters" ;
                            gal:help "default: 1000" ;
                            gal:label "iters - Number of random configuration to try" ;
                            gal:min "0" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:argument "phylip" ;
                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Anosim" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "phylip.anosim" ;
                            gal:label "${tool.name} on ${on_string}: anosim" ;
                            gal:name "anosim" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^comparison\\tR-value\\tP-value$" ],
                                                [ gal:expression "^A-B\\t[0-9\\.\\-]+\\t[0-9\\.]+$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "anosim" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "phylip" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "design" ;
                                    gal:value "amazon.design" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "anosim" ;
            schema:sku 54 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

#import re
## create symlinks to input datasets
ln -s '$file.taxonomy' file.taxonomy.dat &&
#if $file.filetype == "useconstaxonomy":
    ln -s '$file.shared' file.shared.dat &&
    ln -s '$file.list' file.list.dat &&
#end if
ln -s '$fasta_in' fasta_in.dat &&
ln -s '$group_in' group_in.dat &&
ln -s '$alignreport_in' alignreport_in.dat &&
ln -s '$list_in' list_in.dat &&
ln -s '$name_in' name_in.dat &&
ln -s '$count' count.dat &&

echo 'remove.lineage(
    #if $file.filetype == "usetaxonomy":
        taxonomy=file.taxonomy.dat
    #else
        constaxonomy=file.taxonomy.dat
        #if $file.shared:
            ,shared=file.shared.dat
        #end if
        #if $file.list:
            ,list=file.list.dat
        #end if
    #end if
    #if $file.taxons:
        #set taxonstring=str($file.taxons).replace(",","-")
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxonstring ))'"'
    #elif $taxon:
        ,taxon='"'$re.sub("(\\s|,)+",",",$re.sub("\\(\\d+\\)","", $taxon.value )).replace(",","-")'"'
    #end if
    #if $fasta_in:
        ,fasta=fasta_in.dat
    #end if
    #if $group_in:
        ,group=group_in.dat
    #end if
    #if $alignreport_in:
        ,alignreport=alignreport_in.dat
    #end if
    #if $list_in:
        ,list=list_in.dat
    #end if
    #if $name_in:
        ,name=name_in.dat
        ,dups=$dups
    #end if
    #if $count:
        ,count=count.dat
    #end if
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Picks by taxon" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "citations" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The remove.lineage_ command reads a taxonomy_ file and a taxon and generates a new file that contains only the sequences in the that are not from that taxon. You may also include either a fasta, name_, group_, list_, or align.report_ file to this command and mothur will generate new files for each of those containing only the selected sequences.

.. _taxonomy: https://www.mothur.org/wiki/Taxonomy_outline
.. _name: https://www.mothur.org/wiki/Name_file
.. _group: https://www.mothur.org/wiki/Group_file
.. _list: https://www.mothur.org/wiki/List_file
.. _align.report: https://www.mothur.org/wiki/Align.seqs
.. _remove.lineage: https://www.mothur.org/wiki/Remove.lineage

    """ ;
            gal:id "mothur_remove_lineage" ;
            gal:inputs [ gal:conditional [ gal:name "file" ;
                            gal:param [ gal:label "choose which file is used" ;
                                    gal:name "filetype" ;
                                    gal:option [ gal:selected "true" ;
                                            gal:value "usetaxonomy" ;
                                            dc:description "taxonomy" ],
                                        [ gal:value "useconstaxonomy" ;
                                            dc:description "constaxonomy" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:format "mothur.list" ;
                                            gal:label "list - list file" ;
                                            gal:name "list" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:format "mothur.shared" ;
                                            gal:label "shared - shared file" ;
                                            gal:name "shared" ;
                                            gal:optional "true" ;
                                            gal:type "data" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:name "taxons" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "2" ;
                                                            gal:name "value" ],
                                                        [ gal:index "2" ;
                                                            gal:name "name" ] ;
                                                    gal:filter [ gal:column "2" ;
                                                            gal:name "sorted_taxon" ;
                                                            gal:type "sort_by" ],
                                                        [ gal:column "2" ;
                                                            gal:name "unique_taxon" ;
                                                            gal:type "unique_value" ] ;
                                                    gal:from_dataset "taxonomy" ;
                                                    dc:description """
                        """ ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "\"" ],
                                                                [ gal:value "'" ] ;
                                                            dc:description """
                            """ ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ],
                                        [ gal:format "mothur.cons.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "constaxonomy - Constaxonomy file. Provide either a constaxonomy file or a taxonomy file" ;
                                            gal:name "taxonomy" ;
                                            gal:type "data" ] ;
                                    gal:value "useconstaxonomy" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:format "mothur.seq.taxonomy" ;
                                            gal:help "please make sure your file has no quotation marks in it" ;
                                            gal:label "taxonomy - Taxonomy" ;
                                            gal:name "taxonomy" ;
                                            gal:type "data" ],
                                        [ gal:label "Browse Taxons from Taxonomy" ;
                                            gal:multiple "true" ;
                                            gal:name "taxons" ;
                                            gal:optional "true" ;
                                            gal:options [ gal:column [ gal:index "1" ;
                                                            gal:name "value" ],
                                                        [ gal:index "1" ;
                                                            gal:name "name" ] ;
                                                    gal:filter [ gal:column "1" ;
                                                            gal:name "unique_taxon" ;
                                                            gal:type "unique_value" ],
                                                        [ gal:column "1" ;
                                                            gal:name "sorted_taxon" ;
                                                            gal:type "sort_by" ] ;
                                                    gal:from_dataset "taxonomy" ;
                                                    dc:description """
                        """ ] ;
                                            gal:sanitizer [ gal:valid [ gal:add [ gal:value ";" ],
                                                                [ gal:preset "string.printable" ] ;
                                                            gal:initial "default" ;
                                                            gal:remove [ gal:value "\"" ],
                                                                [ gal:value "'" ] ;
                                                            dc:description """
                            """ ] ;
                                                    dc:description """
                        """ ] ;
                                            gal:size "120" ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "usetaxonomy" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:format "fasta" ;
                            gal:label "fasta - Fasta Sequences" ;
                            gal:name "fasta_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.names" ;
                            gal:label "name - Sequences Name reference" ;
                            gal:name "name_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.count_table" ;
                            gal:help "The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. It can also contain group information" ;
                            gal:name "count" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "dups - Apply to duplicate names" ;
                            gal:name "dups" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.groups" ;
                            gal:label "group - Groups" ;
                            gal:name "group_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.align.report" ;
                            gal:label "alignreport - Align Report" ;
                            gal:name "alignreport_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:format "mothur.list" ;
                            gal:label "list - OTU List" ;
                            gal:name "list_in" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:area "True" ;
                            gal:help "If no taxons selected from file, Enter 1 or more taxons separated by dashes here, e.g. Bacteria;Firmicutes;-Bacteria;Actinobacteria; " ;
                            gal:label "taxon - Manually select Taxons for filtering" ;
                            gal:name "taxon" ;
                            gal:size "5x120" ;
                            gal:type "text" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Remove.lineage" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "mothur.list" ;
                                    gal:pattern "list_in.*?\\.(?P<designation>.*)\\.pick.*" ] ;
                            gal:filter "list_in" ;
                            gal:label "${tool.name} on ${on_string}: pick.list" ;
                            gal:name "list_out" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:data [ gal:filter "fasta_in" ;
                            gal:format_source "fasta_in" ;
                            gal:from_work_dir "fasta_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.fasta" ;
                            gal:name "fasta_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "alignreport_in" ;
                            gal:format "mothur.align.report" ;
                            gal:from_work_dir "alignreport_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.align.report" ;
                            gal:name "alignreport_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "group_in" ;
                            gal:format "mothur.groups" ;
                            gal:from_work_dir "group_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.group" ;
                            gal:name "group_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "name_in" ;
                            gal:format "mothur.names" ;
                            gal:from_work_dir "name_in*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.name" ;
                            gal:name "name_out" ;
                            dc:description """
            """ ],
                        [ gal:filter "count" ;
                            gal:format "mothur.count_table" ;
                            gal:from_work_dir "count*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.count_table" ;
                            gal:name "count_out" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "file.taxonomy*.pick.*" ;
                            gal:label "${tool.name} on ${on_string}: pick.taxonomy" ;
                            gal:name "taxonomy_out" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with taxons from file " ;
                            gal:output [ gal:md5 "57b4ab4e5b68f8c7d88a0f591c4fe4a1" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:name "taxons" ;
                                    gal:value "Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Dorea(99);,Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Roseburia(47);" ] ],
                        [ gal: " test with constaxonomy file " ;
                            gal:output [ gal:md5 "751fd9b99828998dd909115634027e5e" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:name "taxon" ;
                                    gal:value "Bacteria;Bacteroidetes;" ],
                                [ gal:name "filetype" ;
                                    gal:value "useconstaxonomy" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "example.constaxonomy" ] ],
                        [ gal: " test with constaxonomy file and taxons from file " ;
                            gal:output [ gal:md5 "017f53dd82f3e1afcf48778034b51685" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "useconstaxonomy" ],
                                [ gal:name "taxons" ;
                                    gal:value "Bacteria(100);Firmicutes(100);Clostridia(70);Clostridiales(70);Lachnospiraceae(51);unclassified;,Bacteria(100);Proteobacteria(100);Gammaproteobacteria(100);unclassified;unclassified;unclassified;" ],
                                [ gal:ftype "mothur.cons.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "example.constaxonomy" ] ],
                        [ gal: " test with multiple taxons and all additional files " ;
                            gal:output [ gal:ftype "fasta" ;
                                    gal:md5 "2c8415a797011e15f19ad85a9c994551" ;
                                    gal:name "fasta_out" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:md5 "119a2642bd730aad03f7d6c1f8b57a0b" ;
                                    gal:name "group_out" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:md5 "712b28c3a84d3c16ef202340717e3a91" ;
                                    gal:name "name_out" ],
                                [ gal:ftype "mothur.align.report" ;
                                    gal:md5 "d94be921c3ad1786db3e60dc23c3bc04" ;
                                    gal:name "alignreport_out" ],
                                [ gal:md5 "449200280fa6c332854204fe78a9bd12" ;
                                    gal:name "taxonomy_out" ] ;
                            gal:output_collection [ gal:count "36" ;
                                    gal:element [ gal:ftype "mothur.list" ;
                                            gal:md5 "5d4195793e2fc50979b377df468c436a" ;
                                            gal:name "0.05" ] ;
                                    gal:name "list_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:ftype "mothur.list" ;
                                    gal:name "list_in" ;
                                    gal:value "amazon.an.list" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta_in" ;
                                    gal:value "abrecovery.fasta" ],
                                [ gal:ftype "mothur.groups" ;
                                    gal:name "group_in" ;
                                    gal:value "abrecovery.groups" ],
                                [ gal:ftype "mothur.align.report" ;
                                    gal:name "alignreport_in" ;
                                    gal:value "Mock_S280_L001_R1_001_small.contigs.report" ],
                                [ gal:ftype "mothur.names" ;
                                    gal:name "name_in" ;
                                    gal:value "abrecovery.names" ],
                                [ gal:name "taxon" ;
                                    gal:value "Bacteria;Firmicutes;,Bacteria;Actinobacteria;" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ],
                        [ gal: " test with defaults and single taxon " ;
                            gal:output [ gal:md5 "a2a72b7f53ef6c907b8c4db906fcf03e" ;
                                    gal:name "taxonomy_out" ],
                                [ gal:md5 "6f89b3b99f337414d98f70fcda4b248e" ;
                                    gal:name "count_out" ] ;
                            gal:param [ gal:name "filetype" ;
                                    gal:value "usetaxonomy" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "taxon" ;
                                    gal:value "Bacteria;Firmicutes;" ],
                                [ gal:name "count" ;
                                    gal:value "amazon.count_table" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "remove.lineage" ;
            schema:sku 4 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## enable mothur to find blast
ln -s `dirname \\$(which mothur)`/* . &&

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$alignment.template' alignment.template.dat &&
ln -s '$tax.taxonomy' tax.taxonomy.dat &&
ln -s '$count' count.dat &&
ln -s '$name' name.dat &&

echo 'classify.seqs(
    fasta=fasta.dat,
    reference=alignment.template.dat,
    taxonomy=tax.taxonomy.dat,
    method=$classify.method,
    #if $classify.method == "wang":
        ksize=$classify.ksize,
        iters=$classify.iters,
        cutoff=$classify.cutoff,
        probs=$classify.probs,
    #elif $classify.method == "knn":
        numwanted=$classify.numwanted,
        search=$classify.search.algorithm,
        #if $classify.search.algorithm == "kmer":
            ksize=$classify.search.ksize,
        #elif $classify.search.algorithm == "blast":
            match=$classify.search.match,
            mismatch=$classify.search.mismatch,
            gapopen=$classify.search.gapopen,
            gapextend=$classify.search.gapextend,
        #end if
    #end if
    #if $count:
        count=count.dat,
    #end if
    #if $name:
        name=name.dat,
    #end if
    relabund=$relabund,
    output=$output,
    printlevel=$printlevel,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| ./mothur
| tee mothur.out.log
    """ ;
            gal:description "Assign sequences to taxonomy" ;
            gal:expand [ gal:citation [ gal:type "doi" ;
                            dc:description " 10.1128/AEM.03006-05" ],
                        [ gal:type "doi" ;
                            dc:description "10.1128/AEM.00062-07" ],
                        [ gal:type "doi" ;
                            dc:description "10.1093/nar/25.17.3389" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The classify.seqs_ command assigns sequences to chosen taxonomy outline.

.. _classify.seqs: https://www.mothur.org/wiki/Classify.seqs


v1.22.0: Updated for Mothur 1.33. Added count parameter (1.28), added relabund parameter (1.33), bayesian term changed to wang.

    """ ;
            gal:id "mothur_classify_seqs" ;
            gal:inputs [ gal:conditional [ gal:name "classify" ;
                            gal:param [ gal:argument "method" ;
                                    gal:label "method - Select a classification method" ;
                                    gal:option [ gal:value "knn" ;
                                            dc:description "K-Nearest Neighbor (knn)" ],
                                        [ gal:selected "true" ;
                                            gal:value "wang" ;
                                            dc:description "Wang (default)" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:conditional [ gal:name "search" ;
                                            gal:param [ gal:argument "search" ;
                                                    gal:help "" ;
                                                    gal:label "algorithm - " ;
                                                    gal:name "algorithm" ;
                                                    gal:option [ gal:value "suffix" ;
                                                            dc:description "Suffix Tree" ],
                                                        [ gal:value "distance" ;
                                                            dc:description "Distance" ],
                                                        [ gal:selected "true" ;
                                                            gal:value "kmer" ;
                                                            dc:description "Kmer (default)" ],
                                                        [ gal:value "blast" ;
                                                            dc:description "BLAST" ] ;
                                                    gal:type "select" ;
                                                    dc:description """
                        """ ] ;
                                            gal:when [ gal:param [ gal:argument "ksize" ;
                                                            gal:label "ksize - kmer length" ;
                                                            gal:min "1" ;
                                                            gal:type "integer" ;
                                                            gal:value "8" ] ;
                                                    gal:value "kmer" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "suffix" ],
                                                [ gal:param [ gal:argument "match" ;
                                                            gal:label "match - Pairwise alignment reward for a match" ;
                                                            gal:type "integer" ;
                                                            gal:value "1" ],
                                                        [ gal:argument "mismatch" ;
                                                            gal:label "mismatch - Pairwise alignment penalty for a mismatch" ;
                                                            gal:type "integer" ;
                                                            gal:value "-1" ],
                                                        [ gal:argument "gapopen" ;
                                                            gal:label "gapopen - Pairwise alignment penalty for opening a gap" ;
                                                            gal:type "integer" ;
                                                            gal:value "-2" ],
                                                        [ gal:argument "gapextend" ;
                                                            gal:label "gapextend - Pairwise alignment penalty for extending a gap" ;
                                                            gal:type "integer" ;
                                                            gal:value "-1" ] ;
                                                    gal:value "blast" ;
                                                    dc:description """
                        """ ],
                                                [ gal:value "distance" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:param [ gal:argument "numwanted" ;
                                            gal:label "numwanted - the number of sequence matches you want with the knn method" ;
                                            gal:type "integer" ;
                                            gal:value "10" ] ;
                                    gal:value "knn" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "probs" ;
                                            gal:checked "true" ;
                                            gal:falsevalue "false" ;
                                            gal:label "probs - Show probabilities" ;
                                            gal:truevalue "true" ;
                                            gal:type "boolean" ],
                                        [ gal:argument "ksize" ;
                                            gal:label "ksize - kmer length" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "8" ],
                                        [ gal:argument "cutoff" ;
                                            gal:label "cutoff - specify a bootstrap confidence threshold for your taxonomy" ;
                                            gal:min "0" ;
                                            gal:type "integer" ;
                                            gal:value "80" ],
                                        [ gal:argument "iters" ;
                                            gal:label "iters - iterations to do when calculating the bootstrap confidence score" ;
                                            gal:min "1" ;
                                            gal:type "integer" ;
                                            gal:value "100" ] ;
                                    gal:value "wang" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "alignment" ;
                            gal:param [ gal:label "Select Reference Template from" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "ref" ;
                                            dc:description "Cached Reference" ],
                                        [ gal:value "hist" ;
                                            dc:description "History" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "reference" ;
                                            gal:help "" ;
                                            gal:label "reference - Select an alignment database " ;
                                            gal:name "template" ;
                                            gal:options [ gal:from_data_table "mothur_aligndb" ;
                                                    dc:description """
                    """ ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "reference" ;
                                            gal:format "fasta" ;
                                            gal:help "" ;
                                            gal:label "reference - Reference to align with" ;
                                            gal:name "template" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ],
                        [ gal:name "tax" ;
                            gal:param [ gal:label "Select Taxonomy from" ;
                                    gal:name "source2" ;
                                    gal:option [ gal:value "hist" ;
                                            dc:description "History" ],
                                        [ gal:value "ref" ;
                                            dc:description "Cached Reference" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy reference" ;
                                            gal:type "data" ] ;
                                    gal:value "hist" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "taxonomy" ;
                                            gal:format "mothur.seq.taxonomy" ;
                                            gal:label "taxonomy - Taxonomy reference" ;
                                            gal:options [ gal:from_data_table "mothur_taxonomy" ] ;
                                            gal:type "select" ;
                                            dc:description """
                    """ ] ;
                                    gal:value "ref" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-printlevel" ],
                        [ gal:macro "param-output" ],
                        [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "count" ;
                            gal:format "mothur.count_table" ;
                            gal:label "count file" ;
                            gal:optional "true" ;
                            gal:type "data" ],
                        [ gal:argument "fasta" ;
                            gal:format "fasta" ;
                            gal:label "fasta - Candiate Sequences" ;
                            gal:type "data" ],
                        [ gal:argument "relabund" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "relabund - allows you to indicate that you want the summary files to be relative abundances rather than raw abundances" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "name" ;
                            gal:format "mothur.names" ;
                            gal:label "names file" ;
                            gal:optional "true" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Classify.seqs" ;
            gal:outputs [ gal:data [ gal:format "mothur.tax.summary" ;
                            gal:from_work_dir "fasta*.tax.summary" ;
                            gal:label "${tool.name} on ${on_string}: tax.summary" ;
                            gal:name "tax_summary" ],
                        [ gal:format "mothur.seq.taxonomy" ;
                            gal:from_work_dir "fasta*.taxonomy" ;
                            gal:label "${tool.name} on ${on_string}: taxonomy" ;
                            gal:name "taxonomy_out" ],
                        [ gal:format "tabular" ;
                            gal:from_work_dir "tax.taxonomy*.tree.sum" ;
                            gal:label "${tool.name} on ${on_string}: tree.sum" ;
                            gal:name "tree_sum" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with knn method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Bacteria" ],
                                                [ gal:text "Root" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "tax_summary" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "U68589" ],
                                                [ gal:text "Bacteria" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "fasta" ;
                                    gal:name "template" ;
                                    gal:value "abrecovery.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:name "source2" ;
                                    gal:value "hist" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "method" ;
                                    gal:value "knn" ] ],
                        [ gal: " test with wang method " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_text [ gal:text "U68589" ],
                                                [ gal:text "Bacteria" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_out" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Bacteria" ],
                                                [ gal:text "Root" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "tax_summary" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "Bacteria" ],
                                                [ gal:text "@WRAPPER_VERSION@" ],
                                                [ gal:text "Root" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:md5 "b44a392a719cf083e5a26d45904926c6" ;
                                    gal:name "tree_sum" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source2" ;
                                    gal:value "hist" ],
                                [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "amazon.fasta" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "template" ;
                                    gal:value "abrecovery.fasta" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ] ],
                        [ gal: " test with knn method and blast algorithm " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:expand [ gal:macro "test-taxsummary-format" ] ;
                                            gal:has_text [ gal:text "Bacteria" ],
                                                [ gal:text "Root" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.tax.summary" ;
                                    gal:name "tax_summary" ;
                                    dc:description """
                """ ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "AY457914" ],
                                                [ gal:text "Bacteria" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy_out" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "hist" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "template" ;
                                    gal:value "abrecovery.fasta" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "source2" ;
                                    gal:value "hist" ],
                                [ gal:ftype "mothur.seq.taxonomy" ;
                                    gal:name "taxonomy" ;
                                    gal:value "abrecovery.pds.wang.taxonomy" ],
                                [ gal:name "method" ;
                                    gal:value "knn" ],
                                [ gal:name "algorithm" ;
                                    gal:value "blast" ],
                                [ gal:ftype "fasta" ;
                                    gal:name "fasta" ;
                                    gal:value "abrecovery.fasta" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "classify.seqs" ;
            schema:sku 46 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&

echo 'dist.seqs(
    fasta=fasta.dat,
    #if $calc:
        calc=$calc,
    #end if
    countends=$countends,
    #if $cutoff:
        cutoff=$cutoff,
    #end if
    #if $output:
        output=$output,
    #end if
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "calculate uncorrected pairwise distances between aligned sequences" ;
            gal:expand [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1371/journal.pcbi.1000844" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "version_command" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The dist.seqs_ command will calculate uncorrected pairwise distances between aligned sequences.  The command will generate a column-formatted_distance_matrix_ that is compatible with the column option in the read.dist command. The command is also able to generate a phylip-formatted_distance_matrix_. There are several options for how to handle gap comparisons and terminal gaps.

.. _column-formatted_distance_matrix: https://www.mothur.org/wiki/Column-formatted_distance_matrix
.. _phylip-formatted_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _dist.seqs: https://www.mothur.org/wiki/Dist.seqs

v.1.20.0: Updated to Mothur 1.33

    """ ;
            gal:id "mothur_dist_seqs" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "calc - Calc Method - Gap Penality" ;
                            gal:name "calc" ;
                            gal:option [ gal:value "eachgap " ;
                                    dc:description "eachgap - penalize each gap" ],
                                [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "use default" ],
                                [ gal:value "nogaps" ;
                                    dc:description "nogaps - ignores gaps" ],
                                [ gal:value "onegap" ;
                                    dc:description "onegap - counts a string of gaps as a single gap" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "countends - Penalize terminal gaps" ;
                            gal:name "countends" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:format "mothur.align,fasta" ;
                            gal:label "fasta - Alignment Fasta" ;
                            gal:name "fasta" ;
                            gal:type "data" ],
                        [ gal:help "" ;
                            gal:label "output - Distance Matrix Output Format" ;
                            gal:name "output" ;
                            gal:option [ gal:selected "true" ;
                                    gal:value "" ;
                                    dc:description "Default Column-Formatted Matrix" ],
                                [ gal:value "lt" ;
                                    dc:description "Phylip formatted Lower Triangle Matrix" ],
                                [ gal:value "square" ;
                                    dc:description "Phylip formatted Square Matrix" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:help "Do not save any distances larger than this, a common value would be 0.10" ;
                            gal:label "cutoff - Distance Cutoff threshold - ignored if not > 0" ;
                            gal:min "0.0" ;
                            gal:name "cutoff" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Dist.seqs" ;
            gal:outputs [ gal:data [ gal:change_format [ gal:when [ gal:format "mothur.lower.dist" ;
                                            gal:input "output" ;
                                            gal:value "lt" ],
                                        [ gal:format "mothur.square.dist" ;
                                            gal:input "output" ;
                                            gal:value "square" ] ;
                                    dc:description """
                """ ] ;
                            gal:format "mothur.pair.dist" ;
                            gal:from_work_dir "fasta*.dist" ;
                            gal:label "${tool.name} on ${on_string}: dist" ;
                            gal:name "out_dist" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with default params " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.pair.dist" ;
                                    gal:md5 "2c4817bb8657b4df2dcb1f2a019f505e" ;
                                    gal:name "out_dist" ] ;
                            gal:param [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with all params custom " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:ftype "mothur.lower.dist" ;
                                    gal:md5 "8a5ccf1ad8f1c344cf4d3e2c97d4cdc6" ;
                                    gal:name "out_dist" ] ;
                            gal:param [ gal:name "cutoff" ;
                                    gal:value "0.3" ],
                                [ gal:name "countends" ;
                                    gal:value "false" ],
                                [ gal:name "output" ;
                                    gal:value "lt" ],
                                [ gal:ftype "mothur.align" ;
                                    gal:name "fasta" ;
                                    gal:value "HMP_MOCK.v35.align" ],
                                [ gal:name "calc" ;
                                    gal:value "nogaps" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "dist.seqs" ;
            schema:sku 37 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$input.infile' input.infile.dat &&

echo 'clearcut(
    #if $input.source == "dna":
        fasta=input.infile.dat,
        DNA=true,
    #elif $input.source == "aa":
        fasta=input.infile.dat,
        protein=true,
    #elif $input.source == "phylip":
        phylip=input.infile.dat,
    #end if
    #if $matrixout == "true":
        matrixout=matrixout.dist,
    #end if
    #if $seed:
        seed=$seed,
    #end if
    ntrees=$ntrees,
    norandom=$norandom,
    shuffle=$shuffle,
    expblen=$expblen,
    expdist=$expdist,
    neighbor=$neighbor
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Generate a tree using relaxed neighbor joining" ;
            gal:expand [ gal:macro "requirements" ],
                [ gal:macro "stdio" ],
                [ gal:macro "version_command" ],
                [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1093/bioinformatics/btl478" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The clearcut_ command runs clearcut

The clearcut command allows mothur users to run the clearcut program from within mothur. The clearcut program written by Initiative for Bioinformatics and Evolutionary Studies (IBEST) at the University of Idaho. 

Clearcut is a stand-alone reference implementation of relaxed neighbor joining (RNJ).

Clearcut is capable of taking either a distance matrix or a multiple sequence alignment (MSA) as input.  If necessary, Clearcut will compute corrected distances based on a configurable distance correction model (Jukes-Cantor or Kimura).  Clearcut outputs a phylogenetic tree in Newick format and an optional corrected distance matrix.

.. _clearcut: https://www.mothur.org/wiki/Clearcut

v.1.20.0: Trivial upgrade to Mothur 1.33

    """ ;
            gal:id "mothur_clearcut" ;
            gal:inputs [ gal:conditional [ gal:name "input" ;
                            gal:param [ gal:label "Distance Matrix" ;
                                    gal:name "source" ;
                                    gal:option [ gal:value "phylip" ;
                                            dc:description "Phylip Distance Matrix" ],
                                        [ gal:value "aa" ;
                                            dc:description "Protein Alignment Fasta" ],
                                        [ gal:value "dna" ;
                                            dc:description "DNA Alignment Fasta" ] ;
                                    gal:type "select" ;
                                    dc:description """
                """ ] ;
                            gal:when [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align" ;
                                            gal:label "fasta - Alignment Fasta" ;
                                            gal:name "infile" ;
                                            gal:type "data" ] ;
                                    gal:value "dna" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "phylip" ;
                                            gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                                            gal:label "phylip - Distance Matrix" ;
                                            gal:name "infile" ;
                                            gal:type "data" ] ;
                                    gal:value "phylip" ;
                                    dc:description """
                """ ],
                                [ gal:param [ gal:argument "fasta" ;
                                            gal:format "mothur.align" ;
                                            gal:label "fasta - Alignment Fasta" ;
                                            gal:name "infile" ;
                                            gal:type "data" ] ;
                                    gal:value "aa" ;
                                    dc:description """
                """ ] ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:argument "expblen" ;
                            gal:checked "false" ;
                            gal:falsevalue "OFF" ;
                            gal:label "expblen - Use exponential notation for branch lengths" ;
                            gal:truevalue "ON" ;
                            gal:type "boolean" ],
                        [ gal:argument "seed" ;
                            gal:label "seed - Set the PRNG seed to a specific value" ;
                            gal:min "0" ;
                            gal:optional "true" ;
                            gal:type "integer" ;
                            gal:value "" ],
                        [ gal:argument "ntrees" ;
                            gal:label "ntrees - the number of output trees you want clearcut to generate (default 1)" ;
                            gal:type "integer" ;
                            gal:value "1" ],
                        [ gal:argument "matrixout" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "matrixout - Generate a Distance Matrix" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "norandom" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "norandom - Attempt joins deterministically" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "shuffle" ;
                            gal:checked "false" ;
                            gal:falsevalue "false" ;
                            gal:label "shuffle - Randomly shuffle the distance matrix" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ],
                        [ gal:argument "expdist" ;
                            gal:checked "false" ;
                            gal:falsevalue "OFF" ;
                            gal:label "expdist - Use exponential notation for distance" ;
                            gal:truevalue "ON" ;
                            gal:type "boolean" ],
                        [ gal:argument "neighbor" ;
                            gal:checked "true" ;
                            gal:falsevalue "false" ;
                            gal:label "neighbor - Use traditional Neighbor-Joining algorithm" ;
                            gal:truevalue "true" ;
                            gal:type "boolean" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Clearcut" ;
            gal:outputs [ gal:data [ gal:format "mothur.tre" ;
                            gal:from_work_dir "input.infile.tre" ;
                            gal:label "${tool.name} on ${on_string}: tree" ;
                            gal:name "tree" ],
                        [ gal:filter "matrixout" ;
                            gal:format "mothur.lower.dist" ;
                            gal:from_work_dir "matrixout.dist" ;
                            gal:label "${tool.name} on ${on_string}: Phylip Distance Matrix" ;
                            gal:name "matrix" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with fasta (dna) and matrixout" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "54ca5ad8aea6598f8ed03e0616b1b568" ;
                                    gal:name "tree" ],
                                [ gal:file "clearcut2.matrix" ;
                                    gal:ftype "mothur.lower.dist" ;
                                    gal:name "matrix" ] ;
                            gal:param [ gal:name "infile" ;
                                    gal:value "amazon.align_head" ],
                                [ gal:name "matrixout" ;
                                    gal:value "true" ],
                                [ gal:name "source" ;
                                    gal:value "dna" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with phylip and params set" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:file "clearcut1.matrix" ;
                                    gal:ftype "mothur.lower.dist" ;
                                    gal:name "matrix" ],
                                [ gal:assert_contents [ gal:has_text [ gal:text "group" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:name "tree" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "matrixout" ;
                                    gal:value "true" ],
                                [ gal:name "norandom" ;
                                    gal:value "true" ],
                                [ gal:name "ntrees" ;
                                    gal:value "3" ],
                                [ gal:name "expblen" ;
                                    gal:value "ON" ],
                                [ gal:name "infile" ;
                                    gal:value "env.dist" ],
                                [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:name "shuffle" ;
                                    gal:value "true" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "expdist" ;
                                    gal:value "ON" ],
                                [ gal:name "neighbor" ;
                                    gal:value "false" ] ],
                        [ gal: " test with phylip and default params" ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:md5 "9c78d54267a985c8ae37dcfbddf6f8d0" ;
                                    gal:name "tree" ] ;
                            gal:param [ gal:name "source" ;
                                    gal:value "phylip" ],
                                [ gal:name "infile" ;
                                    gal:value "env.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "clearcut" ;
            schema:sku 71 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$dist' dist.dat &&
ln -s '$design' design.dat &&

echo 'homova(
    phylip=dist.dat,
    design=design.dat,
    #if $sets:
        sets=${ str($sets).replace(",","-") },
    #end if
    iters=$iters,
    alpha=$alpha
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log
    """ ;
            gal:description "Homogeneity of molecular variance" ;
            gal:expand [ gal:citation [ gal:type "doi" ;
                            dc:description "10.1046/j.1420-9101.1996.9020153.x" ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ],
                [ gal:macro "requirements" ],
                [ gal:macro "version_command" ],
                [ gal:macro "stdio" ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The homova_ command calculates the homogeneity of molecular variance (HOMOVA) from a phylip_distance_matrix_, a nonparametric analog of Bartlett's test for homo- geneity of variance, which has been used in population genetics to test the hypothesis that the genetic diversity within two or more populations is homogeneous.

A design file partitions a list of names into groups.  It is a tab-delimited file with 2 columns: name and group, e.g. :
        ======= =======
        duck    bird
        cow     mammal
        pig     mammal
        goose   bird
        cobra   reptile
        ======= =======

The Make_Design tool can construct a design file from a Mothur dataset that contains group names.

.. _phylip_distance_matrix: https://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _homova: https://www.mothur.org/wiki/Homova

v.1.20.0: Updated to Mothur 1.33, added sets parameter

    """ ;
            gal:id "mothur_homova" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:label "sets - Which of the sets in your design file you would like to analyze. The set names are separated by dashes. The default is all sets in designfile" ;
                            gal:multiple "true" ;
                            gal:name "sets" ;
                            gal:options [ gal:filter [ gal:key "groups" ;
                                            gal:ref "design" ;
                                            gal:type "data_meta" ] ;
                                    dc:description """
                """ ] ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:format "mothur.design" ;
                            gal:help "design has 2 columns: group(col 1) and grouping(col 2) (separated by a TAB character)" ;
                            gal:label "design - assign groups to new grouping" ;
                            gal:name "design" ;
                            gal:type "data" ],
                        [ gal:label "iters - Number of random configuration to try (default 1000)" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:label "alpha - acceptable stopping precision (default 0.05)" ;
                            gal:min "0.0" ;
                            gal:name "alpha" ;
                            gal:optional "true" ;
                            gal:type "float" ;
                            gal:value "0.05" ],
                        [ gal:format "mothur.dist,mothur.lower.dist,mothur.square.dist" ;
                            gal:label "phylip - Distance Matrix" ;
                            gal:name "dist" ;
                            gal:type "data" ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Homova" ;
            gal:outputs [ gal:data [ gal:format "tabular" ;
                            gal:from_work_dir "dist*.homova" ;
                            gal:label "${tool.name} on ${on_string}: homova" ;
                            gal:name "homova" ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test default settings " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "^HOMOVA\\tBValue\\tP-value\\tSSwithin/\\(Ni-1\\)_values$" ] ;
                                            gal:has_text [ gal:text "A-B" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "homova" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "tabular" ;
                                    gal:name "design" ;
                                    gal:value "amazon.design" ] ],
                        [ gal: " test with subsets " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output [ gal:assert_contents [ gal:has_line_matching [ gal:expression "A\\t.*$" ],
                                                [ gal:expression "^HOMOVA\\tBValue\\tP-value\\tSSwithin/\\(Ni-1\\)_values$" ] ;
                                            dc:description """
                    """ ] ;
                                    gal:ftype "tabular" ;
                                    gal:name "homova" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:ftype "mothur.dist" ;
                                    gal:name "dist" ;
                                    gal:value "amazon.dist" ],
                                [ gal:name "sets" ;
                                    gal:value "A" ],
                                [ gal:ftype "mothur.design" ;
                                    gal:name "design" ;
                                    gal:value "amazon.design" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "homova" ;
            schema:sku 109 ],
        [ a gal:Module,
                ngsp:Module ;
            gal:command """
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$otu' otu.dat &&

echo 'rarefaction.single(
    #if $otu.is_of_type("mothur.rabund"):
        rabund=otu.dat,
    #elif $otu.is_of_type("mothur.sabund"):
        sabund=otu.dat,
    #elif $otu.is_of_type("mothur.shared"):
        shared=otu.dat,
    #elif $otu.is_of_type("mothur.list"):
        list=otu.dat,
    #end if
    #if $label:
        label=${ str($label).replace(",","-") },
    #end if
    calc=${ str($calc).replace(",","-") },
    abund=$abund,
    iters=$iters,
    freq=$freq,
    processors='\\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## rename output from sobs calculator to be consistent with others
#if 'sobs' in str($calc).split(','):
    && mv otu\\.*rarefaction otu.r_sobs
#end if
    """ ;
            gal:description "Generate intra-sample rarefaction curves for OTUs" ;
            gal:expand [ gal:macro "version_command" ],
                [ gal:macro "stdio" ],
                [ gal:macro "requirements" ],
                [ gal:citation [ gal:type "bibtex" ;
                            dc:description """
@book{magurran2013measuring,
  title={Measuring biological diversity},
  author={Magurran, Anne E},
  year={2013},
  publisher={John Wiley \\& Sons}
}
        """ ] ;
                    gal:macro "citations" ;
                    dc:description """
        """ ] ;
            gal:help """

@MOTHUR_OVERVIEW@

**Command Documentation**

The rarefaction.single_ command generates intra-sample rarefaction curves using a re-sampling without replacement approach. Rarefaction curves provide a way of comparing the richness observed in different samples.  For calc parameter choices see: https://www.mothur.org/wiki/Calculators

.. _rarefaction.single: https://www.mothur.org/wiki/Rarefaction.single

    """ ;
            gal:id "mothur_rarefaction_single" ;
            gal:inputs [ gal:expand [ gal:macro "param-savelog" ] ;
                    gal:param [ gal:expand [ gal:macro "labeloptions" ] ;
                            gal:label "label - OTU Labels" ;
                            gal:multiple "true" ;
                            gal:name "label" ;
                            gal:type "select" ;
                            dc:description """
            """ ],
                        [ gal:label "abund - ACE Estimator threshold for abundant versus rare OTUs" ;
                            gal:min "0" ;
                            gal:name "abund" ;
                            gal:type "integer" ;
                            gal:value "10" ],
                        [ gal:label "iters - Number of randomizations" ;
                            gal:min "0" ;
                            gal:name "iters" ;
                            gal:type "integer" ;
                            gal:value "1000" ],
                        [ gal:format "mothur.list,mothur.rabund,mothur.sabund,mothur.shared" ;
                            gal:label "list,rabund,sabund,shared - OTU List" ;
                            gal:name "otu" ;
                            gal:type "data" ],
                        [ gal:help "if between 0 and 1 the fraction of sequences to sample, if greater than one - report every n iterations" ;
                            gal:label "freq - Reporting frequency" ;
                            gal:max "100" ;
                            gal:min "0" ;
                            gal:name "freq" ;
                            gal:type "float" ;
                            gal:value "100" ],
                        [ gal:label "calc - Calculators (Uses defaults if none selected)" ;
                            gal:multiple "true" ;
                            gal:name "calc" ;
                            gal:option [ gal:value "ace" ;
                                    dc:description "ace - Community richness the ACE estimator" ],
                                [ gal:value "coverage" ;
                                    dc:description "coverage - Community diversity the sampling coverage " ],
                                [ gal:value "smithwilson" ;
                                    dc:description "smithwilson - Community evenness Smith and Wilson's metric of community evenness" ],
                                [ gal:value "jack" ;
                                    dc:description "jack - Community richness the jackknife estimator" ],
                                [ gal:value "npshannon" ;
                                    dc:description "npshannon - Community diversity the non-parametric Shannon index" ],
                                [ gal:value "invsimpson" ;
                                    dc:description "invsimpson - Community diversity the Simpson index" ],
                                [ gal:value "simpson" ;
                                    dc:description "simpson - Community diversity the Simpson index" ],
                                [ gal:selected "true" ;
                                    gal:value "sobs" ;
                                    dc:description "sobs - Community richness the observed richness" ],
                                [ gal:value "chao" ;
                                    dc:description "chao - Community richness the Chao1 estimator" ],
                                [ gal:value "nseqs" ;
                                    dc:description "nseqs - Utility the number of sequences in a sample" ],
                                [ gal:value "shannoneven" ;
                                    dc:description "shannoneven - Community evenness a Shannon index-based measure of evenness" ],
                                [ gal:value "heip" ;
                                    dc:description "heip - Community evenness Heip's metric of community evenness" ],
                                [ gal:value "simpsoneven" ;
                                    dc:description "simpsoneven - Community evenness a Simpson index-based measure of evenness" ],
                                [ gal:value "shannon" ;
                                    dc:description "shannon - Community diversity the Shannon index" ],
                                [ gal:value "bootstrap" ;
                                    dc:description "bootstrap - Community richness the bootstrap estimator" ] ;
                            gal:type "select" ;
                            dc:description """
            """ ] ;
                    dc:description """
        """ ] ;
            gal:macros [ gal:import "macros.xml" ;
                    dc:description """
        """ ] ;
            gal:name "Rarefaction.single" ;
            gal:outputs [ gal:collection [ gal:discover_datasets [ gal:format "tabular" ;
                                    gal:pattern ".*?(\\.groups)?\\.r_(?P<designation>.*)" ] ;
                            gal:label "${tool.name} on ${on_string}: rarefaction curves" ;
                            gal:name "rarefactioncurves" ;
                            gal:type "list" ;
                            dc:description """
            """ ] ;
                    gal:expand [ gal:macro "logfile-output" ] ;
                    dc:description """
        """ ] ;
            gal:profile "16.07" ;
            gal:tests [ gal:test [ gal: " test with default values " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "1" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "c4c1f1970edf87ea5103e0704130f079" ;
                                            gal:name "sobs" ] ;
                                    gal:name "rarefactioncurves" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ] ],
                        [ gal: " test with all calculators and subset of labels " ;
                            gal:expand [ gal:macro "logfile-test" ] ;
                            gal:output_collection [ gal:count "15" ;
                                    gal:element [ gal:ftype "tabular" ;
                                            gal:md5 "8d6b7ad9a68c30c882e93b17d343042a" ;
                                            gal:name "simpson" ] ;
                                    gal:name "rarefactioncurves" ;
                                    dc:description """
                """ ] ;
                            gal:param [ gal:name "calc" ;
                                    gal:value "ace,bootstrap,chao,jack,sobs,simpsoneven,shannoneven,heip,smithwilson,coverage,simpson,invsimpson,shannon,npshannon,nseqs" ],
                                [ gal:ftype "mothur.shared" ;
                                    gal:name "otu" ;
                                    gal:value "amazon.an.shared" ],
                                [ gal:name "savelog" ;
                                    gal:value "true" ],
                                [ gal:name "label" ;
                                    gal:value "0.03,0.05,0.36,0.55" ] ] ;
                    dc:description """
        """ ] ;
            gal:version "@WRAPPER_VERSION@.0" ;
            dc:description """
    """ ;
            dc:title "rarefaction.single" ;
            schema:sku 50 ] ;
    dc:title "Mothur" .

